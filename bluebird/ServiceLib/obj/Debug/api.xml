<api>
  <package name="com.morpho.android.annotation" jni-name="com/morpho/android/annotation">
    <interface abstract="true" deprecated="not deprecated" final="false" name="WakeLockabble" static="false" visibility="public" jni-signature="Lcom/morpho/android/annotation/WakeLockabble;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="WakeLockAspect" static="false" visibility="public" jni-signature="Lcom/morpho/android/annotation/WakeLockAspect;">
      <constructor deprecated="not deprecated" final="false" name="WakeLockAspect" jni-signature="()V" bridge="false" static="false" type="com.morpho.android.annotation.WakeLockAspect" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="aroundAdvice" jni-signature="(Lorg/aspectj/lang/ProceedingJoinPoint;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="joinPoint" type="org.aspectj.lang.ProceedingJoinPoint" jni-type="Lorg/aspectj/lang/ProceedingJoinPoint;">
        </parameter>
        <exception name="Throwable" type="java.lang.Throwable">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="aspectOf" jni-signature="()Lcom/morpho/android/annotation/WakeLockAspect;" bridge="false" native="false" return="com.morpho.android.annotation.WakeLockAspect" jni-return="Lcom/morpho/android/annotation/WakeLockAspect;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasAspect" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
  </package>
  <package name="com.morpho.android.usb" jni-name="com/morpho/android/usb">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="USBConstants" static="false" visibility="public" jni-signature="Lcom/morpho/android/usb/USBConstants;">
      <constructor deprecated="not deprecated" final="false" name="USBConstants" jni-signature="()V" bridge="false" static="false" type="com.morpho.android.usb.USBConstants" synthetic="false" visibility="public">
      </constructor>
      <field deprecated="not deprecated" final="true" name="DEFAULT_PACKET_SIZE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="8" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="DEFAULT_STRING_DESCRIPTOR_SIZE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="64" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FORCE_CLAIM" jni-signature="Z" static="true" transient="false" type="boolean" type-generic-aware="boolean" value="true" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="INVALID_USB_INTERFACE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="OFFSET_MANUFACTRURER_IDX" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="14" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="OFFSET_MAX_PACKET_SIZE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="7" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="OFFSET_PRODUCT_IDX" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="15" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="OFFSET_SERIAL_IDX" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="16" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_CANNOT_CLAIM_INTERFACE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_CANNOT_GET_STRING_DESCRIPTOR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-4" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_CANNOT_RELEASE_INTERFACE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-5" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_DEVICE_NOT_CONNECTED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-6" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_FEATURE_REPORT_GET_FAILURE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-3" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_FEATURE_REPORT_SEND_FAILURE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-2" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_UNABLE_TO_READ_DATA" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-8" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_ERROR_UNABLE_TO_WRITE_DATA" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-7" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RETURN_SUCCESS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="0" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SPUSB_TIMEOUT_INFINITE" jni-signature="J" static="true" transient="false" type="long" type-generic-aware="long" value="-1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="TIMEOUT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1000" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_DESCRIPTOR_DEVICE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_DESCRIPTOR_REPORT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="3" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_DESCRIPTOR_STRING" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="3" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_DEVICE_DESCRIPTOR_LANGUAGE_ENGLISH" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1033" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_DEVICE_DESCRIPTOR_LENGTH" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="18" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_ADDRESS_MASK" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="15" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_DIR_MASK" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="128" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_IN" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="128" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_OUT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="0" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_TYPE_BULK" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="2" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_TYPE_CONTROL" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="0" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_TYPE_INTERRUPT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="3" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_TYPE_ISOCHRONOUS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_ENDPOINT_TYPE_MASK" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="3" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_MAXINTERFACES" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="32" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_RECIPIENT_INTERFACE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_REPORT_TYPE_FEATURE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="768" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_REPORT_TYPE_STRING" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="768" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_REQUEST_GET_DESCRIPTOR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="6" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_REQUEST_GET_FEATURE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_REQUEST_SET_FEATURE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="9" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_REQUEST_TYPE_CLASS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="32" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_REQUEST_TYPE_STANDARD" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="0" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="USBDevice" static="false" visibility="public" jni-signature="Lcom/morpho/android/usb/USBDevice;">
      <constructor deprecated="not deprecated" final="false" name="USBDevice" jni-signature="(Lcom/morpho/android/usb/USBDeviceAttributes;Landroid/hardware/usb/UsbManager;Landroid/hardware/usb/UsbDevice;)V" bridge="false" static="false" type="com.morpho.android.usb.USBDevice" synthetic="false" visibility="public">
        <parameter name="iAttributes" type="com.morpho.android.usb.USBDeviceAttributes" jni-type="Lcom/morpho/android/usb/USBDeviceAttributes;">
        </parameter>
        <parameter name="iManager" type="android.hardware.usb.UsbManager" jni-type="Landroid/hardware/usb/UsbManager;">
        </parameter>
        <parameter name="iDevice" type="android.hardware.usb.UsbDevice" jni-type="Landroid/hardware/usb/UsbDevice;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="CreateInterface" jni-signature="(I)Landroid/hardware/usb/UsbInterface;" bridge="false" native="false" return="android.hardware.usb.UsbInterface" jni-return="Landroid/hardware/usb/UsbInterface;" static="false" synchronized="true" synthetic="false" visibility="public">
        <parameter name="interfaceNumber" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="claimInterface" jni-signature="()Landroid/hardware/usb/UsbInterface;" bridge="false" native="false" return="android.hardware.usb.UsbInterface" jni-return="Landroid/hardware/usb/UsbInterface;" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="close" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="findEndPoint" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAttributes" jni-signature="()Lcom/morpho/android/usb/USBDeviceAttributes;" bridge="false" native="false" return="com.morpho.android.usb.USBDeviceAttributes" jni-return="Lcom/morpho/android/usb/USBDeviceAttributes;" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMaxPacketInSize" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMaxPacketOutSize" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getProductString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="true" synthetic="false" visibility="public">
        <exception name="Exception" type="java.lang.Exception">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSerialNumberString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getStringSimple" jni-signature="([BI)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
        <parameter name="buffer" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="index" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasPermission" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="open" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
        <exception name="Exception" type="java.lang.Exception">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="read" jni-signature="([BII)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
        <parameter name="data" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="datasize" type="int" jni-type="I">
        </parameter>
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="write" jni-signature="([BII)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
        <parameter name="data" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="datasize" type="int" jni-type="I">
        </parameter>
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="false" name="mAttributes" jni-signature="Lcom/morpho/android/usb/USBDeviceAttributes;" static="false" transient="false" type="com.morpho.android.usb.USBDeviceAttributes" type-generic-aware="com.morpho.android.usb.USBDeviceAttributes" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mConnection" jni-signature="Landroid/hardware/usb/UsbDeviceConnection;" static="false" transient="false" type="android.hardware.usb.UsbDeviceConnection" type-generic-aware="android.hardware.usb.UsbDeviceConnection" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mDevice" jni-signature="Landroid/hardware/usb/UsbDevice;" static="false" transient="false" type="android.hardware.usb.UsbDevice" type-generic-aware="android.hardware.usb.UsbDevice" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mEndpointIn" jni-signature="Landroid/hardware/usb/UsbEndpoint;" static="false" transient="false" type="android.hardware.usb.UsbEndpoint" type-generic-aware="android.hardware.usb.UsbEndpoint" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mEndpointOut" jni-signature="Landroid/hardware/usb/UsbEndpoint;" static="false" transient="false" type="android.hardware.usb.UsbEndpoint" type-generic-aware="android.hardware.usb.UsbEndpoint" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mFreindlyName" jni-signature="Ljava/lang/String;" static="false" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mInterface" jni-signature="Landroid/hardware/usb/UsbInterface;" static="false" transient="false" type="android.hardware.usb.UsbInterface" type-generic-aware="android.hardware.usb.UsbInterface" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mManager" jni-signature="Landroid/hardware/usb/UsbManager;" static="true" transient="false" type="android.hardware.usb.UsbManager" type-generic-aware="android.hardware.usb.UsbManager" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mMaxPacketInSize" jni-signature="I" static="false" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="mMaxPacketOutSize" jni-signature="I" static="false" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="USBDeviceAttributes" static="false" visibility="public" jni-signature="Lcom/morpho/android/usb/USBDeviceAttributes;">
      <implements name="android.os.Parcelable" name-generic-aware="android.os.Parcelable" jni-type="Landroid/os/Parcelable;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="USBDeviceAttributes" jni-signature="(II)V" bridge="false" static="false" type="com.morpho.android.usb.USBDeviceAttributes" synthetic="false" visibility="public">
        <parameter name="vendorId" type="int" jni-type="I">
        </parameter>
        <parameter name="productId" type="int" jni-type="I">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="USBDeviceAttributes" jni-signature="(III)V" bridge="false" static="false" type="com.morpho.android.usb.USBDeviceAttributes" synthetic="false" visibility="public">
        <parameter name="vendorId" type="int" jni-type="I">
        </parameter>
        <parameter name="productId" type="int" jni-type="I">
        </parameter>
        <parameter name="devType" type="int" jni-type="I">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="USBDeviceAttributes" jni-signature="(Ljava/lang/String;III)V" bridge="false" static="false" type="com.morpho.android.usb.USBDeviceAttributes" synthetic="false" visibility="public">
        <parameter name="path" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="vendorId" type="int" jni-type="I">
        </parameter>
        <parameter name="productId" type="int" jni-type="I">
        </parameter>
        <parameter name="interfaceNumber" type="int" jni-type="I">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="describeContents" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeviceType" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFreindlyName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getInterfaceNumber" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getManufacturer" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPath" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getProduct" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getProductId" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getVendorId" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setDeviceType" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="deviceType" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setFreindlyName" jni-signature="(Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="freindlyName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setProduct" jni-signature="(Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="product" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="writeToParcel" jni-signature="(Landroid/os/Parcel;I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="dest" type="android.os.Parcel" jni-type="Landroid/os/Parcel;">
        </parameter>
        <parameter name="flags" type="int" jni-type="I">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="false" name="CREATOR" jni-signature="Landroid/os/Parcelable$Creator;" static="true" transient="false" type="android.os.Parcelable.Creator" type-generic-aware="android.os.Parcelable.Creator&lt;com.morpho.android.usb.USBDeviceAttributes&gt;" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="USBDeviceAttributes.1" static="false" visibility="" jni-signature="Lcom/morpho/android/usb/USBDeviceAttributes$1;">
      <implements name="android.os.Parcelable.Creator" name-generic-aware="android.os.Parcelable.Creator&lt;com.morpho.android.usb.USBDeviceAttributes&gt;" jni-type="Landroid/os/Parcelable$Creator&lt;Lcom/morpho/android/usb/USBDeviceAttributes;&gt;;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="createFromParcel" jni-signature="(Landroid/os/Parcel;)Lcom/morpho/android/usb/USBDeviceAttributes;" bridge="false" native="false" return="com.morpho.android.usb.USBDeviceAttributes" jni-return="Lcom/morpho/android/usb/USBDeviceAttributes;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="parcel" type="android.os.Parcel" jni-type="Landroid/os/Parcel;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="newArray" jni-signature="(I)[Lcom/morpho/android/usb/USBDeviceAttributes;" bridge="false" native="false" return="com.morpho.android.usb.USBDeviceAttributes[]" jni-return="[Lcom/morpho/android/usb/USBDeviceAttributes;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="size" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="USBManager" static="false" visibility="public" jni-signature="Lcom/morpho/android/usb/USBManager;">
      <method abstract="false" deprecated="not deprecated" final="false" name="IsUsbDaemonStarted" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="checkWakeLockPermission" jni-signature="(Landroid/content/Context;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="context" type="android.content.Context" jni-type="Landroid/content/Context;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="closeUsbDeviceConnection" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enumerate" jni-signature="()[Lcom/morpho/android/usb/USBDeviceAttributes;" bridge="false" native="false" return="com.morpho.android.usb.USBDeviceAttributes[]" jni-return="[Lcom/morpho/android/usb/USBDeviceAttributes;" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDevice" jni-signature="(I)Lcom/morpho/android/usb/USBDevice;" bridge="false" native="false" return="com.morpho.android.usb.USBDevice" jni-return="Lcom/morpho/android/usb/USBDevice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeviceInformations" jni-signature="(Ljava/lang/String;[I[I[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="serialNumber" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="bus" type="int[]" jni-type="[I">
        </parameter>
        <parameter name="address" type="int[]" jni-type="[I">
        </parameter>
        <parameter name="fd" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeviceModel" jni-signature="(Lcom/morpho/android/usb/USBDeviceAttributes;)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="true" synthetic="false" visibility="public">
        <parameter name="attribs" type="com.morpho.android.usb.USBDeviceAttributes" jni-type="Lcom/morpho/android/usb/USBDeviceAttributes;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFileDescriptor" jni-signature="(II)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="bus" type="int" jni-type="I">
        </parameter>
        <parameter name="deviceAddress" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getInstance" jni-signature="()Lcom/morpho/android/usb/USBManager;" bridge="false" native="false" return="com.morpho.android.usb.USBManager" jni-return="Lcom/morpho/android/usb/USBManager;" static="true" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbDevices" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public">
        <exception name="Exception" type="java.lang.Exception">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUsbDaemonVersion" jni-signature="()Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initialize" jni-signature="()V" bridge="false" native="true" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initialize" jni-signature="(Landroid/app/Activity;Ljava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="context" type="android.app.Activity" jni-type="Landroid/app/Activity;">
        </parameter>
        <parameter name="packagePath" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initialize" jni-signature="(Landroid/content/Context;Ljava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="context" type="android.content.Context" jni-type="Landroid/content/Context;">
        </parameter>
        <parameter name="packagePath" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initialize" jni-signature="(Landroid/content/Context;Ljava/lang/String;Z)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="context" type="android.content.Context" jni-type="Landroid/content/Context;">
        </parameter>
        <parameter name="packagePath" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="enableWakeLock" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isDevicesHasPermission" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isSupported" jni-signature="(Lcom/morpho/android/usb/USBDeviceAttributes;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="true" synthetic="false" visibility="public">
        <parameter name="attribs" type="com.morpho.android.usb.USBDeviceAttributes" jni-type="Lcom/morpho/android/usb/USBDeviceAttributes;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="listDevices" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="true" synthetic="false" visibility="public">
        <exception name="Exception" type="java.lang.Exception">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="scanDevice" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="unRegister" jni-signature="(Landroid/content/Context;Lcom/morpho/morphosmart/sdk/MorphoDevice$ScreenBroadcastReceiver;)V" bridge="false" native="false" return="void" jni-return="V" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="ctx" type="android.content.Context" jni-type="Landroid/content/Context;">
        </parameter>
        <parameter name="receiver" type="com.morpho.morphosmart.sdk.MorphoDevice.ScreenBroadcastReceiver" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDevice$ScreenBroadcastReceiver;">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="false" name="ACTION_USB_PERMISSION" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_CBM" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;CBM&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_CBME3" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;CBM-E3&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_CBMV3" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;CBM-V3&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_FVP" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO FVP&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_FVP_C" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO FVP_C&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_FVP_CL" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO FVP_CL&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MASIGMA" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MA SIGMA&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MEP" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MEPUSB&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO100" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO100&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO1300E3" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO1300-E3&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO1300V3" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO1300-V3&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO1350" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO1350&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO1350E3" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO1350-E3&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO1350V3" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO1350-V3&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO300" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO300&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SOFTWAREID_MSO350" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;MSO350&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="WakeLockEnabled" jni-signature="Z" static="true" transient="false" type="boolean" type-generic-aware="boolean" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="context" jni-signature="Landroid/content/Context;" static="true" transient="false" type="android.content.Context" type-generic-aware="android.content.Context" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="screenReceiverMap" jni-signature="Ljava/util/Map;" static="true" transient="false" type="java.util.Map" type-generic-aware="java.util.Map&lt;android.content.Context, com.morpho.morphosmart.sdk.MorphoDevice.ScreenBroadcastReceiver&gt;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="waitReboot" jni-signature="Z" static="true" transient="false" type="boolean" type-generic-aware="boolean" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="USBManager.MphDevice" static="false" visibility="" jni-signature="Lcom/morpho/android/usb/USBManager$MphDevice;">
      <constructor deprecated="not deprecated" final="false" name="USBManager.MphDevice" jni-signature="(Lcom/morpho/android/usb/USBManager;)V" bridge="false" static="false" type="com.morpho.android.usb.USBManager.MphDevice" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="USBManager.MphDevice" jni-signature="(Lcom/morpho/android/usb/USBManager;Ljava/lang/String;Landroid/hardware/usb/UsbDevice;I)V" bridge="false" static="false" type="com.morpho.android.usb.USBManager.MphDevice" synthetic="false" visibility="public">
        <parameter name="devName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="usbDevice" type="android.hardware.usb.UsbDevice" jni-type="Landroid/hardware/usb/UsbDevice;">
        </parameter>
        <parameter name="usbEvent" type="int" jni-type="I">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDevName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUsbDevice" jni-signature="()Landroid/hardware/usb/UsbDevice;" bridge="false" native="false" return="android.hardware.usb.UsbDevice" jni-return="Landroid/hardware/usb/UsbDevice;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUsbEvent" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
  </package>
  <package name="com.morpho.morphosmart.device" jni-name="com/morpho/morphosmart/device">
    <interface abstract="true" deprecated="not deprecated" final="false" name="IMophoDeviceManager" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/device/IMophoDeviceManager;">
      <method abstract="true" deprecated="not deprecated" final="false" name="closeDevice" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="comReceive" jni-signature="(I)[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="comSend" jni-signature="(I[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="int" jni-type="I">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getUsbDeviceName" jni-signature="(I)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="initUsbDevicesNameEnum" jni-signature="([I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="openUsbDevice" jni-signature="(Ljava/lang/String;I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
    </interface>
  </package>
  <package name="com.morpho.morphosmart.logger" jni-name="com/morpho/morphosmart/logger">
    <interface abstract="true" deprecated="not deprecated" final="false" name="ISubscriber" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/logger/ISubscriber;">
      <method abstract="true" deprecated="not deprecated" final="false" name="notification" jni-signature="(Lcom/morpho/morphosmart/logger/LogLevel;Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.logger.LogLevel" jni-type="Lcom/morpho/morphosmart/logger/LogLevel;">
        </parameter>
        <parameter name="p1" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="Logger" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/logger/Logger;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getInstance" jni-signature="()Lcom/morpho/morphosmart/logger/Logger;" bridge="false" native="false" return="com.morpho.morphosmart.logger.Logger" jni-return="Lcom/morpho/morphosmart/logger/Logger;" static="true" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="log" jni-signature="(Lcom/morpho/morphosmart/logger/LogLevel;Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.logger.LogLevel" jni-type="Lcom/morpho/morphosmart/logger/LogLevel;">
        </parameter>
        <parameter name="p1" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="sendNotification" jni-signature="(Lcom/morpho/morphosmart/logger/LogLevel;Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.logger.LogLevel" jni-type="Lcom/morpho/morphosmart/logger/LogLevel;">
        </parameter>
        <parameter name="p1" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="subscribe" jni-signature="(Lcom/morpho/morphosmart/logger/ISubscriber;)V" bridge="false" native="false" return="void" jni-return="V" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.logger.ISubscriber" jni-type="Lcom/morpho/morphosmart/logger/ISubscriber;">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="false" name="subscribers" jni-signature="Ljava/util/List;" static="true" transient="false" type="java.util.List" type-generic-aware="java.util.List&lt;com.morpho.morphosmart.logger.ISubscriber&gt;" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.logger.LogLevel&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="LogLevel" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/logger/LogLevel;">
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/logger/LogLevel;" bridge="false" native="false" return="com.morpho.morphosmart.logger.LogLevel" jni-return="Lcom/morpho/morphosmart/logger/LogLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/logger/LogLevel;" bridge="false" native="false" return="com.morpho.morphosmart.logger.LogLevel[]" jni-return="[Lcom/morpho/morphosmart/logger/LogLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="DEBUG" jni-signature="Lcom/morpho/morphosmart/logger/LogLevel;" static="true" transient="false" type="com.morpho.morphosmart.logger.LogLevel" type-generic-aware="com.morpho.morphosmart.logger.LogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="ERROR" jni-signature="Lcom/morpho/morphosmart/logger/LogLevel;" static="true" transient="false" type="com.morpho.morphosmart.logger.LogLevel" type-generic-aware="com.morpho.morphosmart.logger.LogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="INFO" jni-signature="Lcom/morpho/morphosmart/logger/LogLevel;" static="true" transient="false" type="com.morpho.morphosmart.logger.LogLevel" type-generic-aware="com.morpho.morphosmart.logger.LogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="VERBOSE" jni-signature="Lcom/morpho/morphosmart/logger/LogLevel;" static="true" transient="false" type="com.morpho.morphosmart.logger.LogLevel" type-generic-aware="com.morpho.morphosmart.logger.LogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="WARN" jni-signature="Lcom/morpho/morphosmart/logger/LogLevel;" static="true" transient="false" type="com.morpho.morphosmart.logger.LogLevel" type-generic-aware="com.morpho.morphosmart.logger.LogLevel" visibility="public" volatile="false">
      </field>
    </class>
  </package>
  <package name="com.morpho.morphosmart.pipe" jni-name="com/morpho/morphosmart/pipe">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="Holder" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/pipe/Holder;">
      <typeParameters>
        <typeParameter name="T" classBound="java.lang.Object" jni-classBound="Ljava/lang/Object;"></typeParameter>
      </typeParameters>
      <constructor deprecated="not deprecated" final="false" name="Holder" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.pipe.Holder" synthetic="false" visibility="public">
      </constructor>
      <field deprecated="not deprecated" final="false" name="data" jni-signature="Ljava/lang/Object;" static="false" transient="false" type="java.lang.Object" type-generic-aware="T" visibility="public" volatile="false">
      </field>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="IMsoPipeConstants" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/pipe/IMsoPipeConstants;">
      <field deprecated="not deprecated" final="true" name="COMERR_TIMEOUT_RECEIVE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-10000" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MAX_RECV_TIME" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="10000" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SP_PIPE_TAG_COMRECV" jni-signature="B" static="true" transient="false" type="byte" type-generic-aware="byte" value="82" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SP_PIPE_TAG_COMSEND" jni-signature="B" static="true" transient="false" type="byte" type-generic-aware="byte" value="83" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SP_PIPE_TAG_CONNECT_MSO" jni-signature="B" static="true" transient="false" type="byte" type-generic-aware="byte" value="67" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SP_PIPE_TAG_MSO_LIST" jni-signature="B" static="true" transient="false" type="byte" type-generic-aware="byte" value="76" visibility="public" volatile="false">
      </field>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PipeFunctions" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/pipe/PipeFunctions;">
      <implements name="com.morpho.morphosmart.pipe.IMsoPipeConstants" name-generic-aware="com.morpho.morphosmart.pipe.IMsoPipeConstants" jni-type="Lcom/morpho/morphosmart/pipe/IMsoPipeConstants;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="PipeFunctions" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.pipe.PipeFunctions" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="Sp_Pipe_Receive_LenAndDatas" jni-signature="(Lcom/morpho/morphosmart/pipe/Holder;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.pipe.Holder&lt;byte[]&gt;" jni-type="Lcom/morpho/morphosmart/pipe/Holder&lt;[B&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="Sp_Pipe_Receive_Responses" jni-signature="(Lcom/morpho/morphosmart/pipe/Holder;II)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.pipe.Holder&lt;byte[]&gt;" jni-type="Lcom/morpho/morphosmart/pipe/Holder&lt;[B&gt;;">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="Sp_Pipe_Receive_Status" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="Sp_Pipe_Send_LenAndDatas" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="Sp_Pipe_Send_TagAndStatus" jni-signature="(BI)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte" jni-type="B">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="TCP_Client_Close" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="TCP_Client_Connect" jni-signature="(Ljava/lang/String;I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="TCP_Recv" jni-signature="([BII)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="TCP_Send" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSocket" jni-signature="()Ljava/net/Socket;" bridge="false" native="false" return="java.net.Socket" jni-return="Ljava/net/Socket;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="reverse4Byte" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="reverseInt" jni-signature="(I)[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setFinish" jni-signature="(Z)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setSocket" jni-signature="(Ljava/net/Socket;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.net.Socket" jni-type="Ljava/net/Socket;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PipeServer" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/pipe/PipeServer;">
      <implements name="com.morpho.morphosmart.pipe.IMsoPipeConstants" name-generic-aware="com.morpho.morphosmart.pipe.IMsoPipeConstants" jni-type="Lcom/morpho/morphosmart/pipe/IMsoPipeConstants;">
      </implements>
      <implements name="java.lang.Runnable" name-generic-aware="java.lang.Runnable" jni-type="Ljava/lang/Runnable;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="PipeServer" jni-signature="(Lcom/morpho/morphosmart/device/IMophoDeviceManager;)V" bridge="false" static="false" type="com.morpho.morphosmart.pipe.PipeServer" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.device.IMophoDeviceManager" jni-type="Lcom/morpho/morphosmart/device/IMophoDeviceManager;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="PipeServer" jni-signature="(ILcom/morpho/morphosmart/device/IMophoDeviceManager;)V" bridge="false" static="false" type="com.morpho.morphosmart.pipe.PipeServer" synthetic="false" visibility="public">
        <parameter name="p0" type="int" jni-type="I">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.device.IMophoDeviceManager" jni-type="Lcom/morpho/morphosmart/device/IMophoDeviceManager;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="isRunningServer" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="process_client" jni-signature="(Ljava/net/Socket;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.net.Socket" jni-type="Ljava/net/Socket;">
        </parameter>
        <exception name="IOException" type="java.io.IOException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="run" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setiMorphoDevice" jni-signature="(Lcom/morpho/morphosmart/device/IMophoDeviceManager;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.device.IMophoDeviceManager" jni-type="Lcom/morpho/morphosmart/device/IMophoDeviceManager;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setlogger" jni-signature="(Lcom/morpho/morphosmart/logger/Logger;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="com.morpho.morphosmart.logger.Logger" jni-type="Lcom/morpho/morphosmart/logger/Logger;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="start" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="stop" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
  </package>
  <package name="com.morpho.morphosmart.sdk" jni-name="com/morpho/morphosmart/sdk">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.CallbackMask&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="CallbackMask" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMask;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setValue" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="value" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/CallbackMask;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.CallbackMask" jni-return="Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/CallbackMask;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.CallbackMask[]" jni-return="[Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_CALLBACK_CODEQUALITY" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CallbackMask" type-generic-aware="com.morpho.morphosmart.sdk.CallbackMask" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_CALLBACK_COMMAND_CMD" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CallbackMask" type-generic-aware="com.morpho.morphosmart.sdk.CallbackMask" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_CALLBACK_DETECTQUALITY" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CallbackMask" type-generic-aware="com.morpho.morphosmart.sdk.CallbackMask" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_CALLBACK_ENROLLMENT_CMD" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CallbackMask" type-generic-aware="com.morpho.morphosmart.sdk.CallbackMask" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_CALLBACK_IMAGE_CMD" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CallbackMask" type-generic-aware="com.morpho.morphosmart.sdk.CallbackMask" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_CALLBACK_LAST_IMAGE_FULL_RES_CMD" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMask;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CallbackMask" type-generic-aware="com.morpho.morphosmart.sdk.CallbackMask" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="true" name="CallbackMessage" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/CallbackMessage;">
      <constructor deprecated="not deprecated" final="false" name="CallbackMessage" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.CallbackMessage" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMessage" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMessageType" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMessage" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="message" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMessageType" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="messageType" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.Coder&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="Coder" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/Coder;">
      <method abstract="false" deprecated="not deprecated" final="false" name="fromString" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/Coder;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.Coder" jni-return="Lcom/morpho/morphosmart/sdk/Coder;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="label" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/Coder;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.Coder" jni-return="Lcom/morpho/morphosmart/sdk/Coder;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/Coder;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.Coder[]" jni-return="[Lcom/morpho/morphosmart/sdk/Coder;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_DEFAULT_CODER" jni-signature="Lcom/morpho/morphosmart/sdk/Coder;" static="true" transient="false" type="com.morpho.morphosmart.sdk.Coder" type-generic-aware="com.morpho.morphosmart.sdk.Coder" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_MSO_V9_CODER" jni-signature="Lcom/morpho/morphosmart/sdk/Coder;" static="true" transient="false" type="com.morpho.morphosmart.sdk.Coder" type-generic-aware="com.morpho.morphosmart.sdk.Coder" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_MSO_V9_JUV_CODER" jni-signature="Lcom/morpho/morphosmart/sdk/Coder;" static="true" transient="false" type="com.morpho.morphosmart.sdk.Coder" type-generic-aware="com.morpho.morphosmart.sdk.Coder" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_MSO_V9_THIN_FINGER_CODER" jni-signature="Lcom/morpho/morphosmart/sdk/Coder;" static="true" transient="false" type="com.morpho.morphosmart.sdk.Coder" type-generic-aware="com.morpho.morphosmart.sdk.Coder" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.CompressionAlgorithm&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="CompressionAlgorithm" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;">
      <method abstract="false" deprecated="not deprecated" final="false" name="GetCompressionAlgorithm" jni-signature="(I)Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-return="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="firmwareCompressionAlgorithm" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getExtension" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="(I)Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-return="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" synchronized="false" synthetic="false" visibility="protected">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-return="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.CompressionAlgorithm[]" jni-return="[Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_COMPRESS_V1" jni-signature="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" type-generic-aware="com.morpho.morphosmart.sdk.CompressionAlgorithm" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_COMPRESS_WSQ" jni-signature="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" type-generic-aware="com.morpho.morphosmart.sdk.CompressionAlgorithm" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_NO_COMPRESS" jni-signature="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" type-generic-aware="com.morpho.morphosmart.sdk.CompressionAlgorithm" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="NO_IMAGE" jni-signature="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="true" transient="false" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" type-generic-aware="com.morpho.morphosmart.sdk.CompressionAlgorithm" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.DescriptorID&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="DescriptorID" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/DescriptorID;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.DescriptorID" jni-return="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/DescriptorID;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.DescriptorID[]" jni-return="[Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="BINDESC_CUSTOM_DESCRIPTOR" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_FLASH_SIZE" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_LICENSES" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_MAX_DB" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_MAX_USER" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_OEM_PID" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_OEM_SN" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_PID" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_PRODUCT_NAME" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_SENSOR_ID" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_SENSOR_SN" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_SN" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_SOFT" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BINDESC_VERSION" jni-signature="Lcom/morpho/morphosmart/sdk/DescriptorID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DescriptorID" type-generic-aware="com.morpho.morphosmart.sdk.DescriptorID" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.DetectionMode&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="DetectionMode" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/DetectionMode;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/DetectionMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.DetectionMode" jni-return="Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/DetectionMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.DetectionMode[]" jni-return="[Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_DEFAULT_DETECT_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DetectionMode" type-generic-aware="com.morpho.morphosmart.sdk.DetectionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_ENROLL_DETECT_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DetectionMode" type-generic-aware="com.morpho.morphosmart.sdk.DetectionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FORCE_FINGER_ON_TOP_DETECT_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DetectionMode" type-generic-aware="com.morpho.morphosmart.sdk.DetectionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_VERIF_DETECT_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DetectionMode" type-generic-aware="com.morpho.morphosmart.sdk.DetectionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_WAKEUP_LED_OFF" jni-signature="Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DetectionMode" type-generic-aware="com.morpho.morphosmart.sdk.DetectionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_WAKEUP_LED_ON" jni-signature="Lcom/morpho/morphosmart/sdk/DetectionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.DetectionMode" type-generic-aware="com.morpho.morphosmart.sdk.DetectionMode" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.EnrollmentType&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="EnrollmentType" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/EnrollmentType;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/EnrollmentType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.EnrollmentType" jni-return="Lcom/morpho/morphosmart/sdk/EnrollmentType;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/EnrollmentType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.EnrollmentType[]" jni-return="[Lcom/morpho/morphosmart/sdk/EnrollmentType;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="ONE_ACQUISITIONS" jni-signature="Lcom/morpho/morphosmart/sdk/EnrollmentType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.EnrollmentType" type-generic-aware="com.morpho.morphosmart.sdk.EnrollmentType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="THREE_ACQUISITIONS" jni-signature="Lcom/morpho/morphosmart/sdk/EnrollmentType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.EnrollmentType" type-generic-aware="com.morpho.morphosmart.sdk.EnrollmentType" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ErrorCodes" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/ErrorCodes;">
      <method abstract="false" deprecated="not deprecated" final="false" name="IntegrerInitializationValueOf" jni-signature="(Ljava/lang/Integer;)Ljava/lang/Boolean;" bridge="false" native="false" return="java.lang.Boolean" jni-return="Ljava/lang/Boolean;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="integer" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="LongInitializationValueOf" jni-signature="(Ljava/lang/Long;)Ljava/lang/Boolean;" bridge="false" native="false" return="java.lang.Boolean" jni-return="Ljava/lang/Boolean;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="longValue" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getError" jni-signature="(II)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="codeError" type="int" jni-type="I">
        </parameter>
        <parameter name="internalError" type="int" jni-type="I">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="true" name="CLASS_NOT_INSTANTIATED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-98" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_ADVANCED_SECURITY_LEVEL_MISMATCH" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-65" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_ADVANCED_SECURITY_LEVEL_NOT_AVAILABLE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-71" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_ALREADY_ENROLLED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-12" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_BADPARAMETER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-5" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_BAD_COMPRESSION" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-38" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_BAD_FINAL_FINGER_PRINT_QUALITY" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-66" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_BASE_ALREADY_EXISTS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-14" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_BASE_NOT_FOUND" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-13" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_CANT_GRAN_PERMISSION_USB" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-99" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_CERTIF_INVALID" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-43" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_CERTIF_UNKNOW" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-40" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_CLOSE_COM" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-4" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_CMDE_ABORTED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-26" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_COM_NOT_OPEN" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-34" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_CONNECT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-3" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_CORRUPTED_CLASS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-22" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_DB_EMPTY" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-11" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_DB_FULL" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-10" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_DEVICE_LOCKED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-57" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_DEVICE_NOT_LOCK" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-58" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_ELT_ALREADY_PRESENT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-35" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_FFD" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-46" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_FFD_FINGER_MISPLACED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-68" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_FIELD_INVALID" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-32" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_FIELD_NOT_FOUND" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-21" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_FILE_ALREADY_EXISTS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-76" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_FVP_FINGER_MISPLACED_OR_WITHDRAWN" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-63" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_FVP_MINUTIAE_SECURITY_MISMATCH" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-62" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INTEGER_INITIALIZATION" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-94" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INTERNAL" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INVALID_CLASS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-41" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INVALID_FINGER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-75" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INVALID_PK_FORMAT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-27" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INVALID_TEMPLATE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-17" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INVALID_USER_DATA" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-31" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_INVALID_USER_ID" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-30" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_KEY_NOT_FOUND" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-69" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_LICENSE_MISSING" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-64" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_LONG_INITIALIZATION" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-93" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_MEMORY_DEVICE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-7" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_MEMORY_PC" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-6" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_MIXED_TEMPLATE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-25" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_MOIST_FINGER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-47" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_MOVED_FINGER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-73" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NOCALLTO_DBQUERRYFIRST" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-36" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NOT_IMPLEMENTED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-18" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NO_ASSOCIATED_DB" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-15" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NO_ASSOCIATED_DEVICE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-16" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NO_HIT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-8" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NO_MORE_OTP" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-54" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NO_REGISTERED_TEMPLATE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-20" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_NO_SERVER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-48" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_ENROLL_FAILED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-52" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_ENROLL_NEEDED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-56" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_IDENT_FAILED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-53" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_LOCK_ENROLL" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-61" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_LOCK_GEN_OTP" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-59" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_LOCK_SET_PARAM" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-60" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_NOT_INITIALIZED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-49" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_NO_HIT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-55" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_PIN_NEEDED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-50" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OTP_REENROLL_NOT_ALLOWED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-51" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_OUT_OF_FIELD" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-29" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_PROTOCOLE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-2" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_RESUME_CONNEXION" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-95" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_RESUME_CONNEXION_ALREADY_STARTED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-96" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_SAME_FINGER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-28" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_SATURATED_FINGER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-74" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_SECU" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-39" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_SIGNER_ID" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-44" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_SIGNER_ID_INVALID" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-45" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_STATUS" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-9" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_SVC_LOST_DEVICE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-110" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_TIMEOUT" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-19" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_TO_MANY_FIELD" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-24" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_TO_MANY_TEMPLATE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-23" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_UNAVAILABLE" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-72" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_USB_DEVICE_NAME_UNKNOWN" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-42" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_USB_PERMISSION_DENIED" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-97" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_USER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-37" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOERR_USER_NOT_FOUND" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-33" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHOWARNING_WSQ_COMPRESSION_RATIO" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="-70" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_OK" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="0" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="FalseAcceptanceRate" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/FalseAcceptanceRate;">
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_0" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="0" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_1" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_10" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="10" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_2" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="2" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_3" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="3" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_4" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="4" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_5" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="5" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_6" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="6" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_7" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="7" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_8" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="8" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_FAR_9" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="9" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.FieldAttribute&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="FieldAttribute" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/FieldAttribute;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/FieldAttribute;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.FieldAttribute" jni-return="Lcom/morpho/morphosmart/sdk/FieldAttribute;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/FieldAttribute;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.FieldAttribute[]" jni-return="[Lcom/morpho/morphosmart/sdk/FieldAttribute;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_PRIVATE_FIELD" jni-signature="Lcom/morpho/morphosmart/sdk/FieldAttribute;" static="true" transient="false" type="com.morpho.morphosmart.sdk.FieldAttribute" type-generic-aware="com.morpho.morphosmart.sdk.FieldAttribute" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PUBLIC_FIELD" jni-signature="Lcom/morpho/morphosmart/sdk/FieldAttribute;" static="true" transient="false" type="com.morpho.morphosmart.sdk.FieldAttribute" type-generic-aware="com.morpho.morphosmart.sdk.FieldAttribute" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="FingerNumber" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/FingerNumber;">
      <constructor deprecated="not deprecated" final="false" name="FingerNumber" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.FingerNumber" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFingerNumber" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setFingerNumber" jni-signature="([B)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fingerNumber" type="byte[]" jni-type="[B">
        </parameter>
      </method>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="IMsoPipe" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/IMsoPipe;">
      <method abstract="true" deprecated="not deprecated" final="false" name="clientPipe_CallbackComClose" jni-signature="(Ljava/lang/Object;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="clientPipe_CallbackComOpen" jni-signature="(Ljava/lang/Object;Ljava/lang/String;JILjava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="p1" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p2" type="long" jni-type="J">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="clientPipe_CallbackComReceive" jni-signature="(Ljava/lang/Object;JLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="p1" type="long" jni-type="J">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="clientPipe_CallbackComReceiveFree" jni-signature="(Ljava/lang/Object;Ljava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="p1" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="clientPipe_CallbackComSend" jni-signature="(Ljava/lang/Object;JLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="p1" type="long" jni-type="J">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="IMsoSecu" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/IMsoSecu;">
      <method abstract="true" deprecated="not deprecated" final="false" name="computeCRC32" jni-signature="([BJJZZJ[J)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="long" jni-type="J">
        </parameter>
        <parameter name="p2" type="long" jni-type="J">
        </parameter>
        <parameter name="p3" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p4" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p5" type="long" jni-type="J">
        </parameter>
        <parameter name="p6" type="long[]" jni-type="[J">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="decryptAes128Cbc" jni-signature="([B[B[BZLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p4" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="desCrypt" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="encrypt3DesCbcNopad" jni-signature="([B[B[B[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="encryptAes128Cbc" jni-signature="([B[B[BZLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p4" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="genRandom" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getHostCertif" jni-signature="(Ljava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="rsaEncrypt" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="setOpenSSLPath" jni-signature="(Ljava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="signRSA" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="tripleDesCrypt" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="tripleDesCryptByKey" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="tripleDesDecrypt" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="tripleDesSign" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="tripleDesVerifSign" jni-signature="([B[B[Z)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="boolean[]" jni-type="[Z">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="tunnelingInit1" jni-signature="([B[B[B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p4" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="tunnelingInit2" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="verifCertif" jni-signature="([B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="verifOfferedSecuritySignature" jni-signature="([B[B[B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="verifSignDSA" jni-signature="([B[B[B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="verifSignRSA" jni-signature="([B[B[B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="int[]" jni-type="[I">
        </parameter>
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ITemplateType" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/ITemplateType;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getExtension" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.LatentDetection&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="LatentDetection" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/LatentDetection;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/LatentDetection;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.LatentDetection" jni-return="Lcom/morpho/morphosmart/sdk/LatentDetection;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/LatentDetection;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.LatentDetection[]" jni-return="[Lcom/morpho/morphosmart/sdk/LatentDetection;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="LATENT_DETECT_DISABLE" jni-signature="Lcom/morpho/morphosmart/sdk/LatentDetection;" static="true" transient="false" type="com.morpho.morphosmart.sdk.LatentDetection" type-generic-aware="com.morpho.morphosmart.sdk.LatentDetection" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="LATENT_DETECT_ENABLE" jni-signature="Lcom/morpho/morphosmart/sdk/LatentDetection;" static="true" transient="false" type="com.morpho.morphosmart.sdk.LatentDetection" type-generic-aware="com.morpho.morphosmart.sdk.LatentDetection" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MatchingStrategy&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MatchingStrategy" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MatchingStrategy;">
      <method abstract="false" deprecated="not deprecated" final="false" name="fromString" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MatchingStrategy;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MatchingStrategy" jni-return="Lcom/morpho/morphosmart/sdk/MatchingStrategy;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="label" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MatchingStrategy;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MatchingStrategy" jni-return="Lcom/morpho/morphosmart/sdk/MatchingStrategy;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MatchingStrategy;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MatchingStrategy[]" jni-return="[Lcom/morpho/morphosmart/sdk/MatchingStrategy;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_ADVANCED_MATCHING_STRATEGY" jni-signature="Lcom/morpho/morphosmart/sdk/MatchingStrategy;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MatchingStrategy" type-generic-aware="com.morpho.morphosmart.sdk.MatchingStrategy" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_STANDARD_MATCHING_STRATEGY" jni-signature="Lcom/morpho/morphosmart/sdk/MatchingStrategy;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MatchingStrategy" type-generic-aware="com.morpho.morphosmart.sdk.MatchingStrategy" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoDatabase" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDatabase;">
      <implements name="java.lang.Cloneable" name-generic-aware="java.lang.Cloneable" jni-type="Ljava/lang/Cloneable;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="MorphoDatabase" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoDatabase" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="MorphoDatabase" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoDatabase;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoDatabase" synthetic="false" visibility="public">
        <parameter name="database" type="com.morpho.morphosmart.sdk.MorphoDatabase" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDatabase;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="cancelLiveAcquisition" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="clone" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="dbCreate" jni-signature="(IILcom/morpho/morphosmart/sdk/TemplateType;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="maxRecord" type="int" jni-type="I">
        </parameter>
        <parameter name="maxNbFinger" type="int" jni-type="I">
        </parameter>
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="dbCreate" jni-signature="(IILcom/morpho/morphosmart/sdk/TemplateType;I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="maxRecord" type="int" jni-type="I">
        </parameter>
        <parameter name="maxNbFinger" type="int" jni-type="I">
        </parameter>
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
        <parameter name="dataBaseIndex" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbCreate" jni-signature="(IILcom/morpho/morphosmart/sdk/TemplateType;IZ)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="maxRecord" type="int" jni-type="I">
        </parameter>
        <parameter name="maxNbFinger" type="int" jni-type="I">
        </parameter>
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
        <parameter name="dataBaseIndex" type="int" jni-type="I">
        </parameter>
        <parameter name="encryptDB" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbDelete" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoTypeDeletion" type="com.morpho.morphosmart.sdk.MorphoTypeDeletion" jni-type="Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbQueryFirst" jni-signature="(ILjava/lang/String;Lcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldIndex" type="int" jni-type="I">
        </parameter>
        <parameter name="dataToFind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbQueryNext" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDbEncryptionStatus" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="encryptDB" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getField" jni-signature="(ILcom/morpho/morphosmart/sdk/MorphoField;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
        <parameter name="morphoField" type="com.morpho.morphosmart.sdk.MorphoField" jni-type="Lcom/morpho/morphosmart/sdk/MorphoField;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFormatPK" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateType" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMaxDataBase" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="maxdataBase" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="getMaxUser" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="maxUser" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMaxUser" jni-signature="(Ljava/lang/Integer;Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="maxUser" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
        <parameter name="maxFinger" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMorphoDatabasePointerCPP" jni-signature="()J" bridge="false" native="false" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbField" jni-signature="(Ljava/lang/Long;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbField" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbFinger" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbFinger" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbFreeRecord" jni-signature="(Ljava/lang/Long;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbFreeRecord" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbTotalRecord" jni-signature="(Ljava/lang/Long;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbTotalRecord" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbUsedRecord" jni-signature="(Ljava/lang/Long;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbUsedRecord" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUser" jni-signature="(Ljava/lang/String;Lcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="userID" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserBuffer" jni-signature="([BLcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="userID" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="identify" jni-signature="(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;Lcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="coder" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="matchingStrategy" type="com.morpho.morphosmart.sdk.MatchingStrategy" jni-type="Lcom/morpho/morphosmart/sdk/MatchingStrategy;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="resultMatching" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="identify" jni-signature="(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;ILcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="coder" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="matchingStrategy" type="com.morpho.morphosmart.sdk.MatchingStrategy" jni-type="Lcom/morpho/morphosmart/sdk/MatchingStrategy;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="resultMatching" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
        <parameter name="nbFingersToMatch" type="int" jni-type="I">
        </parameter>
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="identifyMatch" jni-signature="(ILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="templateList" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="identifyMatch" jni-signature="(ILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/MorphoUser;Lcom/morpho/morphosmart/sdk/ResultMatching;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="templateList" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="morphoUser" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
        <parameter name="resultMatching" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putField" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoField;Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoField" type="com.morpho.morphosmart.sdk.MorphoField" jni-type="Lcom/morpho/morphosmart/sdk/MorphoField;">
        </parameter>
        <parameter name="index" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="readPublicFields" jni-signature="([ILcom/morpho/morphosmart/sdk/MorphoUserList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldsIndex" type="int[]" jni-type="[I">
        </parameter>
        <parameter name="morphoUserList" type="com.morpho.morphosmart.sdk.MorphoUserList" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUserList;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMorphoDatabasePointerCPP" jni-signature="(J)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoDatabasePointerCPP" type="long" jni-type="J">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_FINGER_MAX" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="2" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_LEN_FIELD_MAX" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="128" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_NB_DATABASE_MAX" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="5" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_NB_FIELD_MAX" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="20" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_NB_RECORD_MIN" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="1" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="cppMemOwn" jni-signature="Z" static="false" transient="false" type="boolean" type-generic-aware="boolean" visibility="protected" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoDatabaseNative" static="false" visibility="" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDatabaseNative;">
      <method abstract="false" deprecated="not deprecated" final="false" name="cancelLiveAcquisition" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbCreate" jni-signature="(JIIIII)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbDelete" jni-signature="(JI)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbQueryFirst" jni-signature="(JILjava/lang/String;Lcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p3" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbQueryNext" jni-signature="(JLcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="deleteInstance" jni-signature="(J)J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCPPInstance" jni-signature="()J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCPPInstance" jni-signature="(J)J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDbEncryptionStatus" jni-signature="(JLjava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getField" jni-signature="(JILcom/morpho/morphosmart/sdk/MorphoField;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.MorphoField" jni-type="Lcom/morpho/morphosmart/sdk/MorphoField;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFormatPK" jni-signature="(JLjava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMaxDataBase" jni-signature="(JLjava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMaxUser" jni-signature="(JLjava/lang/Integer;Ljava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
        <parameter name="p2" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbField" jni-signature="(JLjava/lang/Long;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbFinger" jni-signature="(JLjava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbFreeRecord" jni-signature="(JLjava/lang/Long;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbTotalRecord" jni-signature="(JLjava/lang/Long;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbUsedRecord" jni-signature="(JLjava/lang/Long;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Long" jni-type="Ljava/lang/Long;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUser" jni-signature="(JLjava/lang/String;Lcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserBuffer" jni-signature="(J[BLcom/morpho/morphosmart/sdk/MorphoUser;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="identify" jni-signature="(JIIIIIILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;Lcom/morpho/morphosmart/sdk/MorphoUser;I)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
        <parameter name="p6" type="int" jni-type="I">
        </parameter>
        <parameter name="p7" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="p8" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
        <parameter name="p9" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
        <parameter name="p10" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="identifyMatch" jni-signature="(JILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/MorphoUser;Lcom/morpho/morphosmart/sdk/ResultMatching;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="p3" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
        <parameter name="p4" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putField" jni-signature="(JLcom/morpho/morphosmart/sdk/MorphoField;Ljava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.MorphoField" jni-type="Lcom/morpho/morphosmart/sdk/MorphoField;">
        </parameter>
        <parameter name="p2" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="readPublicFields" jni-signature="(J[ILcom/morpho/morphosmart/sdk/MorphoUserList;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int[]" jni-type="[I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.MorphoUserList" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUserList;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoDevice" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice;">
      <implements name="java.lang.Cloneable" name-generic-aware="java.lang.Cloneable" jni-type="Ljava/lang/Cloneable;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="MorphoDevice" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoDevice" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="MorphoDevice" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoDevice;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoDevice" synthetic="false" visibility="public">
        <parameter name="device" type="com.morpho.morphosmart.sdk.MorphoDevice" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDevice;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="SecuReadCertificate" jni-signature="(ILjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
        <parameter name="devCertif" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="cancelLiveAcquisition" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="capture" jni-signature="(IIIILcom/morpho/morphosmart/sdk/TemplateType;Lcom/morpho/morphosmart/sdk/TemplateFVPType;ILcom/morpho/morphosmart/sdk/EnrollmentType;Lcom/morpho/morphosmart/sdk/LatentDetection;Lcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/CompressionAlgorithm;ILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="acquisitionThreshold" type="int" jni-type="I">
        </parameter>
        <parameter name="advancedSecurityLevelsRequired" type="int" jni-type="I">
        </parameter>
        <parameter name="fingerNumber" type="int" jni-type="I">
        </parameter>
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
        <parameter name="templateFVPType" type="com.morpho.morphosmart.sdk.TemplateFVPType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVPType;">
        </parameter>
        <parameter name="maxSizeTemplate" type="int" jni-type="I">
        </parameter>
        <parameter name="enrollType" type="com.morpho.morphosmart.sdk.EnrollmentType" jni-type="Lcom/morpho/morphosmart/sdk/EnrollmentType;">
        </parameter>
        <parameter name="latentDetection" type="com.morpho.morphosmart.sdk.LatentDetection" jni-type="Lcom/morpho/morphosmart/sdk/LatentDetection;">
        </parameter>
        <parameter name="coderChoice" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="compressAlgo" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-type="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;">
        </parameter>
        <parameter name="compressRate" type="int" jni-type="I">
        </parameter>
        <parameter name="templateList" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="capture" jni-signature="(IIIILcom/morpho/morphosmart/sdk/TemplateType;Lcom/morpho/morphosmart/sdk/TemplateFVPType;ILcom/morpho/morphosmart/sdk/EnrollmentType;Lcom/morpho/morphosmart/sdk/LatentDetection;Lcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="acquisitionThreshold" type="int" jni-type="I">
        </parameter>
        <parameter name="advancedSecurityLevelsRequired" type="int" jni-type="I">
        </parameter>
        <parameter name="fingerNumber" type="int" jni-type="I">
        </parameter>
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
        <parameter name="templateFVPType" type="com.morpho.morphosmart.sdk.TemplateFVPType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVPType;">
        </parameter>
        <parameter name="maxSizeTemplate" type="int" jni-type="I">
        </parameter>
        <parameter name="enrollType" type="com.morpho.morphosmart.sdk.EnrollmentType" jni-type="Lcom/morpho/morphosmart/sdk/EnrollmentType;">
        </parameter>
        <parameter name="latentDetection" type="com.morpho.morphosmart.sdk.LatentDetection" jni-type="Lcom/morpho/morphosmart/sdk/LatentDetection;">
        </parameter>
        <parameter name="coderChoice" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="templateList" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="clone" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="closeDevice" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="comReceive" jni-signature="(I)[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="comSend" jni-signature="(I[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
        <parameter name="data" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enableCS" jni-signature="(Z)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="enable" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enableDataEncryption" jni-signature="(Z[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="enable" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="diversificationData" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enableDataEncryption" jni-signature="(ZLjava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="enable" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="diversificationData" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getComType" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getConfigParam" jni-signature="(I)[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="parameterIdentifier" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDatabase" jni-signature="(ILcom/morpho/morphosmart/sdk/MorphoDatabase;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="databaseIndex" type="int" jni-type="I">
        </parameter>
        <parameter name="morphoDatabase" type="com.morpho.morphosmart.sdk.MorphoDatabase" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDatabase;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFFDLogs" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getImage" jni-signature="(IILcom/morpho/morphosmart/sdk/CompressionAlgorithm;IILcom/morpho/morphosmart/sdk/LatentDetection;Lcom/morpho/morphosmart/sdk/MorphoImage;ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
        <parameter name="acquisitionThreshold" type="int" jni-type="I">
        </parameter>
        <parameter name="compressAlgo" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-type="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;">
        </parameter>
        <parameter name="compressRate" type="int" jni-type="I">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="latentDetection" type="com.morpho.morphosmart.sdk.LatentDetection" jni-type="Lcom/morpho/morphosmart/sdk/LatentDetection;">
        </parameter>
        <parameter name="morphoImage" type="com.morpho.morphosmart.sdk.MorphoImage" jni-type="Lcom/morpho/morphosmart/sdk/MorphoImage;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getIntDescriptorBin" jni-signature="(Lcom/morpho/morphosmart/sdk/DescriptorID;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="descriptorIdentifier" type="com.morpho.morphosmart.sdk.DescriptorID" jni-type="Lcom/morpho/morphosmart/sdk/DescriptorID;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getInternalError" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getKCV" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoKCVID;[B)[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="keyID" type="com.morpho.morphosmart.sdk.MorphoKCVID" jni-type="Lcom/morpho/morphosmart/sdk/MorphoKCVID;">
        </parameter>
        <parameter name="secretID" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="getKCV" jni-signature="(I)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="keyID" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getOpenedUsbDeviceName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPrivacyModeStatus" jni-signature="([Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="status" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus[]" jni-type="[Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPrivacySeed" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getProductDescriptor" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSecuConfig" jni-signature="(Lcom/morpho/morphosmart/sdk/SecuConfig;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="secuConfig" type="com.morpho.morphosmart.sdk.SecuConfig" jni-type="Lcom/morpho/morphosmart/sdk/SecuConfig;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSecurityLevel" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSensorDescriptor" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSoftwareDescriptor" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getStrategyAcquisitionMode" jni-signature="()Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" jni-return="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getStringDescriptorBin" jni-signature="(Lcom/morpho/morphosmart/sdk/DescriptorID;)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="descriptorIdentifier" type="com.morpho.morphosmart.sdk.DescriptorID" jni-type="Lcom/morpho/morphosmart/sdk/DescriptorID;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUnlockSeed" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUsbDeviceName" jni-signature="(I)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUsbDevicePropertie" jni-signature="(I)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserAreaData" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initUsbDevicesNameEnum" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbUsbDevice" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isCSEnabled" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isDataEncryptionEnabled" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKprivacy" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKprivacySecurely" jni-signature="([B[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="cryptogram" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKs" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKsSecurely" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKsSecurely" jni-signature="([B[B[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="signature" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="host_certificate" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadMocKey" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key_enc_Ciffered_by_KencTrans" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadMocKey" jni-signature="([B[B[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key_enc_Ciffered_by_Certificate" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="key_enc_Ciffered_by_Certificate_Signature" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="hostCertificate" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="offeredSecuClose" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="offeredSecuOpen" jni-signature="(Lcom/morpho/morphosmart/sdk/IMsoSecu;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="msosecuCallbackObject" type="com.morpho.morphosmart.sdk.IMsoSecu" jni-type="Lcom/morpho/morphosmart/sdk/IMsoSecu;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="openDevicePipe" jni-signature="(Lcom/morpho/morphosmart/sdk/IMsoPipe;Ljava/lang/String;ILjava/lang/String;I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="callBack" type="com.morpho.morphosmart.sdk.IMsoPipe" jni-type="Lcom/morpho/morphosmart/sdk/IMsoPipe;">
        </parameter>
        <parameter name="ip" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="port" type="int" jni-type="I">
        </parameter>
        <parameter name="serialNumber" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="openUsbDevice" jni-signature="(Ljava/lang/String;I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="sensorName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="openUsbDeviceFD" jni-signature="(IIII)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="bus" type="int" jni-type="I">
        </parameter>
        <parameter name="address" type="int" jni-type="I">
        </parameter>
        <parameter name="fd" type="int" jni-type="I">
        </parameter>
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="ping" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="rebootSoft" jni-signature="(ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="removeUserAreaData" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="resumeConnection" jni-signature="(ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
        <parameter name="observer" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setConfigParam" jni-signature="(I[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="tag" type="int" jni-type="I">
        </parameter>
        <parameter name="paramValue" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setLoggingLevelOfGroup" jni-signature="(ILcom/morpho/morphosmart/sdk/MorphoLogLevel;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="groupID" type="int" jni-type="I">
        </parameter>
        <parameter name="morphoLogLevel" type="com.morpho.morphosmart.sdk.MorphoLogLevel" jni-type="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setLoggingMode" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoLogMode;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoLogMode" type="com.morpho.morphosmart.sdk.MorphoLogMode" jni-type="Lcom/morpho/morphosmart/sdk/MorphoLogMode;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMorphoDeviceNativePointerCPP" jni-signature="(J)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoDevicePointerCPP" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setPrivacyModeStatus" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="status" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;">
        </parameter>
        <parameter name="dbProcessing" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setSecurityLevel" jni-signature="(Lcom/morpho/morphosmart/sdk/SecurityLevel;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="securityLevel" type="com.morpho.morphosmart.sdk.SecurityLevel" jni-type="Lcom/morpho/morphosmart/sdk/SecurityLevel;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setStrategyAcquisitionMode" jni-signature="(Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="strategyAcquisitionMode" type="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" jni-type="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setUserAreaData" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="userAreaData" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tunnelingClose" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tunnelingOpen" jni-signature="(Lcom/morpho/morphosmart/sdk/IMsoSecu;[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="msosecuCallbackObject" type="com.morpho.morphosmart.sdk.IMsoSecu" jni-type="Lcom/morpho/morphosmart/sdk/IMsoSecu;">
        </parameter>
        <parameter name="hostCertificate" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="unlock" jni-signature="([B[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="secretID" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="cipheredSeed" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="unlock" jni-signature="(Ljava/lang/String;Ljava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="secretID" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="cipheredSeed" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verify" jni-signature="(IILcom/morpho/morphosmart/sdk/Coder;IILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="coder" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="matchingStrategy" type="int" jni-type="I">
        </parameter>
        <parameter name="templateList" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="resultMatching" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verifyMatch" jni-signature="(ILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/TemplateList;Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="templateListSearch" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="templateListReference" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="matchingScore" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="false" name="ACTION_SCREEN_RECEIVER" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="CONFIG_KEY_USER_TAG" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="4627" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="CONFIG_SENSOR_WIN_POSITION_TAG" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="3600" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="CONFIG_UI_CONFIG_TAG" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="5136" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="CONFIG_UI_RESET_TAG" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="5137" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="cppMemOwn" jni-signature="Z" static="false" transient="false" type="boolean" type-generic-aware="boolean" visibility="protected" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" static="true" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" jni-return="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="PRIVACY_MODE_DB_PROCESSING_CIPHER_TRANCIPHER" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PRIVACY_MODE_DB_PROCESSING_ERASE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PRIVACY_MODE_DB_PROCESSING_NOTHING" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoDevice.MorphoDevicePrivacyModeStatus" static="true" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" jni-return="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="PRIVACY_MODE_DISABLED" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PRIVACY_MODE_ENABLED" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PRIVACY_MODE_PARTIAL_ENABLED" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PRIVACY_MODE_STANDALONE_ENABLED" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="android.content.BroadcastReceiver" extends-generic-aware="android.content.BroadcastReceiver" jni-extends="Landroid/content/BroadcastReceiver;" final="false" name="MorphoDevice.ScreenBroadcastReceiver" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$ScreenBroadcastReceiver;">
      <constructor deprecated="not deprecated" final="false" name="MorphoDevice.ScreenBroadcastReceiver" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoDevice;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoDevice.ScreenBroadcastReceiver" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="onReceive" jni-signature="(Landroid/content/Context;Landroid/content/Intent;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="context" type="android.content.Context" jni-type="Landroid/content/Context;">
        </parameter>
        <parameter name="intent" type="android.content.Intent" jni-type="Landroid/content/Intent;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setDevice" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoDevice;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="device" type="com.morpho.morphosmart.sdk.MorphoDevice" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDevice;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Thread" extends-generic-aware="java.lang.Thread" jni-extends="Ljava/lang/Thread;" final="false" name="MorphoDevice.ScreenBroadcastReceiver.1" static="false" visibility="" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDevice$ScreenBroadcastReceiver$1;"></class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoDeviceConnectionType&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoDeviceConnectionType" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" jni-return="Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="COM_TYPE_NOT_SET" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="RS232_COM_TYPE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USB_COM_TYPE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="USER_COM_TYPE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" type-generic-aware="com.morpho.morphosmart.sdk.MorphoDeviceConnectionType" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoDeviceNative" static="false" visibility="" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoDeviceNative;">
      <method abstract="false" deprecated="not deprecated" final="false" name="OfferedSecuClose" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="OfferedSecuOpen" jni-signature="(JLcom/morpho/morphosmart/sdk/IMsoSecu;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.IMsoSecu" jni-type="Lcom/morpho/morphosmart/sdk/IMsoSecu;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="SecuReadCertificate" jni-signature="(JILjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="TunnelingClose" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="TunnelingOpen" jni-signature="(JLcom/morpho/morphosmart/sdk/IMsoSecu;[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.IMsoSecu" jni-type="Lcom/morpho/morphosmart/sdk/IMsoSecu;">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="cancelLiveAcquisition" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="capture" jni-signature="(JIIIIIIIIIIILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;II)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
        <parameter name="p6" type="int" jni-type="I">
        </parameter>
        <parameter name="p7" type="int" jni-type="I">
        </parameter>
        <parameter name="p8" type="int" jni-type="I">
        </parameter>
        <parameter name="p9" type="int" jni-type="I">
        </parameter>
        <parameter name="p10" type="int" jni-type="I">
        </parameter>
        <parameter name="p11" type="int" jni-type="I">
        </parameter>
        <parameter name="p12" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="p13" type="int" jni-type="I">
        </parameter>
        <parameter name="p14" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="p15" type="int" jni-type="I">
        </parameter>
        <parameter name="p16" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="closeDevice" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="comReceive" jni-signature="(JI)[B" bridge="false" native="true" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="comSend" jni-signature="(JI[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="deleteInstance" jni-signature="(J)V" bridge="false" native="true" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enableCS" jni-signature="(JZ)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enableDataEncryptionByByteArray" jni-signature="(JZ[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enableDataEncryptionByString" jni-signature="(JZLjava/lang/String;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p2" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCPPInstance" jni-signature="()J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCPPInstance" jni-signature="(J)J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getComType" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getConfigParam" jni-signature="(JI)[B" bridge="false" native="true" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDatabase" jni-signature="(JILcom/morpho/morphosmart/sdk/MorphoDatabase;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.MorphoDatabase" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDatabase;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFFDLogs" jni-signature="(J)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getImage" jni-signature="(JIIIIIILcom/morpho/morphosmart/sdk/MorphoImage;ILjava/util/Observer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
        <parameter name="p6" type="int" jni-type="I">
        </parameter>
        <parameter name="p7" type="com.morpho.morphosmart.sdk.MorphoImage" jni-type="Lcom/morpho/morphosmart/sdk/MorphoImage;">
        </parameter>
        <parameter name="p8" type="int" jni-type="I">
        </parameter>
        <parameter name="p9" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getIntDescriptorBin" jni-signature="(JI)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getInternalError" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getKCV" jni-signature="(JI[B)[B" bridge="false" native="true" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getOpenedUsbDeviceName" jni-signature="(J)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPrivacyModeStatus" jni-signature="(J[Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.MorphoDevice.MorphoDevicePrivacyModeStatus[]" jni-type="[Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPrivacySeed" jni-signature="(J)[B" bridge="false" native="true" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getProductDescriptor" jni-signature="(J)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSecuConfig" jni-signature="(JLcom/morpho/morphosmart/sdk/SecuConfig;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.SecuConfig" jni-type="Lcom/morpho/morphosmart/sdk/SecuConfig;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSecurityLevel" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSensorDescriptor" jni-signature="(J)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSoftwareDescriptor" jni-signature="(J)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getStrategyAcquisitionMode" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getStringDescriptorBin" jni-signature="(JI)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUnlockSeed" jni-signature="(J)[B" bridge="false" native="true" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUsbDeviceName" jni-signature="(JI)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUsbDevicePropertie" jni-signature="(JI)Ljava/lang/String;" bridge="false" native="true" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserAreaData" jni-signature="(J)[B" bridge="false" native="true" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initUsbDevicesNameEnum" jni-signature="(JLjava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isCSEnabled" jni-signature="(J)Z" bridge="false" native="true" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isDataEncryptionEnabled" jni-signature="(J)Z" bridge="false" native="true" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKprivacy" jni-signature="(J[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKprivacySecurely" jni-signature="(J[B[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKs" jni-signature="(J[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKsSecurely" jni-signature="(J[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadKsSecurely" jni-signature="(J[B[B[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadMocKey" jni-signature="(J[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="loadMocKey" jni-signature="(J[B[B[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="openDevicePipe" jni-signature="(JLcom/morpho/morphosmart/sdk/IMsoPipe;Ljava/lang/String;ILjava/lang/String;I)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.IMsoPipe" jni-type="Lcom/morpho/morphosmart/sdk/IMsoPipe;">
        </parameter>
        <parameter name="p2" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="openUsbDevice" jni-signature="(JLjava/lang/String;I)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="openUsbDeviceFD" jni-signature="(JIIII)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="ping" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="rebootSoft" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="removeUserAreaData" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setConfigParam" jni-signature="(JI[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setLoggingLevelOfGroup" jni-signature="(JII)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setLoggingMode" jni-signature="(JI)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setPrivacyModeStatus" jni-signature="(JII)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setSecurityLevel" jni-signature="(JI)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setStrategyAcquisitionMode" jni-signature="(JI)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setUserAreaData" jni-signature="(J[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="unlock" jni-signature="(J[B[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verify" jni-signature="(JIIIIILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
        <parameter name="p6" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="p7" type="int" jni-type="I">
        </parameter>
        <parameter name="p8" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="p9" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verifyMatch" jni-signature="(JILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/TemplateList;Ljava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="p3" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="p4" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoField" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoField;">
      <constructor deprecated="not deprecated" final="false" name="MorphoField" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoField" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFieldAttribute" jni-signature="()Lcom/morpho/morphosmart/sdk/FieldAttribute;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.FieldAttribute" jni-return="Lcom/morpho/morphosmart/sdk/FieldAttribute;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFieldAttributeIntValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMaxSize" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setFieldAttribute" jni-signature="(Lcom/morpho/morphosmart/sdk/FieldAttribute;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldAttribute" type="com.morpho.morphosmart.sdk.FieldAttribute" jni-type="Lcom/morpho/morphosmart/sdk/FieldAttribute;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setFieldAttributeIntValue" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldAttributeInteger" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMaxSize" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="maxSize" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setName" jni-signature="(Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="MorphoSmartException" type="com.morpho.morphosmart.sdk.MorphoSmartException">
        </exception>
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_FIELD_NAME_LEN" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" value="6" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoImage" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoImage;">
      <constructor deprecated="not deprecated" final="false" name="MorphoImage" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoImage" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCompressedImage" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCompressionAlgorithm" jni-signature="()Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-return="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getImage" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMorphoImageFromLive" jni-signature="([B)Lcom/morpho/morphosmart/sdk/MorphoImage;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoImage" jni-return="Lcom/morpho/morphosmart/sdk/MorphoImage;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="imageStructure" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMorphoImageHeader" jni-signature="()Lcom/morpho/morphosmart/sdk/MorphoImageHeader;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoImageHeader" jni-return="Lcom/morpho/morphosmart/sdk/MorphoImageHeader;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setCompressedImage" jni-signature="([B)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="compressedImage" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setCompressedImage" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="compressedImage" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setCompressionAlgorithm" jni-signature="(Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="compressionAlgorithm" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-type="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setImage" jni-signature="([B)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="image" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setImage" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="image" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMorphoImageHeader" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoImageHeader;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoImageHeader" type="com.morpho.morphosmart.sdk.MorphoImageHeader" jni-type="Lcom/morpho/morphosmart/sdk/MorphoImageHeader;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoImageHeader" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoImageHeader;">
      <constructor deprecated="not deprecated" final="false" name="MorphoImageHeader" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoImageHeader" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCompressionRatio" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbBitsPerPixel" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbColumn" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbRow" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getResX" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getResY" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setCompressionRatio" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="compressionRatio" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setNbBitsPerPixel" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbBitsPerPixel" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setNbColumn" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbColumn" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setNbRow" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbRow" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setResX" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="resX" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setResY" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="resY" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoKCVID&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoKCVID" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoKCVID;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoKCVID;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoKCVID" jni-return="Lcom/morpho/morphosmart/sdk/MorphoKCVID;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoKCVID;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoKCVID[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoKCVID;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="ID_KENC" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoKCVID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoKCVID" type-generic-aware="com.morpho.morphosmart.sdk.MorphoKCVID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="ID_KPRIVACY" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoKCVID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoKCVID" type-generic-aware="com.morpho.morphosmart.sdk.MorphoKCVID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="ID_KS" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoKCVID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoKCVID" type-generic-aware="com.morpho.morphosmart.sdk.MorphoKCVID" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="ID_KSECRET" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoKCVID;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoKCVID" type-generic-aware="com.morpho.morphosmart.sdk.MorphoKCVID" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoLogLevel&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoLogLevel" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;">
      <method abstract="false" deprecated="not deprecated" final="false" name="fromString" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoLogLevel" jni-return="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="label" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoLogLevel" jni-return="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoLogLevel[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_LOG_DEBUG" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoLogLevel" type-generic-aware="com.morpho.morphosmart.sdk.MorphoLogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_LOG_ERROR" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoLogLevel" type-generic-aware="com.morpho.morphosmart.sdk.MorphoLogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_LOG_INFO" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoLogLevel" type-generic-aware="com.morpho.morphosmart.sdk.MorphoLogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_LOG_NOLOG" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoLogLevel" type-generic-aware="com.morpho.morphosmart.sdk.MorphoLogLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_LOG_WARNING" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoLogLevel" type-generic-aware="com.morpho.morphosmart.sdk.MorphoLogLevel" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoLogMode&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoLogMode" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogMode;">
      <method abstract="false" deprecated="not deprecated" final="false" name="fromString" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoLogMode" jni-return="Lcom/morpho/morphosmart/sdk/MorphoLogMode;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="label" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setLabel" jni-signature="(Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="label" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoLogMode" jni-return="Lcom/morpho/morphosmart/sdk/MorphoLogMode;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoLogMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoLogMode[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoLogMode;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_LOG_DISABLE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoLogMode" type-generic-aware="com.morpho.morphosmart.sdk.MorphoLogMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_LOG_ENABLE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoLogMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoLogMode" type-generic-aware="com.morpho.morphosmart.sdk.MorphoLogMode" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.RuntimeException" extends-generic-aware="java.lang.RuntimeException" jni-extends="Ljava/lang/RuntimeException;" final="false" name="MorphoSmartException" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoSmartException;">
      <constructor deprecated="not deprecated" final="false" name="MorphoSmartException" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoSmartException" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="MorphoSmartException" jni-signature="(ILjava/lang/String;Ljava/lang/Throwable;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoSmartException" synthetic="false" visibility="public">
        <parameter name="codeError" type="int" jni-type="I">
        </parameter>
        <parameter name="message" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="cause" type="java.lang.Throwable" jni-type="Ljava/lang/Throwable;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="MorphoSmartException" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoSmartException" synthetic="false" visibility="public">
        <parameter name="message" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="MorphoSmartException" jni-signature="(Ljava/lang/String;Ljava/lang/Throwable;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoSmartException" synthetic="false" visibility="public">
        <parameter name="message" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="cause" type="java.lang.Throwable" jni-type="Ljava/lang/Throwable;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="MorphoSmartException" jni-signature="(Ljava/lang/Throwable;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoSmartException" synthetic="false" visibility="public">
        <parameter name="cause" type="java.lang.Throwable" jni-type="Ljava/lang/Throwable;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getErrorMessage" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoString" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoString;">
      <constructor deprecated="not deprecated" final="false" name="MorphoString" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoString" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getBufferData" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getData" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setBufferData" jni-signature="([B)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="bufferData" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setData" jni-signature="(Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="data" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoTypeDeletion&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoTypeDeletion" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoTypeDeletion" jni-return="Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoTypeDeletion[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_DESTROY_BASE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoTypeDeletion" type-generic-aware="com.morpho.morphosmart.sdk.MorphoTypeDeletion" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_ERASE_BASE" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoTypeDeletion" type-generic-aware="com.morpho.morphosmart.sdk.MorphoTypeDeletion" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoUser" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoUser;">
      <implements name="java.lang.Cloneable" name-generic-aware="java.lang.Cloneable" jni-type="Ljava/lang/Cloneable;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="MorphoUser" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoUser" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="MorphoUser" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoUser;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoUser" synthetic="false" visibility="public">
        <parameter name="user" type="com.morpho.morphosmart.sdk.MorphoUser" jni-type="Lcom/morpho/morphosmart/sdk/MorphoUser;">
        </parameter>
      </constructor>
      <constructor deprecated="deprecated" final="false" name="MorphoUser" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoUser" synthetic="false" visibility="public">
        <parameter name="userID" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="cancelLiveAcquisition" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="clone" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbDelete" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbStore" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbUpdatePublicFields" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbVerifyAndUpdate" jni-signature="(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="coder" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="matchingStrategy" type="com.morpho.morphosmart.sdk.MatchingStrategy" jni-type="Lcom/morpho/morphosmart/sdk/MatchingStrategy;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="deprecated" final="false" name="enroll" jni-signature="(IIILcom/morpho/morphosmart/sdk/CompressionAlgorithm;IZILcom/morpho/morphosmart/sdk/TemplateType;Lcom/morpho/morphosmart/sdk/TemplateFVPType;ZLcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="acquisitionThreshold" type="int" jni-type="I">
        </parameter>
        <parameter name="advancedSecurityLevelsRequired" type="int" jni-type="I">
        </parameter>
        <parameter name="compressAlgo" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-type="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;">
        </parameter>
        <parameter name="compressRate" type="int" jni-type="I">
        </parameter>
        <parameter name="exportMinutiae" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="fingerNumber" type="int" jni-type="I">
        </parameter>
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
        <parameter name="templateFVPType" type="com.morpho.morphosmart.sdk.TemplateFVPType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVPType;">
        </parameter>
        <parameter name="saveRecord" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="coder" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="templateList" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enroll" jni-signature="(IIILcom/morpho/morphosmart/sdk/CompressionAlgorithm;IIILcom/morpho/morphosmart/sdk/TemplateType;Lcom/morpho/morphosmart/sdk/TemplateFVPType;ZLcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="acquisitionThreshold" type="int" jni-type="I">
        </parameter>
        <parameter name="advancedSecurityLevelsRequired" type="int" jni-type="I">
        </parameter>
        <parameter name="compressAlgo" type="com.morpho.morphosmart.sdk.CompressionAlgorithm" jni-type="Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;">
        </parameter>
        <parameter name="compressRate" type="int" jni-type="I">
        </parameter>
        <parameter name="exportMinutiae" type="int" jni-type="I">
        </parameter>
        <parameter name="fingerNumber" type="int" jni-type="I">
        </parameter>
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
        <parameter name="templateFVPType" type="com.morpho.morphosmart.sdk.TemplateFVPType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVPType;">
        </parameter>
        <parameter name="saveRecord" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="coder" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="templateList" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getBufferField" jni-signature="(I)[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldIndex" type="int" jni-type="I">
        </parameter>
        <exception name="MorphoSmartException" type="com.morpho.morphosmart.sdk.MorphoSmartException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getEnrollmentType" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFVPTemplate" jni-signature="(ILcom/morpho/morphosmart/sdk/TemplateFVP;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateIndex" type="int" jni-type="I">
        </parameter>
        <parameter name="templateFVP" type="com.morpho.morphosmart.sdk.TemplateFVP" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVP;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getField" jni-signature="(I)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldIndex" type="int" jni-type="I">
        </parameter>
        <exception name="MorphoSmartException" type="com.morpho.morphosmart.sdk.MorphoSmartException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMorphoUserPointerCPP" jni-signature="()J" bridge="false" native="false" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbTemplate" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbTemplate" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbTemplateFVP" jni-signature="(Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="nbTemplateFVP" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplate" jni-signature="(ILcom/morpho/morphosmart/sdk/Template;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateIndex" type="int" jni-type="I">
        </parameter>
        <parameter name="template" type="com.morpho.morphosmart.sdk.Template" jni-type="Lcom/morpho/morphosmart/sdk/Template;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserID" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserTemplateQuality" jni-signature="(ILjava/lang/String;IJLcom/morpho/morphosmart/sdk/TemplateQuality;Lcom/morpho/morphosmart/sdk/FingerNumber;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="indexDB" type="int" jni-type="I">
        </parameter>
        <parameter name="userID" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="userIdSize" type="int" jni-type="I">
        </parameter>
        <parameter name="userIndex" type="long" jni-type="J">
        </parameter>
        <parameter name="templateQuality" type="com.morpho.morphosmart.sdk.TemplateQuality" jni-type="Lcom/morpho/morphosmart/sdk/TemplateQuality;">
        </parameter>
        <parameter name="fingerNumber" type="com.morpho.morphosmart.sdk.FingerNumber" jni-type="Lcom/morpho/morphosmart/sdk/FingerNumber;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putBufferField" jni-signature="(I[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldIndex" type="int" jni-type="I">
        </parameter>
        <parameter name="fieldData" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putFVPTemplate" jni-signature="(Lcom/morpho/morphosmart/sdk/TemplateFVP;Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateFVP" type="com.morpho.morphosmart.sdk.TemplateFVP" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVP;">
        </parameter>
        <parameter name="templateFVPIndex" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putField" jni-signature="(ILjava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fieldIndex" type="int" jni-type="I">
        </parameter>
        <parameter name="fieldData" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putTemplate" jni-signature="(Lcom/morpho/morphosmart/sdk/Template;Ljava/lang/Integer;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="template" type="com.morpho.morphosmart.sdk.Template" jni-type="Lcom/morpho/morphosmart/sdk/Template;">
        </parameter>
        <parameter name="templateIndex" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setEnrollmentType" jni-signature="(Lcom/morpho/morphosmart/sdk/EnrollmentType;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="enrollmentType" type="com.morpho.morphosmart.sdk.EnrollmentType" jni-type="Lcom/morpho/morphosmart/sdk/EnrollmentType;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMorphoUserPointerCPP" jni-signature="(J)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoUserPointerCPP" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setNoCheckOnTemplateForDBStore" jni-signature="(Z)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="noCheckOnTemplate" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateUpdateMask" jni-signature="([Z)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="fingerprintUpdateMask" type="boolean[]" jni-type="[Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verify" jni-signature="(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
        <parameter name="far" type="int" jni-type="I">
        </parameter>
        <parameter name="coder" type="com.morpho.morphosmart.sdk.Coder" jni-type="Lcom/morpho/morphosmart/sdk/Coder;">
        </parameter>
        <parameter name="detectModeChoice" type="int" jni-type="I">
        </parameter>
        <parameter name="matchingStrategy" type="com.morpho.morphosmart.sdk.MatchingStrategy" jni-type="Lcom/morpho/morphosmart/sdk/MatchingStrategy;">
        </parameter>
        <parameter name="callbackCmd" type="int" jni-type="I">
        </parameter>
        <parameter name="callback" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="resultMatching" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
      </method>
      <field deprecated="not deprecated" final="false" name="cppMemOwn" jni-signature="Z" static="false" transient="false" type="boolean" type-generic-aware="boolean" visibility="protected" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoUserList" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoUserList;">
      <constructor deprecated="not deprecated" final="false" name="MorphoUserList" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.MorphoUserList" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbUser" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUser" jni-signature="(I)Lcom/morpho/morphosmart/sdk/MorphoUser;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoUser" jni-return="Lcom/morpho/morphosmart/sdk/MorphoUser;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MorphoUserNative" static="false" visibility="" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoUserNative;">
      <method abstract="false" deprecated="not deprecated" final="false" name="cancelLiveAcquisition" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbDelete" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbStore" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbUpdatePublicFields" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="dbVerifyAndUpdate" jni-signature="(JIIIIIILjava/util/Observer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
        <parameter name="p6" type="int" jni-type="I">
        </parameter>
        <parameter name="p7" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="deleteInstance" jni-signature="(J)V" bridge="false" native="true" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="enroll" jni-signature="(JIIIIIIIIIZIILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
        <parameter name="p6" type="int" jni-type="I">
        </parameter>
        <parameter name="p7" type="int" jni-type="I">
        </parameter>
        <parameter name="p8" type="int" jni-type="I">
        </parameter>
        <parameter name="p9" type="int" jni-type="I">
        </parameter>
        <parameter name="p10" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p11" type="int" jni-type="I">
        </parameter>
        <parameter name="p12" type="int" jni-type="I">
        </parameter>
        <parameter name="p13" type="com.morpho.morphosmart.sdk.TemplateList" jni-type="Lcom/morpho/morphosmart/sdk/TemplateList;">
        </parameter>
        <parameter name="p14" type="int" jni-type="I">
        </parameter>
        <parameter name="p15" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getBufferField" jni-signature="(JILcom/morpho/morphosmart/sdk/MorphoString;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.MorphoString" jni-type="Lcom/morpho/morphosmart/sdk/MorphoString;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCPPInstance" jni-signature="()J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCPPInstance" jni-signature="(Ljava/lang/String;)J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCPPInstance" jni-signature="(J)J" bridge="false" native="true" return="long" jni-return="J" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getEnrollmentType" jni-signature="(J)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFVPTemplate" jni-signature="(JILcom/morpho/morphosmart/sdk/TemplateFVP;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.TemplateFVP" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVP;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getField" jni-signature="(JILcom/morpho/morphosmart/sdk/MorphoString;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.MorphoString" jni-type="Lcom/morpho/morphosmart/sdk/MorphoString;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbTemplate" jni-signature="(JLjava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbTemplateFVP" jni-signature="(JLjava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplate" jni-signature="(JILcom/morpho/morphosmart/sdk/Template;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="com.morpho.morphosmart.sdk.Template" jni-type="Lcom/morpho/morphosmart/sdk/Template;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserTemplateQuality" jni-signature="(JILjava/lang/String;ILjava/lang/Integer;Ljava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
        <parameter name="p5" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getUserTemplateQuality" jni-signature="(JILjava/lang/String;IJLcom/morpho/morphosmart/sdk/TemplateQuality;Lcom/morpho/morphosmart/sdk/FingerNumber;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="long" jni-type="J">
        </parameter>
        <parameter name="p5" type="com.morpho.morphosmart.sdk.TemplateQuality" jni-type="Lcom/morpho/morphosmart/sdk/TemplateQuality;">
        </parameter>
        <parameter name="p6" type="com.morpho.morphosmart.sdk.FingerNumber" jni-type="Lcom/morpho/morphosmart/sdk/FingerNumber;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putBufferField" jni-signature="(JI[B)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putFVPTemplate" jni-signature="(JLcom/morpho/morphosmart/sdk/TemplateFVP;Ljava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.TemplateFVP" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVP;">
        </parameter>
        <parameter name="p2" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putField" jni-signature="(JILjava/lang/String;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putTemplate" jni-signature="(JLcom/morpho/morphosmart/sdk/Template;Ljava/lang/Integer;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="com.morpho.morphosmart.sdk.Template" jni-type="Lcom/morpho/morphosmart/sdk/Template;">
        </parameter>
        <parameter name="p2" type="java.lang.Integer" jni-type="Ljava/lang/Integer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setEnrollmentType" jni-signature="(JI)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setNoCheckOnTemplateForDBStore" jni-signature="(JZ)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateUpdateMask" jni-signature="(J[Z)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="boolean[]" jni-type="[Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verify" jni-signature="(JIIIIIILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;)I" bridge="false" native="true" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="long" jni-type="J">
        </parameter>
        <parameter name="p1" type="int" jni-type="I">
        </parameter>
        <parameter name="p2" type="int" jni-type="I">
        </parameter>
        <parameter name="p3" type="int" jni-type="I">
        </parameter>
        <parameter name="p4" type="int" jni-type="I">
        </parameter>
        <parameter name="p5" type="int" jni-type="I">
        </parameter>
        <parameter name="p6" type="int" jni-type="I">
        </parameter>
        <parameter name="p7" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
        <parameter name="p8" type="com.morpho.morphosmart.sdk.ResultMatching" jni-type="Lcom/morpho/morphosmart/sdk/ResultMatching;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.MorphoWakeUpMode&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="MorphoWakeUpMode" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode;">
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoWakeUpMode" jni-return="Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoWakeUpMode[]" jni-return="[Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_WAKEUP_LED_OFF" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoWakeUpMode" type-generic-aware="com.morpho.morphosmart.sdk.MorphoWakeUpMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_WAKEUP_LED_ON" jni-signature="Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.MorphoWakeUpMode" type-generic-aware="com.morpho.morphosmart.sdk.MorphoWakeUpMode" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ResultMatching" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/ResultMatching;">
      <constructor deprecated="not deprecated" final="false" name="ResultMatching" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.ResultMatching" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMatchingPKNumber" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMatchingScore" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMatchingPKNumber" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="matchingPKNumber" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMatchingScore" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="matchingScore" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Thread" extends-generic-aware="java.lang.Thread" jni-extends="Ljava/lang/Thread;" final="false" name="ResumeConnectionThread" static="false" visibility="" jni-signature="Lcom/morpho/morphosmart/sdk/ResumeConnectionThread;">
      <method abstract="false" deprecated="not deprecated" final="false" name="setDevice" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoDevice;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="device" type="com.morpho.morphosmart.sdk.MorphoDevice" jni-type="Lcom/morpho/morphosmart/sdk/MorphoDevice;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setDeviceName" jni-signature="(Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="deviceName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setDeviceOpenWithFD" jni-signature="(Z)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="openfd" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setDeviceOpenWithPipe" jni-signature="(Z)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="openpipe" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setObserver" jni-signature="(Ljava/util/Observer;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="observer" type="java.util.Observer" jni-type="Ljava/util/Observer;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setPipeParameters" jni-signature="(Lcom/morpho/morphosmart/sdk/IMsoPipe;Ljava/lang/String;II)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="callBack" type="com.morpho.morphosmart.sdk.IMsoPipe" jni-type="Lcom/morpho/morphosmart/sdk/IMsoPipe;">
        </parameter>
        <parameter name="ip" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="port" type="int" jni-type="I">
        </parameter>
        <parameter name="timeout" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTimeOut" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="timeOut" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="SecuConfig" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/SecuConfig;">
      <constructor deprecated="not deprecated" final="false" name="SecuConfig" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.SecuConfig" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMinMultimodalSecurityLevel" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSecurityFAR" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSecurityFARDescription" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSecurityOptions" jni-signature="()C" bridge="false" native="false" return="char" jni-return="C" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSerialNumber" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isAcceptsOnlySignedTemplates" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isDownloadIsProtected" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isExportScore" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isModeOfferedSecurity" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isModeTunneling" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setMinMultimodalSecurityLevel" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="minMultimodalSecurityLevel" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setSecurityFAR" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="securityFAR" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setSecurityOptions" jni-signature="(C)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="securityOptions" type="char" jni-type="C">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setSerialNumber" jni-signature="(Ljava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="serialNumber" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.SecurityLevel&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="SecurityLevel" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;">
      <method abstract="false" deprecated="not deprecated" final="false" name="fromInt" jni-signature="(IZ)Lcom/morpho/morphosmart/sdk/SecurityLevel;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.SecurityLevel" jni-return="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="value" type="int" jni-type="I">
        </parameter>
        <parameter name="isFVP" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="fromString" jni-signature="(Ljava/lang/String;Z)Lcom/morpho/morphosmart/sdk/SecurityLevel;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.SecurityLevel" jni-return="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="label" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="isFVP" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/SecurityLevel;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.SecurityLevel" jni-return="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/SecurityLevel;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.SecurityLevel[]" jni-return="[Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="FFD_SECURITY_LEVEL_CRITICAL_HOST" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FFD_SECURITY_LEVEL_DEFAULT_HOST" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FFD_SECURITY_LEVEL_HIGH_HOST" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FFD_SECURITY_LEVEL_LOW_HOST" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FFD_SECURITY_LEVEL_MEDIUM_HOST" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FFD_SECURITY_LEVEL_NONE_HOST" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MULTIMODAL_SECURITY_CRITICAL" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MULTIMODAL_SECURITY_HIGH" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MULTIMODAL_SECURITY_MEDIUM" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MULTIMODAL_SECURITY_STANDARD" jni-signature="Lcom/morpho/morphosmart/sdk/SecurityLevel;" static="true" transient="false" type="com.morpho.morphosmart.sdk.SecurityLevel" type-generic-aware="com.morpho.morphosmart.sdk.SecurityLevel" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.StrategyAcquisitionMode&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="StrategyAcquisitionMode" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;">
      <method abstract="false" deprecated="not deprecated" final="false" name="fromString" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" jni-return="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="label" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="(I)Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" jni-return="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" jni-return="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.StrategyAcquisitionMode[]" jni-return="[Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_ACQ_ANTI_SPOOFING_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" type-generic-aware="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_ACQ_EXPERT_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" type-generic-aware="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_ACQ_FULL_MULTIMODAL_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" type-generic-aware="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_ACQ_UNIVERSAL_ACCURATE_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" type-generic-aware="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_ACQ_UNIVERSAL_FAST_MODE" jni-signature="Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;" static="true" transient="false" type="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" type-generic-aware="com.morpho.morphosmart.sdk.StrategyAcquisitionMode" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="Template" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/Template;">
      <constructor deprecated="not deprecated" final="false" name="Template" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.Template" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getData" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDataIndex" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplateFVPType" jni-signature="()Lcom/morpho/morphosmart/sdk/TemplateFVPType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateFVPType" jni-return="Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplateQuality" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplateType" jni-signature="()Lcom/morpho/morphosmart/sdk/TemplateType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateType" jni-return="Lcom/morpho/morphosmart/sdk/TemplateType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setData" jni-signature="([B)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="data" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setDataIndex" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="dataIndex" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateFVPType" jni-signature="(Lcom/morpho/morphosmart/sdk/TemplateFVPType;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateFVPType" type="com.morpho.morphosmart.sdk.TemplateFVPType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVPType;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateFVPType" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateQuality" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateQuality" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateType" jni-signature="(Lcom/morpho/morphosmart/sdk/TemplateType;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateType" type="com.morpho.morphosmart.sdk.TemplateType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateType;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateType" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="TemplateFVP" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateFVP;">
      <constructor deprecated="not deprecated" final="false" name="TemplateFVP" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.TemplateFVP" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAdvancedSecurityLevelsCompatibility" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getData" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDataIndex" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplateFVPType" jni-signature="()Lcom/morpho/morphosmart/sdk/TemplateFVPType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateFVPType" jni-return="Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplateQuality" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setAdvancedSecurityLevelsCompatibility" jni-signature="(Z)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="advancedSecurityLevelsCompatibility" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setData" jni-signature="([B)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="data" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setDataIndex" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="dataIndex" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateFVPType" jni-signature="(Lcom/morpho/morphosmart/sdk/TemplateFVPType;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateFVPType" type="com.morpho.morphosmart.sdk.TemplateFVPType" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVPType;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateFVPType" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateQuality" jni-signature="(I)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateQuality" type="int" jni-type="I">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.TemplateFVPType&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="TemplateFVPType" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateFVPType;">
      <implements name="com.morpho.morphosmart.sdk.ITemplateType" name-generic-aware="com.morpho.morphosmart.sdk.ITemplateType" jni-type="Lcom/morpho/morphosmart/sdk/ITemplateType;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getExtension" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="(I)Lcom/morpho/morphosmart/sdk/TemplateFVPType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateFVPType" jni-return="Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="true" synchronized="false" synthetic="false" visibility="protected">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/TemplateFVPType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateFVPType" jni-return="Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/TemplateFVPType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateFVPType[]" jni-return="[Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_NO_PK_FVP" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateFVPType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateFVPType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_FVP" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateFVPType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateFVPType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_FVP_MATCH" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateFVPType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateFVPType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateFVPType" visibility="public" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="TemplateList" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateList;">
      <constructor deprecated="not deprecated" final="false" name="TemplateList" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.TemplateList" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFVPTemplate" jni-signature="(I)Lcom/morpho/morphosmart/sdk/TemplateFVP;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateFVP" jni-return="Lcom/morpho/morphosmart/sdk/TemplateFVP;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateFVPIndex" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getImage" jni-signature="(I)Lcom/morpho/morphosmart/sdk/MorphoImage;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.MorphoImage" jni-return="Lcom/morpho/morphosmart/sdk/MorphoImage;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="imageIndex" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbFVPTemplate" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNbTemplate" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplate" jni-signature="(I)Lcom/morpho/morphosmart/sdk/Template;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.Template" jni-return="Lcom/morpho/morphosmart/sdk/Template;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateIndex" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isActivateFullImageRetrieving" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putFVPTemplate" jni-signature="(Lcom/morpho/morphosmart/sdk/TemplateFVP;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateFVP" type="com.morpho.morphosmart.sdk.TemplateFVP" jni-type="Lcom/morpho/morphosmart/sdk/TemplateFVP;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="putTemplate" jni-signature="(Lcom/morpho/morphosmart/sdk/Template;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="template" type="com.morpho.morphosmart.sdk.Template" jni-type="Lcom/morpho/morphosmart/sdk/Template;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setActivateFullImageRetrieving" jni-signature="(Z)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="activateFullImageRetrieving" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setImage" jni-signature="(Lcom/morpho/morphosmart/sdk/MorphoImage;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="morphoImage" type="com.morpho.morphosmart.sdk.MorphoImage" jni-type="Lcom/morpho/morphosmart/sdk/MorphoImage;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="TemplateQuality" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateQuality;">
      <constructor deprecated="not deprecated" final="false" name="TemplateQuality" jni-signature="()V" bridge="false" static="false" type="com.morpho.morphosmart.sdk.TemplateQuality" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTemplateQuality" jni-signature="()[B" bridge="false" native="false" return="byte[]" jni-return="[B" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setTemplateQuality" jni-signature="([B)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="templateQuality" type="byte[]" jni-type="[B">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;com.morpho.morphosmart.sdk.TemplateType&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="TemplateType" static="false" visibility="public" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;">
      <implements name="com.morpho.morphosmart.sdk.ITemplateType" name-generic-aware="com.morpho.morphosmart.sdk.ITemplateType" jni-type="Lcom/morpho/morphosmart/sdk/ITemplateType;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getCode" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getExtension" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLabel" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getValue" jni-signature="(I)Lcom/morpho/morphosmart/sdk/TemplateType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateType" jni-return="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/TemplateType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateType" jni-return="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lcom/morpho/morphosmart/sdk/TemplateType;" bridge="false" native="false" return="com.morpho.morphosmart.sdk.TemplateType[]" jni-return="[Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="MORPHO_NO_PK_FP" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ANSI_378" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ANSI_378_2009" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_BIOSCRYPT" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_CFV" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_COMP" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_COMP_NORM" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_DIN_V66400_CS" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_DIN_V66400_CS_AA" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ILO_FMR" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ISO_FMC_CS" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ISO_FMC_CS_AA" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ISO_FMC_NS" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ISO_FMR" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_ISO_FMR_2011" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_MAT" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_MAT_NORM" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_MINEX_A" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_MOC" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MORPHO_PK_PKLITE" jni-signature="Lcom/morpho/morphosmart/sdk/TemplateType;" static="true" transient="false" type="com.morpho.morphosmart.sdk.TemplateType" type-generic-aware="com.morpho.morphosmart.sdk.TemplateType" visibility="public" volatile="false">
      </field>
    </class>
  </package>
  <package name="morpho.msosecu.sdk.api" jni-name="morpho/msosecu/sdk/api">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MsoSecu" static="false" visibility="public" jni-signature="Lmorpho/msosecu/sdk/api/MsoSecu;">
      <implements name="com.morpho.morphosmart.sdk.IMsoSecu" name-generic-aware="com.morpho.morphosmart.sdk.IMsoSecu" jni-type="Lcom/morpho/morphosmart/sdk/IMsoSecu;">
      </implements>
      <implements name="morpho.msosecu.sdk.api.MsoSecuConstants" name-generic-aware="morpho.msosecu.sdk.api.MsoSecuConstants" jni-type="Lmorpho/msosecu/sdk/api/MsoSecuConstants;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="MsoSecu" jni-signature="()V" bridge="false" static="false" type="morpho.msosecu.sdk.api.MsoSecu" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="computeCRC32" jni-signature="([BJJZZJ[J)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="data" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="polynomial" type="long" jni-type="J">
        </parameter>
        <parameter name="initialCRCValue" type="long" jni-type="J">
        </parameter>
        <parameter name="inputReflected" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="outputReflected" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="outputXOR" type="long" jni-type="J">
        </parameter>
        <parameter name="crcValue" type="long[]" jni-type="[J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="decryptAes128Cbc" jni-signature="([B[B[BZLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="aes128CbcCryptedData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="iv" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="usePadding" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="aes128CbcClearData" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="desCrypt" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="desClearData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="desCryptData" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="encrypt3DesCbcNopad" jni-signature="([B[B[B[B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesCbcNoPadClearData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="iv" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesCbcNoPadCryptData" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="encryptAes128Cbc" jni-signature="([B[B[BZLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="aes128CbcClearData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="iv" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="usePadding" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="aes128CbcCryptedData" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="genRandom" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="randomData" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getHostCertif" jni-signature="(Ljava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="hostCertificate" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="rsaEncrypt" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="certificate" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="rsaClearData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="rsaCryptData" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setOpenSSLPath" jni-signature="(Ljava/lang/String;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="openSSLPath" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="signRSA" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="rsaDataToSign" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="rsaSignature" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tripleDesCrypt" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="tripleDesClearData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesCryptData" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tripleDesCryptByKey" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="key" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesClearData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesCryptDataByKey" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tripleDesDecrypt" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="tripleDesCryptData" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesClearData" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tripleDesSign" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="tripleDesDataToSign" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesSignature" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tripleDesVerifSign" jni-signature="([B[B[Z)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="tripleDesDataToVerifSign" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesDataSignature" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tripleDesSignVerifResult" type="boolean[]" jni-type="[Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tunnelingInit1" jni-signature="([B[B[B[BLjava/util/ArrayList;)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="tokenMso" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="msoCertificate" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="msoHash" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="hostHash" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="tokenHostMso" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="tunnelingInit2" jni-signature="([B)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="tokenMso" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verifCertif" jni-signature="([B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="certificate" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="certVerifResult" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verifOfferedSecuritySignature" jni-signature="([B[B[B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="msoCertificate" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="signature" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="dataToVerifSign" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="signVerifResult" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verifSignDSA" jni-signature="([B[B[B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="msoCertificate" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="signature" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="dataToVerifSign" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="signVerifResult" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="verifSignRSA" jni-signature="([B[B[B[I)I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="msoCertificate" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="signature" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="dataToVerifSign" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="signVerifResult" type="int[]" jni-type="[I">
        </parameter>
      </method>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="MsoSecuConstants" static="false" visibility="public" jni-signature="Lmorpho/msosecu/sdk/api/MsoSecuConstants;">
      <field deprecated="not deprecated" final="true" name="AES128_BLOCK_LENGTH" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="DES_BLOCK_LENGTH" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_AES128_FINAL_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_AES128_INIT_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_AES128_UPDATE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_ALLOC_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_BAD_PARAMETER" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_BIO_NEW_MEM_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_CRYPTO_PROTOCOLE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_DELETE_FILE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_DSA_KEY_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_DSS1_FINAL_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_DSS1_INIT_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_DSS1_UPDATE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_FILE_EMPTY" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_FILE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_INVALID_CERTIF" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_MODE_DSA_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_OK" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_OPEN_FILE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_OPEN_SSL" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_PARSE_DATA_TO_X509STRUCT_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_PARSE_DER_TO_X509STRUCT_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_PEM_READ_BIO_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_PUBLIC_KEY_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_READ_FILE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_RSA_KEY_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_SHA1_FINAL_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_SHA1_INIT_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_SHA1_UPDATE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_STORE_LOAD_LOCATIONS_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_STORE_NEW_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="MSOSECU_WRITE_FILE_ERR" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="TRIPLE_DES_KEY_LENGTH" jni-signature="I" static="true" transient="false" type="int" type-generic-aware="int" visibility="public" volatile="false">
      </field>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="MsoSecuJNI" static="false" visibility="public" jni-signature="Lmorpho/msosecu/sdk/api/MsoSecuJNI;">
      <constructor deprecated="not deprecated" final="false" name="MsoSecuJNI" jni-signature="()V" bridge="false" static="false" type="morpho.msosecu.sdk.api.MsoSecuJNI" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="true" name="AES128_BLOCK_LENGTH_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="DES_BLOCK_LENGTH_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_AES128_FINAL_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_AES128_INIT_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_AES128_UPDATE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_ALLOC_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_BAD_PARAMETER_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_BIO_NEW_MEM_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_CRYPTO_PROTOCOLE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_DELETE_FILE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_DSA_KEY_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_DSS1_FINAL_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_DSS1_INIT_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_DSS1_UPDATE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_FILE_EMPTY_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_FILE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_INVALID_CERTIF_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_MODE_DSA_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_OK_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_OPEN_FILE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_OPEN_SSL_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_PARSE_DATA_TO_X509STRUCT_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_PARSE_DER_TO_X509STRUCT_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_PEM_READ_BIO_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_PUBLIC_KEY_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_READ_FILE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_RSA_KEY_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_SHA1_FINAL_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_SHA1_INIT_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_SHA1_UPDATE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_STORE_LOAD_LOCATIONS_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_STORE_NEW_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="MSOSECU_WRITE_FILE_ERR_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="TRIPLE_DES_KEY_LENGTH_get" jni-signature="()I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="computeCRC32" jni-signature="([BJJZZJ[J)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="long" jni-type="J">
        </parameter>
        <parameter name="p2" type="long" jni-type="J">
        </parameter>
        <parameter name="p3" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p4" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p5" type="long" jni-type="J">
        </parameter>
        <parameter name="p6" type="long[]" jni-type="[J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="decryptAes128Cbc" jni-signature="([B[B[BZLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p4" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="desCrypt" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="encrypt3DesCbcNopad" jni-signature="([B[B[B[B)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="encryptAes128Cbc" jni-signature="([B[B[BZLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="p4" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="genRandom" jni-signature="([B)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="getHostCertif" jni-signature="(Ljava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="rsaEncrypt" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="setOpenSSLPath" jni-signature="(Ljava/lang/String;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="signRSA" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="tripleDesCrypt" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="tripleDesCryptByKey" jni-signature="([B[BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="tripleDesDecrypt" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="tripleDesSign" jni-signature="([BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="tripleDesVerifSign" jni-signature="([B[B[Z)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="boolean[]" jni-type="[Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="tunnelingInit1" jni-signature="([B[B[B[BLjava/util/ArrayList;)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p4" type="java.util.ArrayList&lt;java.lang.Byte&gt;" jni-type="Ljava/util/ArrayList&lt;Ljava/lang/Byte;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="tunnelingInit2" jni-signature="([B)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="verifCertif" jni-signature="([B[I)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="verifOfferedSecuritySignature" jni-signature="([B[B[B[I)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="verifSignDSA" jni-signature="([B[B[B[I)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="int[]" jni-type="[I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="verifSignRSA" jni-signature="([B[B[B[I)I" bridge="false" native="true" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p1" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p2" type="byte[]" jni-type="[B">
        </parameter>
        <parameter name="p3" type="int[]" jni-type="[I">
        </parameter>
      </method>
    </class>
  </package>
  <package name="org.aspectj.internal.lang.annotation" jni-name="org/aspectj/internal/lang/annotation">
    <interface abstract="true" deprecated="not deprecated" final="false" name="ajcDeclareAnnotation" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/annotation/ajcDeclareAnnotation;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="annotation" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="kind" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="pattern" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ajcDeclareEoW" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/annotation/ajcDeclareEoW;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="isError" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="message" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="pointcut" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ajcDeclareParents" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/annotation/ajcDeclareParents;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="isExtends" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="parentTypes" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="targetTypePattern" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ajcDeclarePrecedence" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/annotation/ajcDeclarePrecedence;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ajcDeclareSoft" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/annotation/ajcDeclareSoft;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="exceptionType" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="pointcut" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ajcITD" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/annotation/ajcITD;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="modifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="name" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="targetType" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ajcPrivileged" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/annotation/ajcPrivileged;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
    </interface>
  </package>
  <package name="org.aspectj.internal.lang.reflect" jni-name="org/aspectj/internal/lang/reflect">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="AdviceImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/AdviceImpl;">
      <implements name="org.aspectj.lang.reflect.Advice" name-generic-aware="org.aspectj.lang.reflect.Advice" jni-type="Lorg/aspectj/lang/reflect/Advice;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="AdviceImpl" jni-signature="(Ljava/lang/reflect/Method;Ljava/lang/String;Lorg/aspectj/lang/reflect/AdviceKind;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.AdviceImpl" synthetic="false" visibility="protected">
        <parameter name="method" type="java.lang.reflect.Method" jni-type="Ljava/lang/reflect/Method;">
        </parameter>
        <parameter name="pointcut" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="type" type="org.aspectj.lang.reflect.AdviceKind" jni-type="Lorg/aspectj/lang/reflect/AdviceKind;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="AdviceImpl" jni-signature="(Ljava/lang/reflect/Method;Ljava/lang/String;Lorg/aspectj/lang/reflect/AdviceKind;Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.AdviceImpl" synthetic="false" visibility="protected">
        <parameter name="method" type="java.lang.reflect.Method" jni-type="Ljava/lang/reflect/Method;">
        </parameter>
        <parameter name="pointcut" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="type" type="org.aspectj.lang.reflect.AdviceKind" jni-type="Lorg/aspectj/lang/reflect/AdviceKind;">
        </parameter>
        <parameter name="extraParamName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getGenericParameterTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Lorg/aspectj/lang/reflect/AdviceKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.AdviceKind" jni-return="Lorg/aspectj/lang/reflect/AdviceKind;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="AdviceImpl.1" static="true" visibility="" jni-signature="Lorg/aspectj/internal/lang/reflect/AdviceImpl$1;"></class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="AjTypeImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/AjTypeImpl;">
      <implements name="org.aspectj.lang.reflect.AjType" name-generic-aware="org.aspectj.lang.reflect.AjType&lt;T&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;TT;&gt;;">
      </implements>
      <typeParameters>
        <typeParameter name="T" classBound="java.lang.Object" jni-classBound="Ljava/lang/Object;"></typeParameter>
      </typeParameters>
      <constructor deprecated="not deprecated" final="false" name="AjTypeImpl" jni-signature="(Ljava/lang/Class;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.AjTypeImpl" synthetic="false" visibility="public">
        <parameter name="fromClass" type="java.lang.Class&lt;T&gt;" jni-type="Ljava/lang/Class&lt;TT;&gt;;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAdvice" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice" jni-return="Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchAdviceException" type="org.aspectj.lang.reflect.NoSuchAdviceException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAdvice" jni-signature="([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice[]" jni-return="[Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="ofType" type="org.aspectj.lang.reflect.AdviceKind..." jni-type="[Lorg/aspectj/lang/reflect/AdviceKind;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAjTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAnnotation" jni-signature="(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;" bridge="false" native="false" return="A" jni-return="TA;" static="false" synchronized="false" synthetic="false" visibility="public">
        <typeParameters>
          <typeParameter name="A" interfaceBounds="java.lang.annotation.Annotation" jni-interfaceBounds="Ljava/lang/annotation/Annotation;">
            <genericConstraints>
              <genericConstraint type="java.lang.annotation.Annotation">
            </genericConstraint>
            </genericConstraints>
          </typeParameter>
      </typeParameters>
        <parameter name="annotationType" type="java.lang.Class&lt;A&gt;" jni-type="Ljava/lang/Class&lt;TA;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAnnotations" jni-signature="()[Ljava/lang/annotation/Annotation;" bridge="false" native="false" return="java.lang.annotation.Annotation[]" jni-return="[Ljava/lang/annotation/Annotation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getConstructor" jni-signature="([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getConstructors" jni-signature="()[Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor[]" jni-return="[Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclareAnnotations" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareAnnotation;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareAnnotation[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareAnnotation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclareErrorOrWarnings" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareErrorOrWarning[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclareParents" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareParents;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareParents[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareParents;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclarePrecedence" jni-signature="()[Lorg/aspectj/lang/reflect/DeclarePrecedence;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclarePrecedence[]" jni-return="[Lorg/aspectj/lang/reflect/DeclarePrecedence;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclareSofts" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareSoft;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareSoft[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareSoft;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredAdvice" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice" jni-return="Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchAdviceException" type="org.aspectj.lang.reflect.NoSuchAdviceException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredAdvice" jni-signature="([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice[]" jni-return="[Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="ofType" type="org.aspectj.lang.reflect.AdviceKind..." jni-type="[Lorg/aspectj/lang/reflect/AdviceKind;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredAjTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredAnnotations" jni-signature="()[Ljava/lang/annotation/Annotation;" bridge="false" native="false" return="java.lang.annotation.Annotation[]" jni-return="[Ljava/lang/annotation/Annotation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredConstructor" jni-signature="([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredConstructors" jni-signature="()[Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor[]" jni-return="[Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredField" jni-signature="(Ljava/lang/String;)Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field" jni-return="Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredFields" jni-signature="()[Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field[]" jni-return="[Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredITDConstructor" jni-signature="(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="target" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredITDConstructors" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredITDField" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="target" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredITDFields" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredITDMethod" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="target" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredITDMethods" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredMethod" jni-signature="(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredMethods" jni-signature="()[Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method[]" jni-return="[Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredPointcut" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut" jni-return="Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchPointcutException" type="org.aspectj.lang.reflect.NoSuchPointcutException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaredPointcuts" jni-signature="()[Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut[]" jni-return="[Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getEnclosingConstructor" jni-signature="()Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getEnclosingMethod" jni-signature="()Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getEnclosingType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getEnumConstants" jni-signature="()[Ljava/lang/Object;" bridge="false" native="false" return="T[]" jni-return="[TT;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getField" jni-signature="(Ljava/lang/String;)Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field" jni-return="Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFields" jni-signature="()[Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field[]" jni-return="[Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getGenericSupertype" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getITDConstructor" jni-signature="(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="target" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getITDConstructors" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getITDField" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="target" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getITDFields" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getITDMethod" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="target" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getITDMethods" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getInterfaces" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getJavaClass" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class&lt;T&gt;" jni-return="Ljava/lang/Class&lt;TT;&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMethod" jni-signature="(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="parameterTypes" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMethods" jni-signature="()[Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method[]" jni-return="[Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPackage" jni-signature="()Ljava/lang/Package;" bridge="false" native="false" return="java.lang.Package" jni-return="Ljava/lang/Package;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPerClause" jni-signature="()Lorg/aspectj/lang/reflect/PerClause;" bridge="false" native="false" return="org.aspectj.lang.reflect.PerClause" jni-return="Lorg/aspectj/lang/reflect/PerClause;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPointcut" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut" jni-return="Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchPointcutException" type="org.aspectj.lang.reflect.NoSuchPointcutException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPointcuts" jni-signature="()[Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut[]" jni-return="[Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSupertype" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;? super T&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;-TT;&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTypeParameters" jni-signature="()[Ljava/lang/reflect/TypeVariable;" bridge="false" native="false" return="java.lang.reflect.TypeVariable&lt;java.lang.Class&lt;T&gt;&gt;[]" jni-return="[Ljava/lang/reflect/TypeVariable&lt;Ljava/lang/Class&lt;TT;&gt;;&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isAnnotationPresent" jni-signature="(Ljava/lang/Class;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;" jni-type="Ljava/lang/Class&lt;+Ljava/lang/annotation/Annotation;&gt;;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isArray" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isAspect" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isEnum" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isInstance" jni-signature="(Ljava/lang/Object;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isInterface" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isLocalClass" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isMemberAspect" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isMemberClass" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isPrimitive" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isPrivileged" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="DeclareAnnotationImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/DeclareAnnotationImpl;">
      <implements name="org.aspectj.lang.reflect.DeclareAnnotation" name-generic-aware="org.aspectj.lang.reflect.DeclareAnnotation" jni-type="Lorg/aspectj/lang/reflect/DeclareAnnotation;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="DeclareAnnotationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;Ljava/lang/String;Ljava/lang/annotation/Annotation;Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.DeclareAnnotationImpl" synthetic="false" visibility="public">
        <parameter name="declaring" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="kindString" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="pattern" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="ann" type="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
        </parameter>
        <parameter name="annText" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAnnotation" jni-signature="()Ljava/lang/annotation/Annotation;" bridge="false" native="false" return="java.lang.annotation.Annotation" jni-return="Ljava/lang/annotation/Annotation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAnnotationAsText" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareAnnotation.Kind" jni-return="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSignaturePattern" jni-signature="()Lorg/aspectj/lang/reflect/SignaturePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.SignaturePattern" jni-return="Lorg/aspectj/lang/reflect/SignaturePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTypePattern" jni-signature="()Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern" jni-return="Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="DeclareAnnotationImpl.1" static="true" visibility="" jni-signature="Lorg/aspectj/internal/lang/reflect/DeclareAnnotationImpl$1;"></class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="DeclareErrorOrWarningImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/DeclareErrorOrWarningImpl;">
      <implements name="org.aspectj.lang.reflect.DeclareErrorOrWarning" name-generic-aware="org.aspectj.lang.reflect.DeclareErrorOrWarning" jni-type="Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="DeclareErrorOrWarningImpl" jni-signature="(Ljava/lang/String;Ljava/lang/String;ZLorg/aspectj/lang/reflect/AjType;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl" synthetic="false" visibility="public">
        <parameter name="pointcut" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="message" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="isError" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType" jni-type="Lorg/aspectj/lang/reflect/AjType;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMessage" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isError" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="DeclareParentsImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/DeclareParentsImpl;">
      <implements name="org.aspectj.lang.reflect.DeclareParents" name-generic-aware="org.aspectj.lang.reflect.DeclareParents" jni-type="Lorg/aspectj/lang/reflect/DeclareParents;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="DeclareParentsImpl" jni-signature="(Ljava/lang/String;Ljava/lang/String;ZLorg/aspectj/lang/reflect/AjType;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.DeclareParentsImpl" synthetic="false" visibility="public">
        <parameter name="targets" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="parentsAsString" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="isExtends" type="boolean" jni-type="Z">
        </parameter>
        <parameter name="declaring" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParentTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTargetTypesPattern" jni-signature="()Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern" jni-return="Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isExtends" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isImplements" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="DeclarePrecedenceImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/DeclarePrecedenceImpl;">
      <implements name="org.aspectj.lang.reflect.DeclarePrecedence" name-generic-aware="org.aspectj.lang.reflect.DeclarePrecedence" jni-type="Lorg/aspectj/lang/reflect/DeclarePrecedence;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="DeclarePrecedenceImpl" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.DeclarePrecedenceImpl" synthetic="false" visibility="public">
        <parameter name="precedenceList" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaring" type="org.aspectj.lang.reflect.AjType" jni-type="Lorg/aspectj/lang/reflect/AjType;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPrecedenceOrder" jni-signature="()[Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern[]" jni-return="[Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="DeclareSoftImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/DeclareSoftImpl;">
      <implements name="org.aspectj.lang.reflect.DeclareSoft" name-generic-aware="org.aspectj.lang.reflect.DeclareSoft" jni-type="Lorg/aspectj/lang/reflect/DeclareSoft;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="DeclareSoftImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.DeclareSoftImpl" synthetic="false" visibility="public">
        <parameter name="declaringType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="pcut" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypeName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSoftenedExceptionType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" extends-generic-aware="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" jni-extends="Lorg/aspectj/internal/lang/reflect/InterTypeDeclarationImpl;" final="false" name="InterTypeConstructorDeclarationImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/InterTypeConstructorDeclarationImpl;">
      <implements name="org.aspectj.lang.reflect.InterTypeConstructorDeclaration" name-generic-aware="org.aspectj.lang.reflect.InterTypeConstructorDeclaration" jni-type="Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="InterTypeConstructorDeclarationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/reflect/Method;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl" synthetic="false" visibility="public">
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="target" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="mods" type="int" jni-type="I">
        </parameter>
        <parameter name="baseMethod" type="java.lang.reflect.Method" jni-type="Ljava/lang/reflect/Method;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getGenericParameterTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="InterTypeDeclarationImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/InterTypeDeclarationImpl;">
      <implements name="org.aspectj.lang.reflect.InterTypeDeclaration" name-generic-aware="org.aspectj.lang.reflect.InterTypeDeclaration" jni-type="Lorg/aspectj/lang/reflect/InterTypeDeclaration;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="InterTypeDeclarationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;I)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" synthetic="false" visibility="public">
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="target" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="mods" type="int" jni-type="I">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="InterTypeDeclarationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;I)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" synthetic="false" visibility="public">
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="targetType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="mods" type="int" jni-type="I">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTargetType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
      <field deprecated="not deprecated" final="false" name="targetTypeName" jni-signature="Ljava/lang/String;" static="false" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" visibility="protected" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" extends-generic-aware="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" jni-extends="Lorg/aspectj/internal/lang/reflect/InterTypeDeclarationImpl;" final="false" name="InterTypeFieldDeclarationImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/InterTypeFieldDeclarationImpl;">
      <implements name="org.aspectj.lang.reflect.InterTypeFieldDeclaration" name-generic-aware="org.aspectj.lang.reflect.InterTypeFieldDeclaration" jni-type="Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="InterTypeFieldDeclarationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/String;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Type;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl" synthetic="false" visibility="public">
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="target" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="mods" type="int" jni-type="I">
        </parameter>
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="type" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="genericType" type="java.lang.reflect.Type" jni-type="Ljava/lang/reflect/Type;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="InterTypeFieldDeclarationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Field;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl" synthetic="false" visibility="public">
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="targetType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="base" type="java.lang.reflect.Field" jni-type="Ljava/lang/reflect/Field;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getGenericType" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" extends-generic-aware="org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl" jni-extends="Lorg/aspectj/internal/lang/reflect/InterTypeDeclarationImpl;" final="false" name="InterTypeMethodDeclarationImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/InterTypeMethodDeclarationImpl;">
      <implements name="org.aspectj.lang.reflect.InterTypeMethodDeclaration" name-generic-aware="org.aspectj.lang.reflect.InterTypeMethodDeclaration" jni-type="Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="InterTypeMethodDeclarationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/reflect/Method;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl" synthetic="false" visibility="public">
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="target" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="mods" type="int" jni-type="I">
        </parameter>
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="itdInterMethod" type="java.lang.reflect.Method" jni-type="Ljava/lang/reflect/Method;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="InterTypeMethodDeclarationImpl" jni-signature="(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Method;I)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl" synthetic="false" visibility="public">
        <parameter name="decType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="targetType" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="base" type="java.lang.reflect.Method" jni-type="Ljava/lang/reflect/Method;">
        </parameter>
        <parameter name="modifiers" type="int" jni-type="I">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getGenericParameterTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getGenericReturnType" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getReturnType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTypeParameters" jni-signature="()[Ljava/lang/reflect/TypeVariable;" bridge="false" native="false" return="java.lang.reflect.TypeVariable&lt;java.lang.reflect.Method&gt;[]" jni-return="[Ljava/lang/reflect/TypeVariable&lt;Ljava/lang/reflect/Method;&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PerClauseImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/PerClauseImpl;">
      <implements name="org.aspectj.lang.reflect.PerClause" name-generic-aware="org.aspectj.lang.reflect.PerClause" jni-type="Lorg/aspectj/lang/reflect/PerClause;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="PerClauseImpl" jni-signature="(Lorg/aspectj/lang/reflect/PerClauseKind;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.PerClauseImpl" synthetic="false" visibility="protected">
        <parameter name="kind" type="org.aspectj.lang.reflect.PerClauseKind" jni-type="Lorg/aspectj/lang/reflect/PerClauseKind;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Lorg/aspectj/lang/reflect/PerClauseKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.PerClauseKind" jni-return="Lorg/aspectj/lang/reflect/PerClauseKind;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.internal.lang.reflect.PerClauseImpl" extends-generic-aware="org.aspectj.internal.lang.reflect.PerClauseImpl" jni-extends="Lorg/aspectj/internal/lang/reflect/PerClauseImpl;" final="false" name="PointcutBasedPerClauseImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/PointcutBasedPerClauseImpl;">
      <implements name="org.aspectj.lang.reflect.PointcutBasedPerClause" name-generic-aware="org.aspectj.lang.reflect.PointcutBasedPerClause" jni-type="Lorg/aspectj/lang/reflect/PointcutBasedPerClause;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="PointcutBasedPerClauseImpl" jni-signature="(Lorg/aspectj/lang/reflect/PerClauseKind;Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.PointcutBasedPerClauseImpl" synthetic="false" visibility="public">
        <parameter name="kind" type="org.aspectj.lang.reflect.PerClauseKind" jni-type="Lorg/aspectj/lang/reflect/PerClauseKind;">
        </parameter>
        <parameter name="pointcutExpression" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PointcutBasedPerClauseImpl.1" static="true" visibility="" jni-signature="Lorg/aspectj/internal/lang/reflect/PointcutBasedPerClauseImpl$1;"></class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PointcutExpressionImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/PointcutExpressionImpl;">
      <implements name="org.aspectj.lang.reflect.PointcutExpression" name-generic-aware="org.aspectj.lang.reflect.PointcutExpression" jni-type="Lorg/aspectj/lang/reflect/PointcutExpression;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="PointcutExpressionImpl" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.PointcutExpressionImpl" synthetic="false" visibility="public">
        <parameter name="aPointcutExpression" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="asString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PointcutImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/PointcutImpl;">
      <implements name="org.aspectj.lang.reflect.Pointcut" name-generic-aware="org.aspectj.lang.reflect.Pointcut" jni-type="Lorg/aspectj/lang/reflect/Pointcut;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="PointcutImpl" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/reflect/Method;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.PointcutImpl" synthetic="false" visibility="protected">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="pc" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="method" type="java.lang.reflect.Method" jni-type="Ljava/lang/reflect/Method;">
        </parameter>
        <parameter name="declaringType" type="org.aspectj.lang.reflect.AjType" jni-type="Lorg/aspectj/lang/reflect/AjType;">
        </parameter>
        <parameter name="pNames" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterNames" jni-signature="()[Ljava/lang/String;" bridge="false" native="false" return="java.lang.String[]" jni-return="[Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="SignaturePatternImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/SignaturePatternImpl;">
      <implements name="org.aspectj.lang.reflect.SignaturePattern" name-generic-aware="org.aspectj.lang.reflect.SignaturePattern" jni-type="Lorg/aspectj/lang/reflect/SignaturePattern;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="SignaturePatternImpl" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.SignaturePatternImpl" synthetic="false" visibility="public">
        <parameter name="pattern" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="asString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="StringToType" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/StringToType;">
      <constructor deprecated="not deprecated" final="false" name="StringToType" jni-signature="()V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.StringToType" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="commaSeparatedListToTypeArray" jni-signature="(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="typeNames" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="classScope" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="stringToType" jni-signature="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="typeName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="classScope" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="true" name="StringToType.1" static="true" visibility="" jni-signature="Lorg/aspectj/internal/lang/reflect/StringToType$1;">
      <implements name="java.lang.reflect.ParameterizedType" name-generic-aware="java.lang.reflect.ParameterizedType" jni-type="Ljava/lang/reflect/ParameterizedType;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getActualTypeArguments" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getOwnerType" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getRawType" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.internal.lang.reflect.PerClauseImpl" extends-generic-aware="org.aspectj.internal.lang.reflect.PerClauseImpl" jni-extends="Lorg/aspectj/internal/lang/reflect/PerClauseImpl;" final="false" name="TypePatternBasedPerClauseImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/TypePatternBasedPerClauseImpl;">
      <implements name="org.aspectj.lang.reflect.TypePatternBasedPerClause" name-generic-aware="org.aspectj.lang.reflect.TypePatternBasedPerClause" jni-type="Lorg/aspectj/lang/reflect/TypePatternBasedPerClause;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="TypePatternBasedPerClauseImpl" jni-signature="(Lorg/aspectj/lang/reflect/PerClauseKind;Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.TypePatternBasedPerClauseImpl" synthetic="false" visibility="public">
        <parameter name="kind" type="org.aspectj.lang.reflect.PerClauseKind" jni-type="Lorg/aspectj/lang/reflect/PerClauseKind;">
        </parameter>
        <parameter name="pattern" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTypePattern" jni-signature="()Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern" jni-return="Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="TypePatternImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/internal/lang/reflect/TypePatternImpl;">
      <implements name="org.aspectj.lang.reflect.TypePattern" name-generic-aware="org.aspectj.lang.reflect.TypePattern" jni-type="Lorg/aspectj/lang/reflect/TypePattern;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="TypePatternImpl" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.internal.lang.reflect.TypePatternImpl" synthetic="false" visibility="public">
        <parameter name="pattern" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="asString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
  </package>
  <package name="org.aspectj.lang" jni-name="org/aspectj/lang">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="Aspects" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/Aspects;">
      <constructor deprecated="not deprecated" final="false" name="Aspects" jni-signature="()V" bridge="false" static="false" type="org.aspectj.lang.Aspects" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="aspectOf" jni-signature="(Ljava/lang/Class;)Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="true" synchronized="false" synthetic="false" visibility="public">
        <typeParameters>
          <typeParameter name="T" classBound="java.lang.Object" jni-classBound="Ljava/lang/Object;"></typeParameter>
      </typeParameters>
        <parameter name="aspectClass" type="java.lang.Class&lt;T&gt;" jni-type="Ljava/lang/Class&lt;TT;&gt;;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="aspectOf" jni-signature="(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="true" synchronized="false" synthetic="false" visibility="public">
        <typeParameters>
          <typeParameter name="T" classBound="java.lang.Object" jni-classBound="Ljava/lang/Object;"></typeParameter>
      </typeParameters>
        <parameter name="aspectClass" type="java.lang.Class&lt;T&gt;" jni-type="Ljava/lang/Class&lt;TT;&gt;;">
        </parameter>
        <parameter name="perTypeWithin" type="java.lang.Class&lt;?&gt;" jni-type="Ljava/lang/Class&lt;*&gt;;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="aspectOf" jni-signature="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="true" synchronized="false" synthetic="false" visibility="public">
        <typeParameters>
          <typeParameter name="T" classBound="java.lang.Object" jni-classBound="Ljava/lang/Object;"></typeParameter>
      </typeParameters>
        <parameter name="aspectClass" type="java.lang.Class&lt;T&gt;" jni-type="Ljava/lang/Class&lt;TT;&gt;;">
        </parameter>
        <parameter name="perObject" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasAspect" jni-signature="(Ljava/lang/Class;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class&lt;?&gt;" jni-type="Ljava/lang/Class&lt;*&gt;;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasAspect" jni-signature="(Ljava/lang/Class;Ljava/lang/Class;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class&lt;?&gt;" jni-type="Ljava/lang/Class&lt;*&gt;;">
        </parameter>
        <parameter name="perTypeWithin" type="java.lang.Class&lt;?&gt;" jni-type="Ljava/lang/Class&lt;*&gt;;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasAspect" jni-signature="(Ljava/lang/Class;Ljava/lang/Object;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class&lt;?&gt;" jni-type="Ljava/lang/Class&lt;*&gt;;">
        </parameter>
        <parameter name="perObject" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="Aspects14" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/Aspects14;">
      <constructor deprecated="not deprecated" final="false" name="Aspects14" jni-signature="()V" bridge="false" static="false" type="org.aspectj.lang.Aspects14" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="aspectOf" jni-signature="(Ljava/lang/Class;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="aspectOf" jni-signature="(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="perTypeWithin" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="aspectOf" jni-signature="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="perObject" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasAspect" jni-signature="(Ljava/lang/Class;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasAspect" jni-signature="(Ljava/lang/Class;Ljava/lang/Class;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="perTypeWithin" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="hasAspect" jni-signature="(Ljava/lang/Class;Ljava/lang/Object;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="aspectClass" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="perObject" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <exception name="NoAspectBoundException" type="org.aspectj.lang.NoAspectBoundException">
        </exception>
      </method>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="JoinPoint" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/JoinPoint;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getArgs" jni-signature="()[Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object[]" jni-return="[Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getSignature" jni-signature="()Lorg/aspectj/lang/Signature;" bridge="false" native="false" return="org.aspectj.lang.Signature" jni-return="Lorg/aspectj/lang/Signature;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getSourceLocation" jni-signature="()Lorg/aspectj/lang/reflect/SourceLocation;" bridge="false" native="false" return="org.aspectj.lang.reflect.SourceLocation" jni-return="Lorg/aspectj/lang/reflect/SourceLocation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getStaticPart" jni-signature="()Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getTarget" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getThis" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toLongString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toShortString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="ADVICE_EXECUTION" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;adviceexecution&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="CONSTRUCTOR_CALL" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;constructor-call&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="CONSTRUCTOR_EXECUTION" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;constructor-execution&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="EXCEPTION_HANDLER" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;exception-handler&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FIELD_GET" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;field-get&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="FIELD_SET" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;field-set&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="INITIALIZATION" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;initialization&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="METHOD_CALL" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;method-call&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="METHOD_EXECUTION" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;method-execution&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PREINITIALIZATION" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;preinitialization&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="STATICINITIALIZATION" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;staticinitialization&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SYNCHRONIZATION_LOCK" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;lock&quot;" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SYNCHRONIZATION_UNLOCK" jni-signature="Ljava/lang/String;" static="true" transient="false" type="java.lang.String" type-generic-aware="java.lang.String" value="&quot;unlock&quot;" visibility="public" volatile="false">
      </field>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="JoinPoint.EnclosingStaticPart" static="true" visibility="public" jni-signature="Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;">
      <implements name="org.aspectj.lang.JoinPoint.StaticPart" name-generic-aware="org.aspectj.lang.JoinPoint.StaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$StaticPart;">
      </implements>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="JoinPoint.StaticPart" static="true" visibility="public" jni-signature="Lorg/aspectj/lang/JoinPoint$StaticPart;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getId" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getSignature" jni-signature="()Lorg/aspectj/lang/Signature;" bridge="false" native="false" return="org.aspectj.lang.Signature" jni-return="Lorg/aspectj/lang/Signature;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getSourceLocation" jni-signature="()Lorg/aspectj/lang/reflect/SourceLocation;" bridge="false" native="false" return="org.aspectj.lang.reflect.SourceLocation" jni-return="Lorg/aspectj/lang/reflect/SourceLocation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toLongString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toShortString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.RuntimeException" extends-generic-aware="java.lang.RuntimeException" jni-extends="Ljava/lang/RuntimeException;" final="false" name="NoAspectBoundException" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/NoAspectBoundException;">
      <constructor deprecated="not deprecated" final="false" name="NoAspectBoundException" jni-signature="()V" bridge="false" static="false" type="org.aspectj.lang.NoAspectBoundException" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="NoAspectBoundException" jni-signature="(Ljava/lang/String;Ljava/lang/Throwable;)V" bridge="false" static="false" type="org.aspectj.lang.NoAspectBoundException" synthetic="false" visibility="public">
        <parameter name="aspectName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="inner" type="java.lang.Throwable" jni-type="Ljava/lang/Throwable;">
        </parameter>
      </constructor>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ProceedingJoinPoint" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/ProceedingJoinPoint;">
      <implements name="org.aspectj.lang.JoinPoint" name-generic-aware="org.aspectj.lang.JoinPoint" jni-type="Lorg/aspectj/lang/JoinPoint;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="proceed" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="Throwable" type="java.lang.Throwable">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="proceed" jni-signature="([Ljava/lang/Object;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
        <exception name="Throwable" type="java.lang.Throwable">
        </exception>
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="Signature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/Signature;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringTypeName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toLongString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toShortString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="toString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.RuntimeException" extends-generic-aware="java.lang.RuntimeException" jni-extends="Ljava/lang/RuntimeException;" final="false" name="SoftException" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/SoftException;">
      <constructor deprecated="not deprecated" final="false" name="SoftException" jni-signature="(Ljava/lang/Throwable;)V" bridge="false" static="false" type="org.aspectj.lang.SoftException" synthetic="false" visibility="public">
        <parameter name="inner" type="java.lang.Throwable" jni-type="Ljava/lang/Throwable;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getWrappedThrowable" jni-signature="()Ljava/lang/Throwable;" bridge="false" native="false" return="java.lang.Throwable" jni-return="Ljava/lang/Throwable;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
  </package>
  <package name="org.aspectj.lang.annotation" jni-name="org/aspectj/lang/annotation">
    <interface abstract="true" deprecated="not deprecated" final="false" name="AdviceName" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/AdviceName;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="After" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/After;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="argNames" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="AfterReturning" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/AfterReturning;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="argNames" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="pointcut" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="returning" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="AfterThrowing" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/AfterThrowing;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="argNames" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="pointcut" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="throwing" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="Around" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/Around;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="argNames" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="Aspect" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/Aspect;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="Before" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/Before;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="argNames" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareAnnotation" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/DeclareAnnotation;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareError" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/DeclareError;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareMixin" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/DeclareMixin;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="interfaces" jni-signature="()[Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class[]" jni-return="[Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareParents" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/DeclareParents;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="defaultImpl" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclarePrecedence" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/DeclarePrecedence;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareWarning" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/DeclareWarning;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="Pointcut" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/Pointcut;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="argNames" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="RequiredTypes" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/RequiredTypes;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()[Ljava/lang/String;" bridge="false" native="false" return="java.lang.String[]" jni-return="[Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="SuppressAjWarnings" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/SuppressAjWarnings;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="value" jni-signature="()[Ljava/lang/String;" bridge="false" native="false" return="java.lang.String[]" jni-return="[Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
  </package>
  <package name="org.aspectj.lang.annotation.control" jni-name="org/aspectj/lang/annotation/control">
    <interface abstract="true" deprecated="not deprecated" final="false" name="CodeGenerationHint" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/annotation/control/CodeGenerationHint;">
      <implements name="java.lang.annotation.Annotation" name-generic-aware="java.lang.annotation.Annotation" jni-type="Ljava/lang/annotation/Annotation;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="ifNameSuffix" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
  </package>
  <package name="org.aspectj.lang.internal.lang" jni-name="org/aspectj/lang/internal/lang">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PlaceHolder" static="false" visibility="" jni-signature="Lorg/aspectj/lang/internal/lang/PlaceHolder;"></class>
  </package>
  <package name="org.aspectj.lang.reflect" jni-name="org/aspectj/lang/reflect">
    <interface abstract="true" deprecated="not deprecated" final="false" name="Advice" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/Advice;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getGenericParameterTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Lorg/aspectj/lang/reflect/AdviceKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.AdviceKind" jni-return="Lorg/aspectj/lang/reflect/AdviceKind;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;org.aspectj.lang.reflect.AdviceKind&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="AdviceKind" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/AdviceKind;">
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.AdviceKind" jni-return="Lorg/aspectj/lang/reflect/AdviceKind;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lorg/aspectj/lang/reflect/AdviceKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.AdviceKind[]" jni-return="[Lorg/aspectj/lang/reflect/AdviceKind;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="AFTER" jni-signature="Lorg/aspectj/lang/reflect/AdviceKind;" static="true" transient="false" type="org.aspectj.lang.reflect.AdviceKind" type-generic-aware="org.aspectj.lang.reflect.AdviceKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="AFTER_RETURNING" jni-signature="Lorg/aspectj/lang/reflect/AdviceKind;" static="true" transient="false" type="org.aspectj.lang.reflect.AdviceKind" type-generic-aware="org.aspectj.lang.reflect.AdviceKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="AFTER_THROWING" jni-signature="Lorg/aspectj/lang/reflect/AdviceKind;" static="true" transient="false" type="org.aspectj.lang.reflect.AdviceKind" type-generic-aware="org.aspectj.lang.reflect.AdviceKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="AROUND" jni-signature="Lorg/aspectj/lang/reflect/AdviceKind;" static="true" transient="false" type="org.aspectj.lang.reflect.AdviceKind" type-generic-aware="org.aspectj.lang.reflect.AdviceKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="BEFORE" jni-signature="Lorg/aspectj/lang/reflect/AdviceKind;" static="true" transient="false" type="org.aspectj.lang.reflect.AdviceKind" type-generic-aware="org.aspectj.lang.reflect.AdviceKind" visibility="public" volatile="false">
      </field>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="AdviceSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/AdviceSignature;">
      <implements name="org.aspectj.lang.reflect.CodeSignature" name-generic-aware="org.aspectj.lang.reflect.CodeSignature" jni-type="Lorg/aspectj/lang/reflect/CodeSignature;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getAdvice" jni-signature="()Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getReturnType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="AjType" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/AjType;">
      <implements name="java.lang.reflect.AnnotatedElement" name-generic-aware="java.lang.reflect.AnnotatedElement" jni-type="Ljava/lang/reflect/AnnotatedElement;">
      </implements>
      <implements name="java.lang.reflect.Type" name-generic-aware="java.lang.reflect.Type" jni-type="Ljava/lang/reflect/Type;">
      </implements>
      <typeParameters>
        <typeParameter name="T" classBound="java.lang.Object" jni-classBound="Ljava/lang/Object;"></typeParameter>
      </typeParameters>
      <method abstract="true" deprecated="not deprecated" final="false" name="getAdvice" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice" jni-return="Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchAdviceException" type="org.aspectj.lang.reflect.NoSuchAdviceException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getAdvice" jni-signature="([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice[]" jni-return="[Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="org.aspectj.lang.reflect.AdviceKind..." jni-type="[Lorg/aspectj/lang/reflect/AdviceKind;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getAjTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getConstructor" jni-signature="([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getConstructors" jni-signature="()[Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor[]" jni-return="[Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclareAnnotations" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareAnnotation;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareAnnotation[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareAnnotation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclareErrorOrWarnings" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareErrorOrWarning[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclareParents" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareParents;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareParents[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareParents;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclarePrecedence" jni-signature="()[Lorg/aspectj/lang/reflect/DeclarePrecedence;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclarePrecedence[]" jni-return="[Lorg/aspectj/lang/reflect/DeclarePrecedence;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclareSofts" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareSoft;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareSoft[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareSoft;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredAdvice" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice" jni-return="Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchAdviceException" type="org.aspectj.lang.reflect.NoSuchAdviceException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredAdvice" jni-signature="([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;" bridge="false" native="false" return="org.aspectj.lang.reflect.Advice[]" jni-return="[Lorg/aspectj/lang/reflect/Advice;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="org.aspectj.lang.reflect.AdviceKind..." jni-type="[Lorg/aspectj/lang/reflect/AdviceKind;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredAjTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredConstructor" jni-signature="([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredConstructors" jni-signature="()[Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor[]" jni-return="[Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredField" jni-signature="(Ljava/lang/String;)Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field" jni-return="Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredFields" jni-signature="()[Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field[]" jni-return="[Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredITDConstructor" jni-signature="(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredITDConstructors" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredITDField" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredITDFields" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredITDMethod" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="p2" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredITDMethods" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredMethod" jni-signature="(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredMethods" jni-signature="()[Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method[]" jni-return="[Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredPointcut" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut" jni-return="Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchPointcutException" type="org.aspectj.lang.reflect.NoSuchPointcutException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaredPointcuts" jni-signature="()[Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut[]" jni-return="[Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getEnclosingConstructor" jni-signature="()Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getEnclosingMethod" jni-signature="()Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getEnclosingType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getEnumConstants" jni-signature="()[Ljava/lang/Object;" bridge="false" native="false" return="T[]" jni-return="[TT;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getField" jni-signature="(Ljava/lang/String;)Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field" jni-return="Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getFields" jni-signature="()[Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field[]" jni-return="[Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getGenericSupertype" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getITDConstructor" jni-signature="(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getITDConstructors" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeConstructorDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getITDField" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchFieldException" type="java.lang.NoSuchFieldException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getITDFields" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeFieldDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getITDMethod" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration" jni-return="Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-type="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <parameter name="p2" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getITDMethods" jni-signature="()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" bridge="false" native="false" return="org.aspectj.lang.reflect.InterTypeMethodDeclaration[]" jni-return="[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getInterfaces" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getJavaClass" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class&lt;T&gt;" jni-return="Ljava/lang/Class&lt;TT;&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getMethod" jni-signature="(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="p1" type="org.aspectj.lang.reflect.AjType&lt;?&gt;..." jni-type="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;">
        </parameter>
        <exception name="NoSuchMethodException" type="java.lang.NoSuchMethodException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getMethods" jni-signature="()[Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method[]" jni-return="[Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPackage" jni-signature="()Ljava/lang/Package;" bridge="false" native="false" return="java.lang.Package" jni-return="Ljava/lang/Package;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPerClause" jni-signature="()Lorg/aspectj/lang/reflect/PerClause;" bridge="false" native="false" return="org.aspectj.lang.reflect.PerClause" jni-return="Lorg/aspectj/lang/reflect/PerClause;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPointcut" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut" jni-return="Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <exception name="NoSuchPointcutException" type="org.aspectj.lang.reflect.NoSuchPointcutException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPointcuts" jni-signature="()[Lorg/aspectj/lang/reflect/Pointcut;" bridge="false" native="false" return="org.aspectj.lang.reflect.Pointcut[]" jni-return="[Lorg/aspectj/lang/reflect/Pointcut;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getSupertype" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getTypeParameters" jni-signature="()[Ljava/lang/reflect/TypeVariable;" bridge="false" native="false" return="java.lang.reflect.TypeVariable&lt;java.lang.Class&lt;T&gt;&gt;[]" jni-return="[Ljava/lang/reflect/TypeVariable&lt;Ljava/lang/Class&lt;TT;&gt;;&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isArray" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isAspect" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isEnum" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isInstance" jni-signature="(Ljava/lang/Object;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isInterface" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isLocalClass" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isMemberAspect" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isMemberClass" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isPrimitive" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isPrivileged" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="AjTypeSystem" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/AjTypeSystem;">
      <constructor deprecated="not deprecated" final="false" name="AjTypeSystem" jni-signature="()V" bridge="false" static="false" type="org.aspectj.lang.reflect.AjTypeSystem" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAjType" jni-signature="(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;T&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;TT;&gt;;" static="true" synchronized="false" synthetic="false" visibility="public">
        <typeParameters>
          <typeParameter name="T" classBound="java.lang.Object" jni-classBound="Ljava/lang/Object;"></typeParameter>
      </typeParameters>
        <parameter name="fromClass" type="java.lang.Class&lt;T&gt;" jni-type="Ljava/lang/Class&lt;TT;&gt;;">
        </parameter>
      </method>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="CatchClauseSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/CatchClauseSignature;">
      <implements name="org.aspectj.lang.Signature" name-generic-aware="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="CodeSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/CodeSignature;">
      <implements name="org.aspectj.lang.reflect.MemberSignature" name-generic-aware="org.aspectj.lang.reflect.MemberSignature" jni-type="Lorg/aspectj/lang/reflect/MemberSignature;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class[]" jni-return="[Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterNames" jni-signature="()[Ljava/lang/String;" bridge="false" native="false" return="java.lang.String[]" jni-return="[Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class[]" jni-return="[Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ConstructorSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/ConstructorSignature;">
      <implements name="org.aspectj.lang.reflect.CodeSignature" name-generic-aware="org.aspectj.lang.reflect.CodeSignature" jni-type="Lorg/aspectj/lang/reflect/CodeSignature;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getConstructor" jni-signature="()Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareAnnotation" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/DeclareAnnotation;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getAnnotation" jni-signature="()Ljava/lang/annotation/Annotation;" bridge="false" native="false" return="java.lang.annotation.Annotation" jni-return="Ljava/lang/annotation/Annotation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getAnnotationAsText" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareAnnotation.Kind" jni-return="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getSignaturePattern" jni-signature="()Lorg/aspectj/lang/reflect/SignaturePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.SignaturePattern" jni-return="Lorg/aspectj/lang/reflect/SignaturePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getTypePattern" jni-signature="()Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern" jni-return="Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;org.aspectj.lang.reflect.DeclareAnnotation.Kind&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="DeclareAnnotation.Kind" static="true" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;">
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareAnnotation.Kind" jni-return="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" bridge="false" native="false" return="org.aspectj.lang.reflect.DeclareAnnotation.Kind[]" jni-return="[Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="Constructor" jni-signature="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="true" transient="false" type="org.aspectj.lang.reflect.DeclareAnnotation.Kind" type-generic-aware="org.aspectj.lang.reflect.DeclareAnnotation.Kind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="Field" jni-signature="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="true" transient="false" type="org.aspectj.lang.reflect.DeclareAnnotation.Kind" type-generic-aware="org.aspectj.lang.reflect.DeclareAnnotation.Kind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="Method" jni-signature="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="true" transient="false" type="org.aspectj.lang.reflect.DeclareAnnotation.Kind" type-generic-aware="org.aspectj.lang.reflect.DeclareAnnotation.Kind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="Type" jni-signature="Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;" static="true" transient="false" type="org.aspectj.lang.reflect.DeclareAnnotation.Kind" type-generic-aware="org.aspectj.lang.reflect.DeclareAnnotation.Kind" visibility="public" volatile="false">
      </field>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareErrorOrWarning" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getMessage" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isError" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareParents" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/DeclareParents;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParentTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getTargetTypesPattern" jni-signature="()Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern" jni-return="Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isExtends" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isImplements" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclarePrecedence" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/DeclarePrecedence;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPrecedenceOrder" jni-signature="()[Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern[]" jni-return="[Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="DeclareSoft" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/DeclareSoft;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getSoftenedExceptionType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="FieldSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/FieldSignature;">
      <implements name="org.aspectj.lang.reflect.MemberSignature" name-generic-aware="org.aspectj.lang.reflect.MemberSignature" jni-type="Lorg/aspectj/lang/reflect/MemberSignature;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getField" jni-signature="()Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field" jni-return="Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getFieldType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="InitializerSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/InitializerSignature;">
      <implements name="org.aspectj.lang.reflect.CodeSignature" name-generic-aware="org.aspectj.lang.reflect.CodeSignature" jni-type="Lorg/aspectj/lang/reflect/CodeSignature;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getInitializer" jni-signature="()Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="InterTypeConstructorDeclaration" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;">
      <implements name="org.aspectj.lang.reflect.InterTypeDeclaration" name-generic-aware="org.aspectj.lang.reflect.InterTypeDeclaration" jni-type="Lorg/aspectj/lang/reflect/InterTypeDeclaration;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getGenericParameterTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="InterTypeDeclaration" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/InterTypeDeclaration;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getTargetType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="ClassNotFoundException" type="java.lang.ClassNotFoundException">
        </exception>
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="InterTypeFieldDeclaration" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;">
      <implements name="org.aspectj.lang.reflect.InterTypeDeclaration" name-generic-aware="org.aspectj.lang.reflect.InterTypeDeclaration" jni-type="Lorg/aspectj/lang/reflect/InterTypeDeclaration;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getGenericType" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="InterTypeMethodDeclaration" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;">
      <implements name="org.aspectj.lang.reflect.InterTypeDeclaration" name-generic-aware="org.aspectj.lang.reflect.InterTypeDeclaration" jni-type="Lorg/aspectj/lang/reflect/InterTypeDeclaration;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getGenericParameterTypes" jni-signature="()[Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type[]" jni-return="[Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getGenericReturnType" jni-signature="()Ljava/lang/reflect/Type;" bridge="false" native="false" return="java.lang.reflect.Type" jni-return="Ljava/lang/reflect/Type;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getReturnType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;" jni-return="Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getTypeParameters" jni-signature="()[Ljava/lang/reflect/TypeVariable;" bridge="false" native="false" return="java.lang.reflect.TypeVariable&lt;java.lang.reflect.Method&gt;[]" jni-return="[Ljava/lang/reflect/TypeVariable&lt;Ljava/lang/reflect/Method;&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="LockSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/LockSignature;">
      <implements name="org.aspectj.lang.Signature" name-generic-aware="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
      </implements>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="MemberSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/MemberSignature;">
      <implements name="org.aspectj.lang.Signature" name-generic-aware="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
      </implements>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="MethodSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/MethodSignature;">
      <implements name="org.aspectj.lang.reflect.CodeSignature" name-generic-aware="org.aspectj.lang.reflect.CodeSignature" jni-type="Lorg/aspectj/lang/reflect/CodeSignature;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getMethod" jni-signature="()Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getReturnType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Exception" extends-generic-aware="java.lang.Exception" jni-extends="Ljava/lang/Exception;" final="false" name="NoSuchAdviceException" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/NoSuchAdviceException;">
      <constructor deprecated="not deprecated" final="false" name="NoSuchAdviceException" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.lang.reflect.NoSuchAdviceException" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Exception" extends-generic-aware="java.lang.Exception" jni-extends="Ljava/lang/Exception;" final="false" name="NoSuchPointcutException" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/NoSuchPointcutException;">
      <constructor deprecated="not deprecated" final="false" name="NoSuchPointcutException" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.lang.reflect.NoSuchPointcutException" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="PerClause" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/PerClause;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Lorg/aspectj/lang/reflect/PerClauseKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.PerClauseKind" jni-return="Lorg/aspectj/lang/reflect/PerClauseKind;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Enum" extends-generic-aware="java.lang.Enum&lt;org.aspectj.lang.reflect.PerClauseKind&gt;" jni-extends="Ljava/lang/Enum;" final="true" name="PerClauseKind" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/PerClauseKind;">
      <method abstract="false" deprecated="not deprecated" final="false" name="valueOf" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/PerClauseKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.PerClauseKind" jni-return="Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="values" jni-signature="()[Lorg/aspectj/lang/reflect/PerClauseKind;" bridge="false" native="false" return="org.aspectj.lang.reflect.PerClauseKind[]" jni-return="[Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <field deprecated="not deprecated" final="true" name="PERCFLOW" jni-signature="Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" transient="false" type="org.aspectj.lang.reflect.PerClauseKind" type-generic-aware="org.aspectj.lang.reflect.PerClauseKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PERCFLOWBELOW" jni-signature="Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" transient="false" type="org.aspectj.lang.reflect.PerClauseKind" type-generic-aware="org.aspectj.lang.reflect.PerClauseKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PERTARGET" jni-signature="Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" transient="false" type="org.aspectj.lang.reflect.PerClauseKind" type-generic-aware="org.aspectj.lang.reflect.PerClauseKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PERTHIS" jni-signature="Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" transient="false" type="org.aspectj.lang.reflect.PerClauseKind" type-generic-aware="org.aspectj.lang.reflect.PerClauseKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="PERTYPEWITHIN" jni-signature="Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" transient="false" type="org.aspectj.lang.reflect.PerClauseKind" type-generic-aware="org.aspectj.lang.reflect.PerClauseKind" visibility="public" volatile="false">
      </field>
      <field deprecated="not deprecated" final="true" name="SINGLETON" jni-signature="Lorg/aspectj/lang/reflect/PerClauseKind;" static="true" transient="false" type="org.aspectj.lang.reflect.PerClauseKind" type-generic-aware="org.aspectj.lang.reflect.PerClauseKind" visibility="public" volatile="false">
      </field>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="Pointcut" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/Pointcut;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType" jni-return="Lorg/aspectj/lang/reflect/AjType;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterNames" jni-signature="()[Ljava/lang/String;" bridge="false" native="false" return="java.lang.String[]" jni-return="[Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Lorg/aspectj/lang/reflect/AjType;" bridge="false" native="false" return="org.aspectj.lang.reflect.AjType&lt;?&gt;[]" jni-return="[Lorg/aspectj/lang/reflect/AjType&lt;*&gt;;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="PointcutBasedPerClause" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/PointcutBasedPerClause;">
      <implements name="org.aspectj.lang.reflect.PerClause" name-generic-aware="org.aspectj.lang.reflect.PerClause" jni-type="Lorg/aspectj/lang/reflect/PerClause;">
      </implements>
      <method abstract="true" deprecated="not deprecated" final="false" name="getPointcutExpression" jni-signature="()Lorg/aspectj/lang/reflect/PointcutExpression;" bridge="false" native="false" return="org.aspectj.lang.reflect.PointcutExpression" jni-return="Lorg/aspectj/lang/reflect/PointcutExpression;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="PointcutExpression" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/PointcutExpression;">
      <method abstract="true" deprecated="not deprecated" final="false" name="asString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="SignaturePattern" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/SignaturePattern;">
      <method abstract="true" deprecated="not deprecated" final="false" name="asString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="SourceLocation" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/SourceLocation;">
      <method abstract="true" deprecated="deprecated" final="false" name="getColumn" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getFileName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getLine" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getWithinType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="TypePattern" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/TypePattern;">
      <method abstract="true" deprecated="not deprecated" final="false" name="asString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="TypePatternBasedPerClause" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/TypePatternBasedPerClause;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getTypePattern" jni-signature="()Lorg/aspectj/lang/reflect/TypePattern;" bridge="false" native="false" return="org.aspectj.lang.reflect.TypePattern" jni-return="Lorg/aspectj/lang/reflect/TypePattern;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="UnlockSignature" static="false" visibility="public" jni-signature="Lorg/aspectj/lang/reflect/UnlockSignature;">
      <implements name="org.aspectj.lang.Signature" name-generic-aware="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
      </implements>
    </interface>
  </package>
  <package name="org.aspectj.runtime" jni-name="org/aspectj/runtime">
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="CFlow" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/CFlow;">
      <constructor deprecated="not deprecated" final="false" name="CFlow" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.CFlow" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="CFlow" jni-signature="(Ljava/lang/Object;)V" bridge="false" static="false" type="org.aspectj.runtime.CFlow" synthetic="false" visibility="public">
        <parameter name="_aspect" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="get" jni-signature="(I)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAspect" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setAspect" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="_aspect" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
    </class>
  </package>
  <package name="org.aspectj.runtime.internal" jni-name="org/aspectj/runtime/internal">
    <class abstract="true" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="AroundClosure" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/AroundClosure;">
      <constructor deprecated="not deprecated" final="false" name="AroundClosure" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.AroundClosure" synthetic="false" visibility="public">
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="AroundClosure" jni-signature="([Ljava/lang/Object;)V" bridge="false" static="false" type="org.aspectj.runtime.internal.AroundClosure" synthetic="false" visibility="public">
        <parameter name="state" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFlags" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getPreInitializationState" jni-signature="()[Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object[]" jni-return="[Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getState" jni-signature="()[Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object[]" jni-return="[Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="linkClosureAndJoinPoint" jni-signature="()Lorg/aspectj/lang/ProceedingJoinPoint;" bridge="false" native="false" return="org.aspectj.lang.ProceedingJoinPoint" jni-return="Lorg/aspectj/lang/ProceedingJoinPoint;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="linkClosureAndJoinPoint" jni-signature="(I)Lorg/aspectj/lang/ProceedingJoinPoint;" bridge="false" native="false" return="org.aspectj.lang.ProceedingJoinPoint" jni-return="Lorg/aspectj/lang/ProceedingJoinPoint;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="flags" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="run" jni-signature="([Ljava/lang/Object;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
        <exception name="Throwable" type="java.lang.Throwable">
        </exception>
      </method>
      <field deprecated="not deprecated" final="false" name="bitflags" jni-signature="I" static="false" transient="false" type="int" type-generic-aware="int" visibility="protected" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="preInitializationState" jni-signature="[Ljava/lang/Object;" static="false" transient="false" type="java.lang.Object[]" type-generic-aware="java.lang.Object[]" visibility="protected" volatile="false">
      </field>
      <field deprecated="not deprecated" final="false" name="state" jni-signature="[Ljava/lang/Object;" static="false" transient="false" type="java.lang.Object[]" type-generic-aware="java.lang.Object[]" visibility="protected" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="CFlowCounter" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/CFlowCounter;">
      <constructor deprecated="not deprecated" final="false" name="CFlowCounter" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.CFlowCounter" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="dec" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getThreadStackFactoryClassName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="inc" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isValid" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.CFlow" extends-generic-aware="org.aspectj.runtime.CFlow" jni-extends="Lorg/aspectj/runtime/CFlow;" final="false" name="CFlowPlusState" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/CFlowPlusState;">
      <constructor deprecated="not deprecated" final="false" name="CFlowPlusState" jni-signature="([Ljava/lang/Object;)V" bridge="false" static="false" type="org.aspectj.runtime.internal.CFlowPlusState" synthetic="false" visibility="public">
        <parameter name="state" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
      </constructor>
      <constructor deprecated="not deprecated" final="false" name="CFlowPlusState" jni-signature="([Ljava/lang/Object;Ljava/lang/Object;)V" bridge="false" static="false" type="org.aspectj.runtime.internal.CFlowPlusState" synthetic="false" visibility="public">
        <parameter name="state" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
        <parameter name="_aspect" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </constructor>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="CFlowStack" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/CFlowStack;">
      <constructor deprecated="not deprecated" final="false" name="CFlowStack" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.CFlowStack" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="get" jni-signature="(I)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="index" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getThreadStackFactoryClassName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isValid" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="peek" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="peekCFlow" jni-signature="()Lorg/aspectj/runtime/CFlow;" bridge="false" native="false" return="org.aspectj.runtime.CFlow" jni-return="Lorg/aspectj/runtime/CFlow;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="peekInstance" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="peekTopCFlow" jni-signature="()Lorg/aspectj/runtime/CFlow;" bridge="false" native="false" return="org.aspectj.runtime.CFlow" jni-return="Lorg/aspectj/runtime/CFlow;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="pop" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="push" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="obj" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="push" jni-signature="([Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="obj" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="pushInstance" jni-signature="(Ljava/lang/Object;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="obj" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="true" name="Conversions" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/Conversions;">
      <method abstract="false" deprecated="not deprecated" final="false" name="booleanObject" jni-signature="(Z)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="boolean" jni-type="Z">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="booleanValue" jni-signature="(Ljava/lang/Object;)Z" bridge="false" native="false" return="boolean" jni-return="Z" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="byteObject" jni-signature="(B)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="byte" jni-type="B">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="byteValue" jni-signature="(Ljava/lang/Object;)B" bridge="false" native="false" return="byte" jni-return="B" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="charObject" jni-signature="(C)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="char" jni-type="C">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="charValue" jni-signature="(Ljava/lang/Object;)C" bridge="false" native="false" return="char" jni-return="C" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="doubleObject" jni-signature="(D)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="double" jni-type="D">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="doubleValue" jni-signature="(Ljava/lang/Object;)D" bridge="false" native="false" return="double" jni-return="D" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="floatObject" jni-signature="(F)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="float" jni-type="F">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="floatValue" jni-signature="(Ljava/lang/Object;)F" bridge="false" native="false" return="float" jni-return="F" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="intObject" jni-signature="(I)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="intValue" jni-signature="(Ljava/lang/Object;)I" bridge="false" native="false" return="int" jni-return="I" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="longObject" jni-signature="(J)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="long" jni-type="J">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="longValue" jni-signature="(Ljava/lang/Object;)J" bridge="false" native="false" return="long" jni-return="J" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="shortObject" jni-signature="(S)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="i" type="short" jni-type="S">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="shortValue" jni-signature="(Ljava/lang/Object;)S" bridge="false" native="false" return="short" jni-return="S" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="voidObject" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="voidValue" jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="o" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="PerObjectMap" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/PerObjectMap;">
      <constructor deprecated="not deprecated" final="false" name="PerObjectMap" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.PerObjectMap" synthetic="false" visibility="public">
      </constructor>
    </class>
  </package>
  <package name="org.aspectj.runtime.internal.cflowstack" jni-name="org/aspectj/runtime/internal/cflowstack">
    <interface abstract="true" deprecated="not deprecated" final="false" name="ThreadCounter" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;">
      <method abstract="true" deprecated="not deprecated" final="false" name="dec" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="inc" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="isNotZero" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="removeThreadCounter" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ThreadCounterImpl11" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11;">
      <implements name="org.aspectj.runtime.internal.cflowstack.ThreadCounter" name-generic-aware="org.aspectj.runtime.internal.cflowstack.ThreadCounter" jni-type="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="ThreadCounterImpl11" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="dec" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="inc" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isNotZero" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="removeThreadCounter" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ThreadCounterImpl11.Counter" static="true" visibility="" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11$Counter;">
      <field deprecated="not deprecated" final="false" name="value" jni-signature="I" static="false" transient="false" type="int" type-generic-aware="int" visibility="protected" volatile="false">
      </field>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ThreadStack" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getThreadStack" jni-signature="()Ljava/util/Stack;" bridge="false" native="false" return="java.util.Stack" jni-return="Ljava/util/Stack;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="removeThreadStack" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <interface abstract="true" deprecated="not deprecated" final="false" name="ThreadStackFactory" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;">
      <method abstract="true" deprecated="not deprecated" final="false" name="getNewThreadCounter" jni-signature="()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;" bridge="false" native="false" return="org.aspectj.runtime.internal.cflowstack.ThreadCounter" jni-return="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="getNewThreadStack" jni-signature="()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;" bridge="false" native="false" return="org.aspectj.runtime.internal.cflowstack.ThreadStack" jni-return="Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ThreadStackFactoryImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl;">
      <implements name="org.aspectj.runtime.internal.cflowstack.ThreadStackFactory" name-generic-aware="org.aspectj.runtime.internal.cflowstack.ThreadStackFactory" jni-type="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="ThreadStackFactoryImpl" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNewThreadCounter" jni-signature="()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;" bridge="false" native="false" return="org.aspectj.runtime.internal.cflowstack.ThreadCounter" jni-return="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNewThreadStack" jni-signature="()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;" bridge="false" native="false" return="org.aspectj.runtime.internal.cflowstack.ThreadStack" jni-return="Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ThreadStackFactoryImpl.1" static="true" visibility="" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl$1;"></class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.ThreadLocal" extends-generic-aware="java.lang.ThreadLocal" jni-extends="Ljava/lang/ThreadLocal;" final="false" name="ThreadStackFactoryImpl.ThreadCounterImpl" static="true" visibility="private" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl$ThreadCounterImpl;">
      <implements name="org.aspectj.runtime.internal.cflowstack.ThreadCounter" name-generic-aware="org.aspectj.runtime.internal.cflowstack.ThreadCounter" jni-type="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="dec" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getThreadCounter" jni-signature="()Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl$ThreadCounterImpl$Counter;" bridge="false" native="false" return="java.lang.Object" jni-return="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl$ThreadCounterImpl$Counter;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="inc" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initialValue" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="isNotZero" jni-signature="()Z" bridge="false" native="false" return="boolean" jni-return="Z" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="removeThreadCounter" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ThreadStackFactoryImpl.ThreadCounterImpl.Counter" static="true" visibility="" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl$ThreadCounterImpl$Counter;">
      <field deprecated="not deprecated" final="false" name="value" jni-signature="I" static="false" transient="false" type="int" type-generic-aware="int" visibility="protected" volatile="false">
      </field>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.ThreadLocal" extends-generic-aware="java.lang.ThreadLocal" jni-extends="Ljava/lang/ThreadLocal;" final="false" name="ThreadStackFactoryImpl.ThreadStackImpl" static="true" visibility="private" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl$ThreadStackImpl;">
      <implements name="org.aspectj.runtime.internal.cflowstack.ThreadStack" name-generic-aware="org.aspectj.runtime.internal.cflowstack.ThreadStack" jni-type="Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getThreadStack" jni-signature="()Ljava/util/Stack;" bridge="false" native="false" return="java.util.Stack" jni-return="Ljava/util/Stack;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="initialValue" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="removeThreadStack" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ThreadStackFactoryImpl11" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl11;">
      <implements name="org.aspectj.runtime.internal.cflowstack.ThreadStackFactory" name-generic-aware="org.aspectj.runtime.internal.cflowstack.ThreadStackFactory" jni-type="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="ThreadStackFactoryImpl11" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl11" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNewThreadCounter" jni-signature="()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;" bridge="false" native="false" return="org.aspectj.runtime.internal.cflowstack.ThreadCounter" jni-return="Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getNewThreadStack" jni-signature="()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;" bridge="false" native="false" return="org.aspectj.runtime.internal.cflowstack.ThreadStack" jni-return="Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="ThreadStackImpl11" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/internal/cflowstack/ThreadStackImpl11;">
      <implements name="org.aspectj.runtime.internal.cflowstack.ThreadStack" name-generic-aware="org.aspectj.runtime.internal.cflowstack.ThreadStack" jni-type="Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="ThreadStackImpl11" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.internal.cflowstack.ThreadStackImpl11" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getThreadStack" jni-signature="()Ljava/util/Stack;" bridge="false" native="false" return="java.util.Stack" jni-return="Ljava/util/Stack;" static="false" synchronized="true" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="removeThreadStack" jni-signature="()V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
  </package>
  <package name="org.aspectj.runtime.reflect" jni-name="org/aspectj/runtime/reflect">
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.CodeSignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.CodeSignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/CodeSignatureImpl;" final="false" name="AdviceSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/AdviceSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.AdviceSignature" name-generic-aware="org.aspectj.lang.reflect.AdviceSignature" jni-type="Lorg/aspectj/lang/reflect/AdviceSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getAdvice" jni-signature="()Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getReturnType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.SignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.SignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/SignatureImpl;" final="false" name="CatchClauseSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/CatchClauseSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.CatchClauseSignature" name-generic-aware="org.aspectj.lang.reflect.CatchClauseSignature" jni-type="Lorg/aspectj/lang/reflect/CatchClauseSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="true" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.MemberSignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.MemberSignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/MemberSignatureImpl;" final="false" name="CodeSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/CodeSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.CodeSignature" name-generic-aware="org.aspectj.lang.reflect.CodeSignature" jni-type="Lorg/aspectj/lang/reflect/CodeSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getExceptionTypes" jni-signature="()[Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class[]" jni-return="[Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterNames" jni-signature="()[Ljava/lang/String;" bridge="false" native="false" return="java.lang.String[]" jni-return="[Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterTypes" jni-signature="()[Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class[]" jni-return="[Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.CodeSignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.CodeSignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/CodeSignatureImpl;" final="false" name="ConstructorSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/ConstructorSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.ConstructorSignature" name-generic-aware="org.aspectj.lang.reflect.ConstructorSignature" jni-type="Lorg/aspectj/lang/reflect/ConstructorSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getConstructor" jni-signature="()Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="true" name="Factory" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/reflect/Factory;">
      <constructor deprecated="not deprecated" final="false" name="Factory" jni-signature="(Ljava/lang/String;Ljava/lang/Class;)V" bridge="false" static="false" type="org.aspectj.runtime.reflect.Factory" synthetic="false" visibility="public">
        <parameter name="filename" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="lexicalClass" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeAdviceSig" jni-signature="(ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/AdviceSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.AdviceSignature" jni-return="Lorg/aspectj/lang/reflect/AdviceSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="int" jni-type="I">
        </parameter>
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterTypes" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterNames" type="java.lang.String[]" jni-type="[Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypes" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
        <parameter name="returnType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeAdviceSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.AdviceSignature" jni-return="Lorg/aspectj/lang/reflect/AdviceSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeAdviceSig" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.AdviceSignature" jni-return="Lorg/aspectj/lang/reflect/AdviceSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramNames" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="returnType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeCatchClauseSig" jni-signature="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.CatchClauseSignature" jni-return="Lorg/aspectj/lang/reflect/CatchClauseSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeCatchClauseSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.CatchClauseSignature" jni-return="Lorg/aspectj/lang/reflect/CatchClauseSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeCatchClauseSig" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.CatchClauseSignature" jni-return="Lorg/aspectj/lang/reflect/CatchClauseSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="parameterType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="parameterName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeConstructorSig" jni-signature="(ILjava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;)Lorg/aspectj/lang/reflect/ConstructorSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.ConstructorSignature" jni-return="Lorg/aspectj/lang/reflect/ConstructorSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="int" jni-type="I">
        </parameter>
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterTypes" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterNames" type="java.lang.String[]" jni-type="[Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypes" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeConstructorSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/ConstructorSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.ConstructorSignature" jni-return="Lorg/aspectj/lang/reflect/ConstructorSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeConstructorSig" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/ConstructorSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.ConstructorSignature" jni-return="Lorg/aspectj/lang/reflect/ConstructorSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramNames" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeESJP" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/Signature;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.EnclosingStaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="sig" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="l" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeESJP" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/Signature;II)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.EnclosingStaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="sig" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="l" type="int" jni-type="I">
        </parameter>
        <parameter name="c" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeESJP" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.EnclosingStaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="sig" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="loc" type="org.aspectj.lang.reflect.SourceLocation" jni-type="Lorg/aspectj/lang/reflect/SourceLocation;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeEncSJP" jni-signature="(Ljava/lang/reflect/Member;)Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="member" type="java.lang.reflect.Member" jni-type="Ljava/lang/reflect/Member;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeFieldSig" jni-signature="(ILjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/FieldSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.FieldSignature" jni-return="Lorg/aspectj/lang/reflect/FieldSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="int" jni-type="I">
        </parameter>
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="fieldType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeFieldSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/FieldSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.FieldSignature" jni-return="Lorg/aspectj/lang/reflect/FieldSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeFieldSig" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/FieldSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.FieldSignature" jni-return="Lorg/aspectj/lang/reflect/FieldSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="fieldType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeInitializerSig" jni-signature="(ILjava/lang/Class;)Lorg/aspectj/lang/reflect/InitializerSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.InitializerSignature" jni-return="Lorg/aspectj/lang/reflect/InitializerSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="int" jni-type="I">
        </parameter>
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeInitializerSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/InitializerSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.InitializerSignature" jni-return="Lorg/aspectj/lang/reflect/InitializerSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeInitializerSig" jni-signature="(Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/InitializerSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.InitializerSignature" jni-return="Lorg/aspectj/lang/reflect/InitializerSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeJP" jni-signature="(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint" jni-return="Lorg/aspectj/lang/JoinPoint;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="staticPart" type="org.aspectj.lang.JoinPoint.StaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$StaticPart;">
        </parameter>
        <parameter name="_this" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="target" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeJP" jni-signature="(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint" jni-return="Lorg/aspectj/lang/JoinPoint;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="staticPart" type="org.aspectj.lang.JoinPoint.StaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$StaticPart;">
        </parameter>
        <parameter name="_this" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="target" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="arg0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeJP" jni-signature="(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint" jni-return="Lorg/aspectj/lang/JoinPoint;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="staticPart" type="org.aspectj.lang.JoinPoint.StaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$StaticPart;">
        </parameter>
        <parameter name="_this" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="target" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="arg0" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="arg1" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeJP" jni-signature="(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint" jni-return="Lorg/aspectj/lang/JoinPoint;" static="true" synchronized="false" synthetic="false" visibility="public">
        <parameter name="staticPart" type="org.aspectj.lang.JoinPoint.StaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$StaticPart;">
        </parameter>
        <parameter name="_this" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="target" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="args" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeLockSig" jni-signature="()Lorg/aspectj/lang/reflect/LockSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.LockSignature" jni-return="Lorg/aspectj/lang/reflect/LockSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeLockSig" jni-signature="(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/LockSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.LockSignature" jni-return="Lorg/aspectj/lang/reflect/LockSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeLockSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/LockSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.LockSignature" jni-return="Lorg/aspectj/lang/reflect/LockSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeMethodSig" jni-signature="(ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/MethodSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.MethodSignature" jni-return="Lorg/aspectj/lang/reflect/MethodSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="int" jni-type="I">
        </parameter>
        <parameter name="name" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterTypes" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
        <parameter name="parameterNames" type="java.lang.String[]" jni-type="[Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypes" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
        <parameter name="returnType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeMethodSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/MethodSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.MethodSignature" jni-return="Lorg/aspectj/lang/reflect/MethodSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeMethodSig" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/MethodSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.MethodSignature" jni-return="Lorg/aspectj/lang/reflect/MethodSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="modifiers" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="methodName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramNames" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="returnType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeSJP" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="modifiers" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="methodName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramNames" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="returnType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="l" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeSJP" jni-signature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="modifiers" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="methodName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="declaringType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="paramNames" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="exceptionTypes" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="returnType" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="l" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeSJP" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/Signature;I)Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="sig" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="l" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeSJP" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/Signature;II)Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="sig" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="l" type="int" jni-type="I">
        </parameter>
        <parameter name="c" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeSJP" jni-signature="(Ljava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="sig" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="loc" type="org.aspectj.lang.reflect.SourceLocation" jni-type="Lorg/aspectj/lang/reflect/SourceLocation;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeSourceLoc" jni-signature="(II)Lorg/aspectj/lang/reflect/SourceLocation;" bridge="false" native="false" return="org.aspectj.lang.reflect.SourceLocation" jni-return="Lorg/aspectj/lang/reflect/SourceLocation;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="line" type="int" jni-type="I">
        </parameter>
        <parameter name="col" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeUnlockSig" jni-signature="()Lorg/aspectj/lang/reflect/UnlockSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.UnlockSignature" jni-return="Lorg/aspectj/lang/reflect/UnlockSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeUnlockSig" jni-signature="(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/UnlockSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.UnlockSignature" jni-return="Lorg/aspectj/lang/reflect/UnlockSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="declaringType" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeUnlockSig" jni-signature="(Ljava/lang/String;)Lorg/aspectj/lang/reflect/UnlockSignature;" bridge="false" native="false" return="org.aspectj.lang.reflect.UnlockSignature" jni-return="Lorg/aspectj/lang/reflect/UnlockSignature;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.MemberSignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.MemberSignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/MemberSignatureImpl;" final="false" name="FieldSignatureImpl" static="false" visibility="public" jni-signature="Lorg/aspectj/runtime/reflect/FieldSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.FieldSignature" name-generic-aware="org.aspectj.lang.reflect.FieldSignature" jni-type="Lorg/aspectj/lang/reflect/FieldSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getField" jni-signature="()Ljava/lang/reflect/Field;" bridge="false" native="false" return="java.lang.reflect.Field" jni-return="Ljava/lang/reflect/Field;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFieldType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.CodeSignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.CodeSignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/CodeSignatureImpl;" final="false" name="InitializerSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/InitializerSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.InitializerSignature" name-generic-aware="org.aspectj.lang.reflect.InitializerSignature" jni-type="Lorg/aspectj/lang/reflect/InitializerSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getInitializer" jni-signature="()Ljava/lang/reflect/Constructor;" bridge="false" native="false" return="java.lang.reflect.Constructor" jni-return="Ljava/lang/reflect/Constructor;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="JoinPointImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/JoinPointImpl;">
      <implements name="org.aspectj.lang.ProceedingJoinPoint" name-generic-aware="org.aspectj.lang.ProceedingJoinPoint" jni-type="Lorg/aspectj/lang/ProceedingJoinPoint;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="JoinPointImpl" jni-signature="(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)V" bridge="false" static="false" type="org.aspectj.runtime.reflect.JoinPointImpl" synthetic="false" visibility="public">
        <parameter name="staticPart" type="org.aspectj.lang.JoinPoint.StaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$StaticPart;">
        </parameter>
        <parameter name="_this" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="target" type="java.lang.Object" jni-type="Ljava/lang/Object;">
        </parameter>
        <parameter name="args" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getArgs" jni-signature="()[Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object[]" jni-return="[Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSignature" jni-signature="()Lorg/aspectj/lang/Signature;" bridge="false" native="false" return="org.aspectj.lang.Signature" jni-return="Lorg/aspectj/lang/Signature;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSourceLocation" jni-signature="()Lorg/aspectj/lang/reflect/SourceLocation;" bridge="false" native="false" return="org.aspectj.lang.reflect.SourceLocation" jni-return="Lorg/aspectj/lang/reflect/SourceLocation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getStaticPart" jni-signature="()Lorg/aspectj/lang/JoinPoint$StaticPart;" bridge="false" native="false" return="org.aspectj.lang.JoinPoint.StaticPart" jni-return="Lorg/aspectj/lang/JoinPoint$StaticPart;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getTarget" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getThis" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="proceed" jni-signature="()Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <exception name="Throwable" type="java.lang.Throwable">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="proceed" jni-signature="([Ljava/lang/Object;)Ljava/lang/Object;" bridge="false" native="false" return="java.lang.Object" jni-return="Ljava/lang/Object;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="adviceBindings" type="java.lang.Object[]" jni-type="[Ljava/lang/Object;">
        </parameter>
        <exception name="Throwable" type="java.lang.Throwable">
        </exception>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toLongString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toShortString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.JoinPointImpl.StaticPartImpl" extends-generic-aware="org.aspectj.runtime.reflect.JoinPointImpl.StaticPartImpl" jni-extends="Lorg/aspectj/runtime/reflect/JoinPointImpl$StaticPartImpl;" final="false" name="JoinPointImpl.EnclosingStaticPartImpl" static="true" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/JoinPointImpl$EnclosingStaticPartImpl;">
      <implements name="org.aspectj.lang.JoinPoint.EnclosingStaticPart" name-generic-aware="org.aspectj.lang.JoinPoint.EnclosingStaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="JoinPointImpl.EnclosingStaticPartImpl" jni-signature="(ILjava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)V" bridge="false" static="false" type="org.aspectj.runtime.reflect.JoinPointImpl.EnclosingStaticPartImpl" synthetic="false" visibility="public">
        <parameter name="count" type="int" jni-type="I">
        </parameter>
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="signature" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="sourceLocation" type="org.aspectj.lang.reflect.SourceLocation" jni-type="Lorg/aspectj/lang/reflect/SourceLocation;">
        </parameter>
      </constructor>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="JoinPointImpl.StaticPartImpl" static="true" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/JoinPointImpl$StaticPartImpl;">
      <implements name="org.aspectj.lang.JoinPoint.StaticPart" name-generic-aware="org.aspectj.lang.JoinPoint.StaticPart" jni-type="Lorg/aspectj/lang/JoinPoint$StaticPart;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="JoinPointImpl.StaticPartImpl" jni-signature="(ILjava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)V" bridge="false" static="false" type="org.aspectj.runtime.reflect.JoinPointImpl.StaticPartImpl" synthetic="false" visibility="public">
        <parameter name="id" type="int" jni-type="I">
        </parameter>
        <parameter name="kind" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
        <parameter name="signature" type="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
        </parameter>
        <parameter name="sourceLocation" type="org.aspectj.lang.reflect.SourceLocation" jni-type="Lorg/aspectj/lang/reflect/SourceLocation;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getId" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getKind" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSignature" jni-signature="()Lorg/aspectj/lang/Signature;" bridge="false" native="false" return="org.aspectj.lang.Signature" jni-return="Lorg/aspectj/lang/Signature;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getSourceLocation" jni-signature="()Lorg/aspectj/lang/reflect/SourceLocation;" bridge="false" native="false" return="org.aspectj.lang.reflect.SourceLocation" jni-return="Lorg/aspectj/lang/reflect/SourceLocation;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toLongString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toShortString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.SignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.SignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/SignatureImpl;" final="false" name="LockSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/LockSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.LockSignature" name-generic-aware="org.aspectj.lang.reflect.LockSignature" jni-type="Lorg/aspectj/lang/reflect/LockSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="true" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.SignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.SignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/SignatureImpl;" final="false" name="MemberSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/MemberSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.MemberSignature" name-generic-aware="org.aspectj.lang.reflect.MemberSignature" jni-type="Lorg/aspectj/lang/reflect/MemberSignature;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="MemberSignatureImpl" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.runtime.reflect.MemberSignatureImpl" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.CodeSignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.CodeSignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/CodeSignatureImpl;" final="false" name="MethodSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/MethodSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.MethodSignature" name-generic-aware="org.aspectj.lang.reflect.MethodSignature" jni-type="Lorg/aspectj/lang/reflect/MethodSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getMethod" jni-signature="()Ljava/lang/reflect/Method;" bridge="false" native="false" return="java.lang.reflect.Method" jni-return="Ljava/lang/reflect/Method;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getReturnType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="true" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="SignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/SignatureImpl;">
      <implements name="org.aspectj.lang.Signature" name-generic-aware="org.aspectj.lang.Signature" jni-type="Lorg/aspectj/lang/Signature;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="SignatureImpl" jni-signature="(Ljava/lang/String;)V" bridge="false" static="false" type="org.aspectj.runtime.reflect.SignatureImpl" synthetic="false" visibility="public">
        <parameter name="stringRep" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getDeclaringTypeName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getModifiers" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="setLookupClassLoader" jni-signature="(Ljava/lang/ClassLoader;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="loader" type="java.lang.ClassLoader" jni-type="Ljava/lang/ClassLoader;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toLongString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toShortString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="true" name="toString" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <interface abstract="true" deprecated="not deprecated" final="false" name="SignatureImpl.Cache" static="true" visibility="private" jni-signature="Lorg/aspectj/runtime/reflect/SignatureImpl$Cache;">
      <method abstract="true" deprecated="not deprecated" final="false" name="get" jni-signature="(I)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="true" deprecated="not deprecated" final="false" name="set" jni-signature="(ILjava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="p0" type="int" jni-type="I">
        </parameter>
        <parameter name="p1" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
    </interface>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="true" name="SignatureImpl.CacheImpl" static="true" visibility="private" jni-signature="Lorg/aspectj/runtime/reflect/SignatureImpl$CacheImpl;">
      <implements name="org.aspectj.runtime.reflect.SignatureImpl.Cache" name-generic-aware="org.aspectj.runtime.reflect.SignatureImpl.Cache" jni-type="Lorg/aspectj/runtime/reflect/SignatureImpl$Cache;">
      </implements>
      <constructor deprecated="not deprecated" final="false" name="SignatureImpl.CacheImpl" jni-signature="()V" bridge="false" static="false" type="org.aspectj.runtime.reflect.SignatureImpl.CacheImpl" synthetic="false" visibility="public">
      </constructor>
      <method abstract="false" deprecated="not deprecated" final="false" name="get" jni-signature="(I)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="cacheOffset" type="int" jni-type="I">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="set" jni-signature="(ILjava/lang/String;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="cacheOffset" type="int" jni-type="I">
        </parameter>
        <parameter name="result" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="SourceLocationImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/SourceLocationImpl;">
      <implements name="org.aspectj.lang.reflect.SourceLocation" name-generic-aware="org.aspectj.lang.reflect.SourceLocation" jni-type="Lorg/aspectj/lang/reflect/SourceLocation;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getColumn" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getFileName" jni-signature="()Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getLine" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="getWithinType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" jni-extends="Ljava/lang/Object;" final="false" name="StringMaker" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/StringMaker;">
      <method abstract="false" deprecated="not deprecated" final="false" name="addSignature" jni-signature="(Ljava/lang/StringBuffer;[Ljava/lang/Class;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="buf" type="java.lang.StringBuffer" jni-type="Ljava/lang/StringBuffer;">
        </parameter>
        <parameter name="types" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="addThrows" jni-signature="(Ljava/lang/StringBuffer;[Ljava/lang/Class;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="buf" type="java.lang.StringBuffer" jni-type="Ljava/lang/StringBuffer;">
        </parameter>
        <parameter name="types" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="addTypeNames" jni-signature="(Ljava/lang/StringBuffer;[Ljava/lang/Class;)V" bridge="false" native="false" return="void" jni-return="V" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="buf" type="java.lang.StringBuffer" jni-type="Ljava/lang/StringBuffer;">
        </parameter>
        <parameter name="types" type="java.lang.Class[]" jni-type="[Ljava/lang/Class;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makePrimaryTypeName" jni-signature="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="type" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
        <parameter name="typeName" type="java.lang.String" jni-type="Ljava/lang/String;">
        </parameter>
      </method>
      <method abstract="false" deprecated="not deprecated" final="false" name="makeTypeName" jni-signature="(Ljava/lang/Class;)Ljava/lang/String;" bridge="false" native="false" return="java.lang.String" jni-return="Ljava/lang/String;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="type" type="java.lang.Class" jni-type="Ljava/lang/Class;">
        </parameter>
      </method>
    </class>
    <class abstract="false" deprecated="not deprecated" extends="org.aspectj.runtime.reflect.SignatureImpl" extends-generic-aware="org.aspectj.runtime.reflect.SignatureImpl" jni-extends="Lorg/aspectj/runtime/reflect/SignatureImpl;" final="false" name="UnlockSignatureImpl" static="false" visibility="" jni-signature="Lorg/aspectj/runtime/reflect/UnlockSignatureImpl;">
      <implements name="org.aspectj.lang.reflect.UnlockSignature" name-generic-aware="org.aspectj.lang.reflect.UnlockSignature" jni-type="Lorg/aspectj/lang/reflect/UnlockSignature;">
      </implements>
      <method abstract="false" deprecated="not deprecated" final="false" name="getParameterType" jni-signature="()Ljava/lang/Class;" bridge="false" native="false" return="java.lang.Class" jni-return="Ljava/lang/Class;" static="false" synchronized="false" synthetic="false" visibility="public">
      </method>
    </class>
  </package>
</api>
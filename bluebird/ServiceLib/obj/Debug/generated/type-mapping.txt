com/morpho/android/annotation/WakeLockabble = Com.Morpho.Android.Annotation.IWakeLockabble
com/morpho/android/annotation/WakeLockAspect = Com.Morpho.Android.Annotation.WakeLockAspect
  <init>()V = .ctor()
  hasAspect()Z = HasAspect
  aroundAdvice(Lorg/aspectj/lang/ProceedingJoinPoint;)Ljava/lang/Object; = AroundAdvice(Org.Aspectj.Lang.IProceedingJoinPoint)
  aspectOf()Lcom/morpho/android/annotation/WakeLockAspect; = AspectOf()
com/morpho/android/usb/USBConstants = Com.Morpho.Android.Usb.USBConstants
  <init>()V = .ctor()
  DEFAULT_PACKET_SIZE = DefaultPacketSize
  DEFAULT_STRING_DESCRIPTOR_SIZE = DefaultStringDescriptorSize
  FORCE_CLAIM = ForceClaim
  INVALID_USB_INTERFACE = InvalidUsbInterface
  OFFSET_MANUFACTRURER_IDX = OffsetManufactrurerIdx
  OFFSET_MAX_PACKET_SIZE = OffsetMaxPacketSize
  OFFSET_PRODUCT_IDX = OffsetProductIdx
  OFFSET_SERIAL_IDX = OffsetSerialIdx
  RETURN_ERROR_CANNOT_CLAIM_INTERFACE = ReturnErrorCannotClaimInterface
  RETURN_ERROR_CANNOT_GET_STRING_DESCRIPTOR = ReturnErrorCannotGetStringDescriptor
  RETURN_ERROR_CANNOT_RELEASE_INTERFACE = ReturnErrorCannotReleaseInterface
  RETURN_ERROR_DEVICE_NOT_CONNECTED = ReturnErrorDeviceNotConnected
  RETURN_ERROR_FEATURE_REPORT_GET_FAILURE = ReturnErrorFeatureReportGetFailure
  RETURN_ERROR_FEATURE_REPORT_SEND_FAILURE = ReturnErrorFeatureReportSendFailure
  RETURN_ERROR_UNABLE_TO_READ_DATA = ReturnErrorUnableToReadData
  RETURN_ERROR_UNABLE_TO_WRITE_DATA = ReturnErrorUnableToWriteData
  RETURN_SUCCESS = ReturnSuccess
  SPUSB_TIMEOUT_INFINITE = SpusbTimeoutInfinite
  TIMEOUT = Timeout
  USB_DESCRIPTOR_DEVICE = UsbDescriptorDevice
  USB_DESCRIPTOR_REPORT = UsbDescriptorReport
  USB_DESCRIPTOR_STRING = UsbDescriptorString
  USB_DEVICE_DESCRIPTOR_LANGUAGE_ENGLISH = UsbDeviceDescriptorLanguageEnglish
  USB_DEVICE_DESCRIPTOR_LENGTH = UsbDeviceDescriptorLength
  USB_ENDPOINT_ADDRESS_MASK = UsbEndpointAddressMask
  USB_ENDPOINT_DIR_MASK = UsbEndpointDirMask
  USB_ENDPOINT_IN = UsbEndpointIn
  USB_ENDPOINT_OUT = UsbEndpointOut
  USB_ENDPOINT_TYPE_BULK = UsbEndpointTypeBulk
  USB_ENDPOINT_TYPE_CONTROL = UsbEndpointTypeControl
  USB_ENDPOINT_TYPE_INTERRUPT = UsbEndpointTypeInterrupt
  USB_ENDPOINT_TYPE_ISOCHRONOUS = UsbEndpointTypeIsochronous
  USB_ENDPOINT_TYPE_MASK = UsbEndpointTypeMask
  USB_MAXINTERFACES = UsbMaxinterfaces
  USB_RECIPIENT_INTERFACE = UsbRecipientInterface
  USB_REPORT_TYPE_FEATURE = UsbReportTypeFeature
  USB_REPORT_TYPE_STRING = UsbReportTypeString
  USB_REQUEST_GET_DESCRIPTOR = UsbRequestGetDescriptor
  USB_REQUEST_GET_FEATURE = UsbRequestGetFeature
  USB_REQUEST_SET_FEATURE = UsbRequestSetFeature
  USB_REQUEST_TYPE_CLASS = UsbRequestTypeClass
  USB_REQUEST_TYPE_STANDARD = UsbRequestTypeStandard
com/morpho/android/usb/USBDevice = Com.Morpho.Android.Usb.USBDevice
  <init>(Lcom/morpho/android/usb/USBDeviceAttributes;Landroid/hardware/usb/UsbManager;Landroid/hardware/usb/UsbDevice;)V = .ctor(Com.Morpho.Android.Usb.USBDeviceAttributes, Android.Hardware.Usb.UsbManager, Android.Hardware.Usb.UsbDevice)
  mAttributes = MAttributes
  mConnection = MConnection
  mDevice = MDevice
  mEndpointIn = MEndpointIn
  mEndpointOut = MEndpointOut
  mFreindlyName = MFreindlyName
  mInterface = MInterface
  mManager = MManager
  mMaxPacketInSize = MMaxPacketInSize
  mMaxPacketOutSize = MMaxPacketOutSize
  getAttributes()Lcom/morpho/android/usb/USBDeviceAttributes; = Attributes
  hasPermission()Z = HasPermission
  getMaxPacketInSize()I = MaxPacketInSize
  getMaxPacketOutSize()I = MaxPacketOutSize
  getProductString()Ljava/lang/String; = ProductString
  getSerialNumberString()Ljava/lang/String; = SerialNumberString
  claimInterface()Landroid/hardware/usb/UsbInterface; = ClaimInterface()
  close()I = Close()
  CreateInterface(I)Landroid/hardware/usb/UsbInterface; = CreateInterface(int)
  findEndPoint()I = FindEndPoint()
  getStringSimple([BI)I = GetStringSimple(byte[], int)
  open()I = Open()
  read([BII)I = Read(byte[], int, int)
  write([BII)I = Write(byte[], int, int)
com/morpho/android/usb/USBDeviceAttributes = Com.Morpho.Android.Usb.USBDeviceAttributes
  <init>(II)V = .ctor(int, int)
  <init>(III)V = .ctor(int, int, int)
  <init>(Ljava/lang/String;III)V = .ctor(string, int, int, int)
  CREATOR = Creator
  getDeviceType()I = DeviceType
  setDeviceType(I)V = DeviceType
  getFreindlyName()Ljava/lang/String; = FreindlyName
  setFreindlyName(Ljava/lang/String;)V = FreindlyName
  getInterfaceNumber()I = InterfaceNumber
  getManufacturer()Ljava/lang/String; = Manufacturer
  getPath()Ljava/lang/String; = Path
  getProduct()Ljava/lang/String; = Product
  setProduct(Ljava/lang/String;)V = Product
  getProductId()I = ProductId
  getVendorId()I = VendorId
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/morpho/android/usb/USBManager = Com.Morpho.Android.Usb.USBManager
  ACTION_USB_PERMISSION = ActionUsbPermission
  context = Context
  screenReceiverMap = ScreenReceiverMap
  SOFTWAREID_CBM = SoftwareidCbm
  SOFTWAREID_CBME3 = SoftwareidCbme3
  SOFTWAREID_CBMV3 = SoftwareidCbmv3
  SOFTWAREID_FVP = SoftwareidFvp
  SOFTWAREID_FVP_C = SoftwareidFvpC
  SOFTWAREID_FVP_CL = SoftwareidFvpCl
  SOFTWAREID_MASIGMA = SoftwareidMasigma
  SOFTWAREID_MEP = SoftwareidMep
  SOFTWAREID_MSO100 = SoftwareidMso100
  SOFTWAREID_MSO1300E3 = SoftwareidMso1300e3
  SOFTWAREID_MSO1300V3 = SoftwareidMso1300v3
  SOFTWAREID_MSO1350 = SoftwareidMso1350
  SOFTWAREID_MSO1350E3 = SoftwareidMso1350e3
  SOFTWAREID_MSO1350V3 = SoftwareidMso1350v3
  SOFTWAREID_MSO300 = SoftwareidMso300
  SOFTWAREID_MSO350 = SoftwareidMso350
  waitReboot = WaitReboot
  WakeLockEnabled = WakeLockEnabled
  getInstance()Lcom/morpho/android/usb/USBManager; = Instance
  isDevicesHasPermission()Z = IsDevicesHasPermission
  getNbDevices()I = NbDevices
  getUsbDaemonVersion()Ljava/lang/String; = UsbDaemonVersion
  checkWakeLockPermission(Landroid/content/Context;)V = CheckWakeLockPermission(Android.Content.Context)
  closeUsbDeviceConnection()V = CloseUsbDeviceConnection()
  enumerate()[Lcom/morpho/android/usb/USBDeviceAttributes; = Enumerate()
  getDevice(I)Lcom/morpho/android/usb/USBDevice; = GetDevice(int)
  getDeviceInformations(Ljava/lang/String;[I[I[I)I = GetDeviceInformations(string, int[], int[], int[])
  getDeviceModel(Lcom/morpho/android/usb/USBDeviceAttributes;)Ljava/lang/String; = GetDeviceModel(Com.Morpho.Android.Usb.USBDeviceAttributes)
  getFileDescriptor(II)I = GetFileDescriptor(int, int)
  initialize()V = Initialize()
  initialize(Landroid/app/Activity;Ljava/lang/String;)I = Initialize(Android.App.Activity, string)
  initialize(Landroid/content/Context;Ljava/lang/String;)I = Initialize(Android.Content.Context, string)
  initialize(Landroid/content/Context;Ljava/lang/String;Z)I = Initialize(Android.Content.Context, string, bool)
  isSupported(Lcom/morpho/android/usb/USBDeviceAttributes;)Z = IsSupported(Com.Morpho.Android.Usb.USBDeviceAttributes)
  IsUsbDaemonStarted()I = IsUsbDaemonStarted()
  listDevices()V = ListDevices()
  scanDevice()I = ScanDevice()
  unRegister(Landroid/content/Context;Lcom/morpho/morphosmart/sdk/MorphoDevice$ScreenBroadcastReceiver;)V = UnRegister(Android.Content.Context, Com.Morpho.Morphosmart.Sdk.MorphoDevice.ScreenBroadcastReceiver)
com/morpho/morphosmart/device/IMophoDeviceManager = Com.Morpho.Morphosmart.Device.IMophoDeviceManager
  closeDevice()I = CloseDevice()
  comReceive(I)[B = ComReceive(int)
  comSend(I[B)I = ComSend(int, byte[])
  getUsbDeviceName(I)Ljava/lang/String; = GetUsbDeviceName(int)
  initUsbDevicesNameEnum([I)I = InitUsbDevicesNameEnum(int[])
  openUsbDevice(Ljava/lang/String;I)I = OpenUsbDevice(string, int)
com/morpho/morphosmart/logger/ISubscriber = Com.Morpho.Morphosmart.Logger.ISubscriber
  notification(Lcom/morpho/morphosmart/logger/LogLevel;Ljava/lang/Object;)V = Notification(Com.Morpho.Morphosmart.Logger.LogLevel, Java.Lang.Object)
com/morpho/morphosmart/logger/Logger = Com.Morpho.Morphosmart.Logger.Logger
  subscribers = Subscribers
  getInstance()Lcom/morpho/morphosmart/logger/Logger; = Instance
  log(Lcom/morpho/morphosmart/logger/LogLevel;Ljava/lang/String;)V = Log(Com.Morpho.Morphosmart.Logger.LogLevel, string)
  sendNotification(Lcom/morpho/morphosmart/logger/LogLevel;Ljava/lang/String;)V = SendNotification(Com.Morpho.Morphosmart.Logger.LogLevel, string)
  subscribe(Lcom/morpho/morphosmart/logger/ISubscriber;)V = Subscribe(Com.Morpho.Morphosmart.Logger.ISubscriber)
com/morpho/morphosmart/logger/LogLevel = Com.Morpho.Morphosmart.Logger.LogLevel
  DEBUG = Debug
  ERROR = Error
  INFO = Info
  VERBOSE = Verbose
  WARN = Warn
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/logger/LogLevel; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/logger/LogLevel; = Values()
com/morpho/morphosmart/pipe/Holder = Com.Morpho.Morphosmart.Pipe.Holder
  <init>()V = .ctor()
  data = Data
com/morpho/morphosmart/pipe/IMsoPipeConstants = Com.Morpho.Morphosmart.Pipe.IMsoPipeConstants
  COMERR_TIMEOUT_RECEIVE = ComerrTimeoutReceive
  MAX_RECV_TIME = MaxRecvTime
  SP_PIPE_TAG_COMRECV = SpPipeTagComrecv
  SP_PIPE_TAG_COMSEND = SpPipeTagComsend
  SP_PIPE_TAG_CONNECT_MSO = SpPipeTagConnectMso
  SP_PIPE_TAG_MSO_LIST = SpPipeTagMsoList
com/morpho/morphosmart/pipe/PipeFunctions = Com.Morpho.Morphosmart.Pipe.PipeFunctions
  <init>()V = .ctor()
  getSocket()Ljava/net/Socket; = Socket
  setSocket(Ljava/net/Socket;)V = Socket
  reverse4Byte([B)I = Reverse4Byte(byte[])
  reverseInt(I)[B = ReverseInt(int)
  setFinish(Z)V = SetFinish(bool)
  Sp_Pipe_Receive_LenAndDatas(Lcom/morpho/morphosmart/pipe/Holder;)I = Sp_Pipe_Receive_LenAndDatas(Com.Morpho.Morphosmart.Pipe.Holder)
  Sp_Pipe_Receive_Responses(Lcom/morpho/morphosmart/pipe/Holder;II)I = Sp_Pipe_Receive_Responses(Com.Morpho.Morphosmart.Pipe.Holder, int, int)
  Sp_Pipe_Receive_Status()I = Sp_Pipe_Receive_Status()
  Sp_Pipe_Send_LenAndDatas([B)I = Sp_Pipe_Send_LenAndDatas(byte[])
  Sp_Pipe_Send_TagAndStatus(BI)I = Sp_Pipe_Send_TagAndStatus(sbyte, int)
  TCP_Client_Close()I = TCP_Client_Close()
  TCP_Client_Connect(Ljava/lang/String;I)I = TCP_Client_Connect(string, int)
  TCP_Recv([BII)I = TCP_Recv(byte[], int, int)
  TCP_Send([B)I = TCP_Send(byte[])
com/morpho/morphosmart/pipe/PipeServer = Com.Morpho.Morphosmart.Pipe.PipeServer
  <init>(ILcom/morpho/morphosmart/device/IMophoDeviceManager;)V = .ctor(int, Com.Morpho.Morphosmart.Device.IMophoDeviceManager)
  <init>(Lcom/morpho/morphosmart/device/IMophoDeviceManager;)V = .ctor(Com.Morpho.Morphosmart.Device.IMophoDeviceManager)
  isRunningServer()Z = IsRunningServer
  process_client(Ljava/net/Socket;)V = Process_client(Java.Net.Socket)
  run()V = Run()
  setiMorphoDevice(Lcom/morpho/morphosmart/device/IMophoDeviceManager;)V = SetiMorphoDevice(Com.Morpho.Morphosmart.Device.IMophoDeviceManager)
  setlogger(Lcom/morpho/morphosmart/logger/Logger;)V = Setlogger(Com.Morpho.Morphosmart.Logger.Logger)
  start()V = Start()
  stop()V = Stop()
com/morpho/morphosmart/sdk/CallbackMask = Com.Morpho.Morphosmart.Sdk.CallbackMask
  MORPHO_CALLBACK_CODEQUALITY = MorphoCallbackCodequality
  MORPHO_CALLBACK_COMMAND_CMD = MorphoCallbackCommandCmd
  MORPHO_CALLBACK_DETECTQUALITY = MorphoCallbackDetectquality
  MORPHO_CALLBACK_ENROLLMENT_CMD = MorphoCallbackEnrollmentCmd
  MORPHO_CALLBACK_IMAGE_CMD = MorphoCallbackImageCmd
  MORPHO_CALLBACK_LAST_IMAGE_FULL_RES_CMD = MorphoCallbackLastImageFullResCmd
  getValue()I = Value
  setValue(I)V = Value
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/CallbackMask; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/CallbackMask; = Values()
com/morpho/morphosmart/sdk/CallbackMessage = Com.Morpho.Morphosmart.Sdk.CallbackMessage
  <init>()V = .ctor()
  getMessage()Ljava/lang/Object; = Message
  setMessage(Ljava/lang/Object;)V = Message
  getMessageType()I = MessageType
  setMessageType(I)V = MessageType
com/morpho/morphosmart/sdk/Coder = Com.Morpho.Morphosmart.Sdk.Coder
  MORPHO_DEFAULT_CODER = MorphoDefaultCoder
  MORPHO_MSO_V9_CODER = MorphoMsoV9Coder
  MORPHO_MSO_V9_JUV_CODER = MorphoMsoV9JuvCoder
  MORPHO_MSO_V9_THIN_FINGER_CODER = MorphoMsoV9ThinFingerCoder
  getCode()I = Code
  getLabel()Ljava/lang/String; = Label
  fromString(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/Coder; = FromString(string)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/Coder; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/Coder; = Values()
com/morpho/morphosmart/sdk/CompressionAlgorithm = Com.Morpho.Morphosmart.Sdk.CompressionAlgorithm
  MORPHO_COMPRESS_V1 = MorphoCompressV1
  MORPHO_COMPRESS_WSQ = MorphoCompressWsq
  MORPHO_NO_COMPRESS = MorphoNoCompress
  NO_IMAGE = NoImage
  getCode()I = Code
  getExtension()Ljava/lang/String; = Extension
  getLabel()Ljava/lang/String; = Label
  GetCompressionAlgorithm(I)Lcom/morpho/morphosmart/sdk/CompressionAlgorithm; = GetCompressionAlgorithm(int)
  getValue(I)Lcom/morpho/morphosmart/sdk/CompressionAlgorithm; = GetValue(int)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/CompressionAlgorithm; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/CompressionAlgorithm; = Values()
com/morpho/morphosmart/sdk/DescriptorID = Com.Morpho.Morphosmart.Sdk.DescriptorID
  BINDESC_CUSTOM_DESCRIPTOR = BindescCustomDescriptor
  BINDESC_FLASH_SIZE = BindescFlashSize
  BINDESC_LICENSES = BindescLicenses
  BINDESC_MAX_DB = BindescMaxDb
  BINDESC_MAX_USER = BindescMaxUser
  BINDESC_OEM_PID = BindescOemPid
  BINDESC_OEM_SN = BindescOemSn
  BINDESC_PID = BindescPid
  BINDESC_PRODUCT_NAME = BindescProductName
  BINDESC_SENSOR_ID = BindescSensorId
  BINDESC_SENSOR_SN = BindescSensorSn
  BINDESC_SN = BindescSn
  BINDESC_SOFT = BindescSoft
  BINDESC_VERSION = BindescVersion
  getValue()I = Value
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/DescriptorID; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/DescriptorID; = Values()
com/morpho/morphosmart/sdk/DetectionMode = Com.Morpho.Morphosmart.Sdk.DetectionMode
  MORPHO_DEFAULT_DETECT_MODE = MorphoDefaultDetectMode
  MORPHO_ENROLL_DETECT_MODE = MorphoEnrollDetectMode
  MORPHO_FORCE_FINGER_ON_TOP_DETECT_MODE = MorphoForceFingerOnTopDetectMode
  MORPHO_VERIF_DETECT_MODE = MorphoVerifDetectMode
  MORPHO_WAKEUP_LED_OFF = MorphoWakeupLedOff
  MORPHO_WAKEUP_LED_ON = MorphoWakeupLedOn
  getValue()I = Value
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/DetectionMode; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/DetectionMode; = Values()
com/morpho/morphosmart/sdk/EnrollmentType = Com.Morpho.Morphosmart.Sdk.EnrollmentType
  ONE_ACQUISITIONS = OneAcquisitions
  THREE_ACQUISITIONS = ThreeAcquisitions
  getValue()I = Value
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/EnrollmentType; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/EnrollmentType; = Values()
com/morpho/morphosmart/sdk/ErrorCodes = Com.Morpho.Morphosmart.Sdk.ErrorCodes
  CLASS_NOT_INSTANTIATED = ClassNotInstantiated
  MORPHOERR_ADVANCED_SECURITY_LEVEL_MISMATCH = MorphoerrAdvancedSecurityLevelMismatch
  MORPHOERR_ADVANCED_SECURITY_LEVEL_NOT_AVAILABLE = MorphoerrAdvancedSecurityLevelNotAvailable
  MORPHOERR_ALREADY_ENROLLED = MorphoerrAlreadyEnrolled
  MORPHOERR_BAD_COMPRESSION = MorphoerrBadCompression
  MORPHOERR_BAD_FINAL_FINGER_PRINT_QUALITY = MorphoerrBadFinalFingerPrintQuality
  MORPHOERR_BADPARAMETER = MorphoerrBadparameter
  MORPHOERR_BASE_ALREADY_EXISTS = MorphoerrBaseAlreadyExists
  MORPHOERR_BASE_NOT_FOUND = MorphoerrBaseNotFound
  MORPHOERR_CANT_GRAN_PERMISSION_USB = MorphoerrCantGranPermissionUsb
  MORPHOERR_CERTIF_INVALID = MorphoerrCertifInvalid
  MORPHOERR_CERTIF_UNKNOW = MorphoerrCertifUnknow
  MORPHOERR_CLOSE_COM = MorphoerrCloseCom
  MORPHOERR_CMDE_ABORTED = MorphoerrCmdeAborted
  MORPHOERR_COM_NOT_OPEN = MorphoerrComNotOpen
  MORPHOERR_CONNECT = MorphoerrConnect
  MORPHOERR_CORRUPTED_CLASS = MorphoerrCorruptedClass
  MORPHOERR_DB_EMPTY = MorphoerrDbEmpty
  MORPHOERR_DB_FULL = MorphoerrDbFull
  MORPHOERR_DEVICE_LOCKED = MorphoerrDeviceLocked
  MORPHOERR_DEVICE_NOT_LOCK = MorphoerrDeviceNotLock
  MORPHOERR_ELT_ALREADY_PRESENT = MorphoerrEltAlreadyPresent
  MORPHOERR_FFD = MorphoerrFfd
  MORPHOERR_FFD_FINGER_MISPLACED = MorphoerrFfdFingerMisplaced
  MORPHOERR_FIELD_INVALID = MorphoerrFieldInvalid
  MORPHOERR_FIELD_NOT_FOUND = MorphoerrFieldNotFound
  MORPHOERR_FILE_ALREADY_EXISTS = MorphoerrFileAlreadyExists
  MORPHOERR_FVP_FINGER_MISPLACED_OR_WITHDRAWN = MorphoerrFvpFingerMisplacedOrWithdrawn
  MORPHOERR_FVP_MINUTIAE_SECURITY_MISMATCH = MorphoerrFvpMinutiaeSecurityMismatch
  MORPHOERR_INTEGER_INITIALIZATION = MorphoerrIntegerInitialization
  MORPHOERR_INTERNAL = MorphoerrInternal
  MORPHOERR_INVALID_CLASS = MorphoerrInvalidClass
  MORPHOERR_INVALID_FINGER = MorphoerrInvalidFinger
  MORPHOERR_INVALID_PK_FORMAT = MorphoerrInvalidPkFormat
  MORPHOERR_INVALID_TEMPLATE = MorphoerrInvalidTemplate
  MORPHOERR_INVALID_USER_DATA = MorphoerrInvalidUserData
  MORPHOERR_INVALID_USER_ID = MorphoerrInvalidUserId
  MORPHOERR_KEY_NOT_FOUND = MorphoerrKeyNotFound
  MORPHOERR_LICENSE_MISSING = MorphoerrLicenseMissing
  MORPHOERR_LONG_INITIALIZATION = MorphoerrLongInitialization
  MORPHOERR_MEMORY_DEVICE = MorphoerrMemoryDevice
  MORPHOERR_MEMORY_PC = MorphoerrMemoryPc
  MORPHOERR_MIXED_TEMPLATE = MorphoerrMixedTemplate
  MORPHOERR_MOIST_FINGER = MorphoerrMoistFinger
  MORPHOERR_MOVED_FINGER = MorphoerrMovedFinger
  MORPHOERR_NO_ASSOCIATED_DB = MorphoerrNoAssociatedDb
  MORPHOERR_NO_ASSOCIATED_DEVICE = MorphoerrNoAssociatedDevice
  MORPHOERR_NOCALLTO_DBQUERRYFIRST = MorphoerrNocalltoDbquerryfirst
  MORPHOERR_NO_HIT = MorphoerrNoHit
  MORPHOERR_NO_MORE_OTP = MorphoerrNoMoreOtp
  MORPHOERR_NO_REGISTERED_TEMPLATE = MorphoerrNoRegisteredTemplate
  MORPHOERR_NO_SERVER = MorphoerrNoServer
  MORPHOERR_NOT_IMPLEMENTED = MorphoerrNotImplemented
  MORPHOERR_OTP_ENROLL_FAILED = MorphoerrOtpEnrollFailed
  MORPHOERR_OTP_ENROLL_NEEDED = MorphoerrOtpEnrollNeeded
  MORPHOERR_OTP_IDENT_FAILED = MorphoerrOtpIdentFailed
  MORPHOERR_OTP_LOCK_ENROLL = MorphoerrOtpLockEnroll
  MORPHOERR_OTP_LOCK_GEN_OTP = MorphoerrOtpLockGenOtp
  MORPHOERR_OTP_LOCK_SET_PARAM = MorphoerrOtpLockSetParam
  MORPHOERR_OTP_NO_HIT = MorphoerrOtpNoHit
  MORPHOERR_OTP_NOT_INITIALIZED = MorphoerrOtpNotInitialized
  MORPHOERR_OTP_PIN_NEEDED = MorphoerrOtpPinNeeded
  MORPHOERR_OTP_REENROLL_NOT_ALLOWED = MorphoerrOtpReenrollNotAllowed
  MORPHOERR_OUT_OF_FIELD = MorphoerrOutOfField
  MORPHOERR_PROTOCOLE = MorphoerrProtocole
  MORPHOERR_RESUME_CONNEXION = MorphoerrResumeConnexion
  MORPHOERR_RESUME_CONNEXION_ALREADY_STARTED = MorphoerrResumeConnexionAlreadyStarted
  MORPHOERR_SAME_FINGER = MorphoerrSameFinger
  MORPHOERR_SATURATED_FINGER = MorphoerrSaturatedFinger
  MORPHOERR_SECU = MorphoerrSecu
  MORPHOERR_SIGNER_ID = MorphoerrSignerId
  MORPHOERR_SIGNER_ID_INVALID = MorphoerrSignerIdInvalid
  MORPHOERR_STATUS = MorphoerrStatus
  MORPHOERR_SVC_LOST_DEVICE = MorphoerrSvcLostDevice
  MORPHOERR_TIMEOUT = MorphoerrTimeout
  MORPHOERR_TO_MANY_FIELD = MorphoerrToManyField
  MORPHOERR_TO_MANY_TEMPLATE = MorphoerrToManyTemplate
  MORPHOERR_UNAVAILABLE = MorphoerrUnavailable
  MORPHOERR_USB_DEVICE_NAME_UNKNOWN = MorphoerrUsbDeviceNameUnknown
  MORPHOERR_USB_PERMISSION_DENIED = MorphoerrUsbPermissionDenied
  MORPHOERR_USER = MorphoerrUser
  MORPHOERR_USER_NOT_FOUND = MorphoerrUserNotFound
  MORPHO_OK = MorphoOk
  MORPHOWARNING_WSQ_COMPRESSION_RATIO = MorphowarningWsqCompressionRatio
  getError(II)Ljava/lang/String; = GetError(int, int)
  IntegrerInitializationValueOf(Ljava/lang/Integer;)Ljava/lang/Boolean; = IntegrerInitializationValueOf(Java.Lang.Integer)
  LongInitializationValueOf(Ljava/lang/Long;)Ljava/lang/Boolean; = LongInitializationValueOf(Java.Lang.Long)
com/morpho/morphosmart/sdk/FalseAcceptanceRate = Com.Morpho.Morphosmart.Sdk.FalseAcceptanceRate
  MORPHO_FAR_0 = MorphoFar0
  MORPHO_FAR_1 = MorphoFar1
  MORPHO_FAR_10 = MorphoFar10
  MORPHO_FAR_2 = MorphoFar2
  MORPHO_FAR_3 = MorphoFar3
  MORPHO_FAR_4 = MorphoFar4
  MORPHO_FAR_5 = MorphoFar5
  MORPHO_FAR_6 = MorphoFar6
  MORPHO_FAR_7 = MorphoFar7
  MORPHO_FAR_8 = MorphoFar8
  MORPHO_FAR_9 = MorphoFar9
com/morpho/morphosmart/sdk/FieldAttribute = Com.Morpho.Morphosmart.Sdk.FieldAttribute
  MORPHO_PRIVATE_FIELD = MorphoPrivateField
  MORPHO_PUBLIC_FIELD = MorphoPublicField
  getValue()I = Value
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/FieldAttribute; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/FieldAttribute; = Values()
com/morpho/morphosmart/sdk/FingerNumber = Com.Morpho.Morphosmart.Sdk.FingerNumber
  <init>()V = .ctor()
  getFingerNumber()[B = GetFingerNumber()
  setFingerNumber([B)V = SetFingerNumber(byte[])
com/morpho/morphosmart/sdk/IMsoPipe = Com.Morpho.Morphosmart.Sdk.IMsoPipe
  clientPipe_CallbackComClose(Ljava/lang/Object;)I = ClientPipe_CallbackComClose(Java.Lang.Object)
  clientPipe_CallbackComOpen(Ljava/lang/Object;Ljava/lang/String;JILjava/lang/String;)I = ClientPipe_CallbackComOpen(Java.Lang.Object, string, long, int, string)
  clientPipe_CallbackComReceive(Ljava/lang/Object;JLjava/util/ArrayList;)I = ClientPipe_CallbackComReceive(Java.Lang.Object, long, System.Collections.Generic.IList<Java.Lang.Byte>)
  clientPipe_CallbackComReceiveFree(Ljava/lang/Object;Ljava/util/ArrayList;)I = ClientPipe_CallbackComReceiveFree(Java.Lang.Object, System.Collections.Generic.IList<Java.Lang.Byte>)
  clientPipe_CallbackComSend(Ljava/lang/Object;JLjava/util/ArrayList;)I = ClientPipe_CallbackComSend(Java.Lang.Object, long, System.Collections.Generic.IList<Java.Lang.Byte>)
com/morpho/morphosmart/sdk/IMsoSecu = Com.Morpho.Morphosmart.Sdk.IMsoSecu
  computeCRC32([BJJZZJ[J)I = ComputeCRC32(byte[], long, long, bool, bool, long, long[])
  decryptAes128Cbc([B[B[BZLjava/util/ArrayList;)I = DecryptAes128Cbc(byte[], byte[], byte[], bool, System.Collections.Generic.IList<Java.Lang.Byte>)
  desCrypt([B[BLjava/util/ArrayList;)I = DesCrypt(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  encrypt3DesCbcNopad([B[B[B[B)I = Encrypt3DesCbcNopad(byte[], byte[], byte[], byte[])
  encryptAes128Cbc([B[B[BZLjava/util/ArrayList;)I = EncryptAes128Cbc(byte[], byte[], byte[], bool, System.Collections.Generic.IList<Java.Lang.Byte>)
  genRandom([B)I = GenRandom(byte[])
  getHostCertif(Ljava/util/ArrayList;)I = GetHostCertif(System.Collections.Generic.IList<Java.Lang.Byte>)
  rsaEncrypt([B[BLjava/util/ArrayList;)I = RsaEncrypt(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  setOpenSSLPath(Ljava/lang/String;)I = SetOpenSSLPath(string)
  signRSA([B[BLjava/util/ArrayList;)I = SignRSA(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesCrypt([BLjava/util/ArrayList;)I = TripleDesCrypt(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesCryptByKey([B[BLjava/util/ArrayList;)I = TripleDesCryptByKey(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesDecrypt([BLjava/util/ArrayList;)I = TripleDesDecrypt(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesSign([BLjava/util/ArrayList;)I = TripleDesSign(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesVerifSign([B[B[Z)I = TripleDesVerifSign(byte[], byte[], bool[])
  tunnelingInit1([B[B[B[BLjava/util/ArrayList;)I = TunnelingInit1(byte[], byte[], byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tunnelingInit2([B)I = TunnelingInit2(byte[])
  verifCertif([B[I)I = VerifCertif(byte[], int[])
  verifOfferedSecuritySignature([B[B[B[I)I = VerifOfferedSecuritySignature(byte[], byte[], byte[], int[])
  verifSignDSA([B[B[B[I)I = VerifSignDSA(byte[], byte[], byte[], int[])
  verifSignRSA([B[B[B[I)I = VerifSignRSA(byte[], byte[], byte[], int[])
com/morpho/morphosmart/sdk/ITemplateType = Com.Morpho.Morphosmart.Sdk.ITemplateType
  getCode()I = Code
  getExtension()Ljava/lang/String; = Extension
  getLabel()Ljava/lang/String; = Label
com/morpho/morphosmart/sdk/LatentDetection = Com.Morpho.Morphosmart.Sdk.LatentDetection
  LATENT_DETECT_DISABLE = LatentDetectDisable
  LATENT_DETECT_ENABLE = LatentDetectEnable
  getValue()I = Value
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/LatentDetection; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/LatentDetection; = Values()
com/morpho/morphosmart/sdk/MatchingStrategy = Com.Morpho.Morphosmart.Sdk.MatchingStrategy
  MORPHO_ADVANCED_MATCHING_STRATEGY = MorphoAdvancedMatchingStrategy
  MORPHO_STANDARD_MATCHING_STRATEGY = MorphoStandardMatchingStrategy
  getLabel()Ljava/lang/String; = Label
  getValue()I = Value
  fromString(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MatchingStrategy; = FromString(string)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MatchingStrategy; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/MatchingStrategy; = Values()
com/morpho/morphosmart/sdk/MorphoDatabase = Com.Morpho.Morphosmart.Sdk.MorphoDatabase
  <init>()V = .ctor()
  <init>(Lcom/morpho/morphosmart/sdk/MorphoDatabase;)V = .ctor(Com.Morpho.Morphosmart.Sdk.MorphoDatabase)
  cppMemOwn = CppMemOwn
  MORPHO_FINGER_MAX = MorphoFingerMax
  MORPHO_LEN_FIELD_MAX = MorphoLenFieldMax
  MORPHO_NB_DATABASE_MAX = MorphoNbDatabaseMax
  MORPHO_NB_FIELD_MAX = MorphoNbFieldMax
  MORPHO_NB_RECORD_MIN = MorphoNbRecordMin
  getMorphoDatabasePointerCPP()J = MorphoDatabasePointerCPP
  setMorphoDatabasePointerCPP(J)V = MorphoDatabasePointerCPP
  cancelLiveAcquisition()I = CancelLiveAcquisition()
  clone()Ljava/lang/Object; = Clone()
  dbCreate(IILcom/morpho/morphosmart/sdk/TemplateType;)I = DbCreate(int, int, Com.Morpho.Morphosmart.Sdk.TemplateType)
  dbCreate(IILcom/morpho/morphosmart/sdk/TemplateType;I)I = DbCreate(int, int, Com.Morpho.Morphosmart.Sdk.TemplateType, int)
  dbCreate(IILcom/morpho/morphosmart/sdk/TemplateType;IZ)I = DbCreate(int, int, Com.Morpho.Morphosmart.Sdk.TemplateType, int, bool)
  dbDelete(Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion;)I = DbDelete(Com.Morpho.Morphosmart.Sdk.MorphoTypeDeletion)
  dbQueryFirst(ILjava/lang/String;Lcom/morpho/morphosmart/sdk/MorphoUser;)I = DbQueryFirst(int, string, Com.Morpho.Morphosmart.Sdk.MorphoUser)
  dbQueryNext(Lcom/morpho/morphosmart/sdk/MorphoUser;)I = DbQueryNext(Com.Morpho.Morphosmart.Sdk.MorphoUser)
  getDbEncryptionStatus(Ljava/lang/Integer;)I = GetDbEncryptionStatus(Java.Lang.Integer)
  getField(ILcom/morpho/morphosmart/sdk/MorphoField;)I = GetField(int, Com.Morpho.Morphosmart.Sdk.MorphoField)
  getFormatPK(Ljava/lang/Integer;)I = GetFormatPK(Java.Lang.Integer)
  getMaxDataBase(Ljava/lang/Integer;)I = GetMaxDataBase(Java.Lang.Integer)
  getMaxUser(Ljava/lang/Integer;)I = GetMaxUser(Java.Lang.Integer)
  getMaxUser(Ljava/lang/Integer;Ljava/lang/Integer;)I = GetMaxUser(Java.Lang.Integer, Java.Lang.Integer)
  getNbField(Ljava/lang/Long;)I = GetNbField(Java.Lang.Long)
  getNbFinger(Ljava/lang/Integer;)I = GetNbFinger(Java.Lang.Integer)
  getNbFreeRecord(Ljava/lang/Long;)I = GetNbFreeRecord(Java.Lang.Long)
  getNbTotalRecord(Ljava/lang/Long;)I = GetNbTotalRecord(Java.Lang.Long)
  getNbUsedRecord(Ljava/lang/Long;)I = GetNbUsedRecord(Java.Lang.Long)
  getUser(Ljava/lang/String;Lcom/morpho/morphosmart/sdk/MorphoUser;)I = GetUser(string, Com.Morpho.Morphosmart.Sdk.MorphoUser)
  getUserBuffer([BLcom/morpho/morphosmart/sdk/MorphoUser;)I = GetUserBuffer(byte[], Com.Morpho.Morphosmart.Sdk.MorphoUser)
  identify(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;Lcom/morpho/morphosmart/sdk/MorphoUser;)I = Identify(int, int, Com.Morpho.Morphosmart.Sdk.Coder, int, Com.Morpho.Morphosmart.Sdk.MatchingStrategy, int, Java.Util.IObserver, Com.Morpho.Morphosmart.Sdk.ResultMatching, Com.Morpho.Morphosmart.Sdk.MorphoUser)
  identify(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;ILcom/morpho/morphosmart/sdk/MorphoUser;)I = Identify(int, int, Com.Morpho.Morphosmart.Sdk.Coder, int, Com.Morpho.Morphosmart.Sdk.MatchingStrategy, int, Java.Util.IObserver, Com.Morpho.Morphosmart.Sdk.ResultMatching, int, Com.Morpho.Morphosmart.Sdk.MorphoUser)
  identifyMatch(ILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/MorphoUser;)I = IdentifyMatch(int, Com.Morpho.Morphosmart.Sdk.TemplateList, Com.Morpho.Morphosmart.Sdk.MorphoUser)
  identifyMatch(ILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/MorphoUser;Lcom/morpho/morphosmart/sdk/ResultMatching;)I = IdentifyMatch(int, Com.Morpho.Morphosmart.Sdk.TemplateList, Com.Morpho.Morphosmart.Sdk.MorphoUser, Com.Morpho.Morphosmart.Sdk.ResultMatching)
  putField(Lcom/morpho/morphosmart/sdk/MorphoField;Ljava/lang/Integer;)I = PutField(Com.Morpho.Morphosmart.Sdk.MorphoField, Java.Lang.Integer)
  readPublicFields([ILcom/morpho/morphosmart/sdk/MorphoUserList;)I = ReadPublicFields(int[], Com.Morpho.Morphosmart.Sdk.MorphoUserList)
com/morpho/morphosmart/sdk/MorphoDevice = Com.Morpho.Morphosmart.Sdk.MorphoDevice
  <init>()V = .ctor()
  <init>(Lcom/morpho/morphosmart/sdk/MorphoDevice;)V = .ctor(Com.Morpho.Morphosmart.Sdk.MorphoDevice)
  ACTION_SCREEN_RECEIVER = ActionScreenReceiver
  CONFIG_KEY_USER_TAG = ConfigKeyUserTag
  CONFIG_SENSOR_WIN_POSITION_TAG = ConfigSensorWinPositionTag
  CONFIG_UI_CONFIG_TAG = ConfigUiConfigTag
  CONFIG_UI_RESET_TAG = ConfigUiResetTag
  cppMemOwn = CppMemOwn
  getComType()I = ComType
  getFFDLogs()Ljava/lang/String; = FFDLogs
  getInternalError()I = InternalError
  isCSEnabled()Z = IsCSEnabled
  isDataEncryptionEnabled()Z = IsDataEncryptionEnabled
  getOpenedUsbDeviceName()Ljava/lang/String; = OpenedUsbDeviceName
  getProductDescriptor()Ljava/lang/String; = ProductDescriptor
  getSecurityLevel()I = SecurityLevel
  getSensorDescriptor()Ljava/lang/String; = SensorDescriptor
  getSoftwareDescriptor()Ljava/lang/String; = SoftwareDescriptor
  getStrategyAcquisitionMode()Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode; = StrategyAcquisitionMode
  cancelLiveAcquisition()I = CancelLiveAcquisition()
  capture(IIIILcom/morpho/morphosmart/sdk/TemplateType;Lcom/morpho/morphosmart/sdk/TemplateFVPType;ILcom/morpho/morphosmart/sdk/EnrollmentType;Lcom/morpho/morphosmart/sdk/LatentDetection;Lcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;)I = Capture(int, int, int, int, Com.Morpho.Morphosmart.Sdk.TemplateType, Com.Morpho.Morphosmart.Sdk.TemplateFVPType, int, Com.Morpho.Morphosmart.Sdk.EnrollmentType, Com.Morpho.Morphosmart.Sdk.LatentDetection, Com.Morpho.Morphosmart.Sdk.Coder, int, Com.Morpho.Morphosmart.Sdk.TemplateList, int, Java.Util.IObserver)
  clone()Ljava/lang/Object; = Clone()
  closeDevice()I = CloseDevice()
  comReceive(I)[B = ComReceive(int)
  comSend(I[B)I = ComSend(int, byte[])
  enableCS(Z)I = EnableCS(bool)
  enableDataEncryption(Z[B)I = EnableDataEncryption(bool, byte[])
  enableDataEncryption(ZLjava/lang/String;)I = EnableDataEncryption(bool, string)
  getConfigParam(I)[B = GetConfigParam(int)
  getDatabase(ILcom/morpho/morphosmart/sdk/MorphoDatabase;)I = GetDatabase(int, Com.Morpho.Morphosmart.Sdk.MorphoDatabase)
  getImage(IILcom/morpho/morphosmart/sdk/CompressionAlgorithm;IILcom/morpho/morphosmart/sdk/LatentDetection;Lcom/morpho/morphosmart/sdk/MorphoImage;ILjava/util/Observer;)I = GetImage(int, int, Com.Morpho.Morphosmart.Sdk.CompressionAlgorithm, int, int, Com.Morpho.Morphosmart.Sdk.LatentDetection, Com.Morpho.Morphosmart.Sdk.MorphoImage, int, Java.Util.IObserver)
  getIntDescriptorBin(Lcom/morpho/morphosmart/sdk/DescriptorID;)I = GetIntDescriptorBin(Com.Morpho.Morphosmart.Sdk.DescriptorID)
  getKCV(Lcom/morpho/morphosmart/sdk/MorphoKCVID;[B)[B = GetKCV(Com.Morpho.Morphosmart.Sdk.MorphoKCVID, byte[])
  getKCV(I)Ljava/lang/String; = GetKCV(int)
  getPrivacyModeStatus([Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;)I = GetPrivacyModeStatus(Com.Morpho.Morphosmart.Sdk.MorphoDevice.MorphoDevicePrivacyModeStatus[])
  getPrivacySeed()[B = GetPrivacySeed()
  getSecuConfig(Lcom/morpho/morphosmart/sdk/SecuConfig;)I = GetSecuConfig(Com.Morpho.Morphosmart.Sdk.SecuConfig)
  getStringDescriptorBin(Lcom/morpho/morphosmart/sdk/DescriptorID;)Ljava/lang/String; = GetStringDescriptorBin(Com.Morpho.Morphosmart.Sdk.DescriptorID)
  getUnlockSeed()[B = GetUnlockSeed()
  getUsbDeviceName(I)Ljava/lang/String; = GetUsbDeviceName(int)
  getUsbDevicePropertie(I)Ljava/lang/String; = GetUsbDevicePropertie(int)
  getUserAreaData()[B = GetUserAreaData()
  initUsbDevicesNameEnum(Ljava/lang/Integer;)I = InitUsbDevicesNameEnum(Java.Lang.Integer)
  loadKprivacy([B)I = LoadKprivacy(byte[])
  loadKprivacySecurely([B[B)I = LoadKprivacySecurely(byte[], byte[])
  loadKs([B)I = LoadKs(byte[])
  loadKsSecurely([B)I = LoadKsSecurely(byte[])
  loadKsSecurely([B[B[B)I = LoadKsSecurely(byte[], byte[], byte[])
  loadMocKey([B)I = LoadMocKey(byte[])
  loadMocKey([B[B[B)I = LoadMocKey(byte[], byte[], byte[])
  offeredSecuClose()I = OfferedSecuClose()
  offeredSecuOpen(Lcom/morpho/morphosmart/sdk/IMsoSecu;)I = OfferedSecuOpen(Com.Morpho.Morphosmart.Sdk.IMsoSecu)
  openDevicePipe(Lcom/morpho/morphosmart/sdk/IMsoPipe;Ljava/lang/String;ILjava/lang/String;I)I = OpenDevicePipe(Com.Morpho.Morphosmart.Sdk.IMsoPipe, string, int, string, int)
  openUsbDevice(Ljava/lang/String;I)I = OpenUsbDevice(string, int)
  openUsbDeviceFD(IIII)I = OpenUsbDeviceFD(int, int, int, int)
  ping()I = Ping()
  rebootSoft(ILjava/util/Observer;)I = RebootSoft(int, Java.Util.IObserver)
  removeUserAreaData()I = RemoveUserAreaData()
  resumeConnection(ILjava/util/Observer;)I = ResumeConnection(int, Java.Util.IObserver)
  SecuReadCertificate(ILjava/util/ArrayList;)I = SecuReadCertificate(int, System.Collections.Generic.IList<Java.Lang.Byte>)
  setConfigParam(I[B)I = SetConfigParam(int, byte[])
  setLoggingLevelOfGroup(ILcom/morpho/morphosmart/sdk/MorphoLogLevel;)I = SetLoggingLevelOfGroup(int, Com.Morpho.Morphosmart.Sdk.MorphoLogLevel)
  setLoggingMode(Lcom/morpho/morphosmart/sdk/MorphoLogMode;)I = SetLoggingMode(Com.Morpho.Morphosmart.Sdk.MorphoLogMode)
  setMorphoDeviceNativePointerCPP(J)V = SetMorphoDeviceNativePointerCPP(long)
  setPrivacyModeStatus(Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeStatus;Lcom/morpho/morphosmart/sdk/MorphoDevice$MorphoDevicePrivacyModeDBProcessingChoice;)I = SetPrivacyModeStatus(Com.Morpho.Morphosmart.Sdk.MorphoDevice.MorphoDevicePrivacyModeStatus, Com.Morpho.Morphosmart.Sdk.MorphoDevice.MorphoDevicePrivacyModeDBProcessingChoice)
  setSecurityLevel(Lcom/morpho/morphosmart/sdk/SecurityLevel;)I = SetSecurityLevel(Com.Morpho.Morphosmart.Sdk.SecurityLevel)
  setStrategyAcquisitionMode(Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode;)I = SetStrategyAcquisitionMode(Com.Morpho.Morphosmart.Sdk.StrategyAcquisitionMode)
  setUserAreaData([B)I = SetUserAreaData(byte[])
  tunnelingClose()I = TunnelingClose()
  tunnelingOpen(Lcom/morpho/morphosmart/sdk/IMsoSecu;[B)I = TunnelingOpen(Com.Morpho.Morphosmart.Sdk.IMsoSecu, byte[])
  unlock([B[B)I = Unlock(byte[], byte[])
  unlock(Ljava/lang/String;Ljava/lang/String;)I = Unlock(string, string)
  verify(IILcom/morpho/morphosmart/sdk/Coder;IILcom/morpho/morphosmart/sdk/TemplateList;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;)I = Verify(int, int, Com.Morpho.Morphosmart.Sdk.Coder, int, int, Com.Morpho.Morphosmart.Sdk.TemplateList, int, Java.Util.IObserver, Com.Morpho.Morphosmart.Sdk.ResultMatching)
  verifyMatch(ILcom/morpho/morphosmart/sdk/TemplateList;Lcom/morpho/morphosmart/sdk/TemplateList;Ljava/lang/Integer;)I = VerifyMatch(int, Com.Morpho.Morphosmart.Sdk.TemplateList, Com.Morpho.Morphosmart.Sdk.TemplateList, Java.Lang.Integer)
com/morpho/morphosmart/sdk/MorphoDeviceConnectionType = Com.Morpho.Morphosmart.Sdk.MorphoDeviceConnectionType
  COM_TYPE_NOT_SET = ComTypeNotSet
  RS232_COM_TYPE = Rs232ComType
  USB_COM_TYPE = UsbComType
  USER_COM_TYPE = UserComType
  getCode()I = Code
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/MorphoDeviceConnectionType; = Values()
com/morpho/morphosmart/sdk/MorphoField = Com.Morpho.Morphosmart.Sdk.MorphoField
  <init>()V = .ctor()
  MORPHO_FIELD_NAME_LEN = MorphoFieldNameLen
  getFieldAttribute()Lcom/morpho/morphosmart/sdk/FieldAttribute; = FieldAttribute
  setFieldAttribute(Lcom/morpho/morphosmart/sdk/FieldAttribute;)V = FieldAttribute
  getFieldAttributeIntValue()I = FieldAttributeIntValue
  setFieldAttributeIntValue(I)V = FieldAttributeIntValue
  getMaxSize()I = MaxSize
  setMaxSize(I)V = MaxSize
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
com/morpho/morphosmart/sdk/MorphoImage = Com.Morpho.Morphosmart.Sdk.MorphoImage
  <init>()V = .ctor()
  getCompressionAlgorithm()Lcom/morpho/morphosmart/sdk/CompressionAlgorithm; = CompressionAlgorithm
  setCompressionAlgorithm(Lcom/morpho/morphosmart/sdk/CompressionAlgorithm;)V = CompressionAlgorithm
  getMorphoImageHeader()Lcom/morpho/morphosmart/sdk/MorphoImageHeader; = MorphoImageHeader
  setMorphoImageHeader(Lcom/morpho/morphosmart/sdk/MorphoImageHeader;)V = MorphoImageHeader
  getCompressedImage()[B = GetCompressedImage()
  getImage()[B = GetImage()
  getMorphoImageFromLive([B)Lcom/morpho/morphosmart/sdk/MorphoImage; = GetMorphoImageFromLive(byte[])
  setCompressedImage([B)V = SetCompressedImage(byte[])
  setCompressedImage(Ljava/lang/Object;)V = SetCompressedImage(Java.Lang.Object)
  setImage([B)V = SetImage(byte[])
  setImage(Ljava/lang/Object;)V = SetImage(Java.Lang.Object)
com/morpho/morphosmart/sdk/MorphoImageHeader = Com.Morpho.Morphosmart.Sdk.MorphoImageHeader
  <init>()V = .ctor()
  getCompressionRatio()I = CompressionRatio
  setCompressionRatio(I)V = CompressionRatio
  getNbBitsPerPixel()I = NbBitsPerPixel
  setNbBitsPerPixel(I)V = NbBitsPerPixel
  getNbColumn()I = NbColumn
  setNbColumn(I)V = NbColumn
  getNbRow()I = NbRow
  setNbRow(I)V = NbRow
  getResX()I = ResX
  setResX(I)V = ResX
  getResY()I = ResY
  setResY(I)V = ResY
com/morpho/morphosmart/sdk/MorphoKCVID = Com.Morpho.Morphosmart.Sdk.MorphoKCVID
  ID_KENC = IdKenc
  ID_KPRIVACY = IdKprivacy
  ID_KS = IdKs
  ID_KSECRET = IdKsecret
  getCode()I = Code
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoKCVID; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/MorphoKCVID; = Values()
com/morpho/morphosmart/sdk/MorphoLogLevel = Com.Morpho.Morphosmart.Sdk.MorphoLogLevel
  MORPHO_LOG_DEBUG = MorphoLogDebug
  MORPHO_LOG_ERROR = MorphoLogError
  MORPHO_LOG_INFO = MorphoLogInfo
  MORPHO_LOG_NOLOG = MorphoLogNolog
  MORPHO_LOG_WARNING = MorphoLogWarning
  getCode()I = Code
  getLabel()Ljava/lang/String; = Label
  fromString(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogLevel; = FromString(string)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogLevel; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/MorphoLogLevel; = Values()
com/morpho/morphosmart/sdk/MorphoLogMode = Com.Morpho.Morphosmart.Sdk.MorphoLogMode
  MORPHO_LOG_DISABLE = MorphoLogDisable
  MORPHO_LOG_ENABLE = MorphoLogEnable
  getCode()I = Code
  getLabel()Ljava/lang/String; = Label
  setLabel(Ljava/lang/String;)V = Label
  fromString(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogMode; = FromString(string)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoLogMode; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/MorphoLogMode; = Values()
com/morpho/morphosmart/sdk/MorphoSmartException = Com.Morpho.Morphosmart.Sdk.MorphoSmartException
  <init>()V = .ctor()
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  getErrorMessage()Ljava/lang/String; = ErrorMessage
com/morpho/morphosmart/sdk/MorphoString = Com.Morpho.Morphosmart.Sdk.MorphoString
  <init>()V = .ctor()
  getData()Ljava/lang/String; = Data
  setData(Ljava/lang/String;)V = Data
  getBufferData()[B = GetBufferData()
  setBufferData([B)V = SetBufferData(byte[])
com/morpho/morphosmart/sdk/MorphoTypeDeletion = Com.Morpho.Morphosmart.Sdk.MorphoTypeDeletion
  MORPHO_DESTROY_BASE = MorphoDestroyBase
  MORPHO_ERASE_BASE = MorphoEraseBase
  getValue()I = Value
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/MorphoTypeDeletion; = Values()
com/morpho/morphosmart/sdk/MorphoUser = Com.Morpho.Morphosmart.Sdk.MorphoUser
  <init>()V = .ctor()
  <init>(Lcom/morpho/morphosmart/sdk/MorphoUser;)V = .ctor(Com.Morpho.Morphosmart.Sdk.MorphoUser)
  <init>(Ljava/lang/String;)V = .ctor(string)
  cppMemOwn = CppMemOwn
  getEnrollmentType()I = EnrollmentType
  getMorphoUserPointerCPP()J = MorphoUserPointerCPP
  setMorphoUserPointerCPP(J)V = MorphoUserPointerCPP
  getUserID()Ljava/lang/String; = UserID
  cancelLiveAcquisition()I = CancelLiveAcquisition()
  clone()Ljava/lang/Object; = Clone()
  dbDelete()I = DbDelete()
  dbStore()I = DbStore()
  dbUpdatePublicFields()I = DbUpdatePublicFields()
  dbVerifyAndUpdate(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;)I = DbVerifyAndUpdate(int, int, Com.Morpho.Morphosmart.Sdk.Coder, int, Com.Morpho.Morphosmart.Sdk.MatchingStrategy, int, Java.Util.IObserver)
  getBufferField(I)[B = GetBufferField(int)
  getField(I)Ljava/lang/String; = GetField(int)
  getFVPTemplate(ILcom/morpho/morphosmart/sdk/TemplateFVP;)I = GetFVPTemplate(int, Com.Morpho.Morphosmart.Sdk.TemplateFVP)
  getNbTemplate(Ljava/lang/Integer;)I = GetNbTemplate(Java.Lang.Integer)
  getNbTemplateFVP(Ljava/lang/Integer;)I = GetNbTemplateFVP(Java.Lang.Integer)
  getTemplate(ILcom/morpho/morphosmart/sdk/Template;)I = GetTemplate(int, Com.Morpho.Morphosmart.Sdk.Template)
  getUserTemplateQuality(ILjava/lang/String;IJLcom/morpho/morphosmart/sdk/TemplateQuality;Lcom/morpho/morphosmart/sdk/FingerNumber;)I = GetUserTemplateQuality(int, string, int, long, Com.Morpho.Morphosmart.Sdk.TemplateQuality, Com.Morpho.Morphosmart.Sdk.FingerNumber)
  putBufferField(I[B)I = PutBufferField(int, byte[])
  putField(ILjava/lang/String;)I = PutField(int, string)
  putFVPTemplate(Lcom/morpho/morphosmart/sdk/TemplateFVP;Ljava/lang/Integer;)I = PutFVPTemplate(Com.Morpho.Morphosmart.Sdk.TemplateFVP, Java.Lang.Integer)
  putTemplate(Lcom/morpho/morphosmart/sdk/Template;Ljava/lang/Integer;)I = PutTemplate(Com.Morpho.Morphosmart.Sdk.Template, Java.Lang.Integer)
  setEnrollmentType(Lcom/morpho/morphosmart/sdk/EnrollmentType;)I = SetEnrollmentType(Com.Morpho.Morphosmart.Sdk.EnrollmentType)
  setNoCheckOnTemplateForDBStore(Z)I = SetNoCheckOnTemplateForDBStore(bool)
  setTemplateUpdateMask([Z)I = SetTemplateUpdateMask(bool[])
  verify(IILcom/morpho/morphosmart/sdk/Coder;ILcom/morpho/morphosmart/sdk/MatchingStrategy;ILjava/util/Observer;Lcom/morpho/morphosmart/sdk/ResultMatching;)I = Verify(int, int, Com.Morpho.Morphosmart.Sdk.Coder, int, Com.Morpho.Morphosmart.Sdk.MatchingStrategy, int, Java.Util.IObserver, Com.Morpho.Morphosmart.Sdk.ResultMatching)
com/morpho/morphosmart/sdk/MorphoUserList = Com.Morpho.Morphosmart.Sdk.MorphoUserList
  <init>()V = .ctor()
  getNbUser()I = NbUser
  getUser(I)Lcom/morpho/morphosmart/sdk/MorphoUser; = GetUser(int)
com/morpho/morphosmart/sdk/MorphoWakeUpMode = Com.Morpho.Morphosmart.Sdk.MorphoWakeUpMode
  MORPHO_WAKEUP_LED_OFF = MorphoWakeupLedOff
  MORPHO_WAKEUP_LED_ON = MorphoWakeupLedOn
  getCode()I = Code
  getLabel()Ljava/lang/String; = Label
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/MorphoWakeUpMode; = Values()
com/morpho/morphosmart/sdk/ResultMatching = Com.Morpho.Morphosmart.Sdk.ResultMatching
  <init>()V = .ctor()
  getMatchingPKNumber()I = MatchingPKNumber
  setMatchingPKNumber(I)V = MatchingPKNumber
  getMatchingScore()I = MatchingScore
  setMatchingScore(I)V = MatchingScore
com/morpho/morphosmart/sdk/SecuConfig = Com.Morpho.Morphosmart.Sdk.SecuConfig
  <init>()V = .ctor()
  isAcceptsOnlySignedTemplates()Z = IsAcceptsOnlySignedTemplates
  isDownloadIsProtected()Z = IsDownloadIsProtected
  isExportScore()Z = IsExportScore
  isModeOfferedSecurity()Z = IsModeOfferedSecurity
  isModeTunneling()Z = IsModeTunneling
  getMinMultimodalSecurityLevel()I = MinMultimodalSecurityLevel
  setMinMultimodalSecurityLevel(I)V = MinMultimodalSecurityLevel
  getSecurityFAR()I = SecurityFAR
  setSecurityFAR(I)V = SecurityFAR
  getSecurityFARDescription()Ljava/lang/String; = SecurityFARDescription
  getSecurityOptions()C = SecurityOptions
  setSecurityOptions(C)V = SecurityOptions
  getSerialNumber()Ljava/lang/String; = SerialNumber
  setSerialNumber(Ljava/lang/String;)V = SerialNumber
com/morpho/morphosmart/sdk/SecurityLevel = Com.Morpho.Morphosmart.Sdk.SecurityLevel
  FFD_SECURITY_LEVEL_CRITICAL_HOST = FfdSecurityLevelCriticalHost
  FFD_SECURITY_LEVEL_DEFAULT_HOST = FfdSecurityLevelDefaultHost
  FFD_SECURITY_LEVEL_HIGH_HOST = FfdSecurityLevelHighHost
  FFD_SECURITY_LEVEL_LOW_HOST = FfdSecurityLevelLowHost
  FFD_SECURITY_LEVEL_MEDIUM_HOST = FfdSecurityLevelMediumHost
  FFD_SECURITY_LEVEL_NONE_HOST = FfdSecurityLevelNoneHost
  MULTIMODAL_SECURITY_CRITICAL = MultimodalSecurityCritical
  MULTIMODAL_SECURITY_HIGH = MultimodalSecurityHigh
  MULTIMODAL_SECURITY_MEDIUM = MultimodalSecurityMedium
  MULTIMODAL_SECURITY_STANDARD = MultimodalSecurityStandard
  getLabel()Ljava/lang/String; = Label
  getValue()I = Value
  fromInt(IZ)Lcom/morpho/morphosmart/sdk/SecurityLevel; = FromInt(int, bool)
  fromString(Ljava/lang/String;Z)Lcom/morpho/morphosmart/sdk/SecurityLevel; = FromString(string, bool)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/SecurityLevel; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/SecurityLevel; = Values()
com/morpho/morphosmart/sdk/StrategyAcquisitionMode = Com.Morpho.Morphosmart.Sdk.StrategyAcquisitionMode
  MORPHO_ACQ_ANTI_SPOOFING_MODE = MorphoAcqAntiSpoofingMode
  MORPHO_ACQ_EXPERT_MODE = MorphoAcqExpertMode
  MORPHO_ACQ_FULL_MULTIMODAL_MODE = MorphoAcqFullMultimodalMode
  MORPHO_ACQ_UNIVERSAL_ACCURATE_MODE = MorphoAcqUniversalAccurateMode
  MORPHO_ACQ_UNIVERSAL_FAST_MODE = MorphoAcqUniversalFastMode
  getCode()I = Code
  getLabel()Ljava/lang/String; = Label
  fromString(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode; = FromString(string)
  getValue(I)Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode; = GetValue(int)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/StrategyAcquisitionMode; = Values()
com/morpho/morphosmart/sdk/Template = Com.Morpho.Morphosmart.Sdk.Template
  <init>()V = .ctor()
  getDataIndex()I = DataIndex
  setDataIndex(I)V = DataIndex
  getTemplateFVPType()Lcom/morpho/morphosmart/sdk/TemplateFVPType; = TemplateFVPType
  setTemplateFVPType(Lcom/morpho/morphosmart/sdk/TemplateFVPType;)V = TemplateFVPType
  getTemplateQuality()I = TemplateQuality
  setTemplateQuality(I)V = TemplateQuality
  getTemplateType()Lcom/morpho/morphosmart/sdk/TemplateType; = TemplateType
  setTemplateType(Lcom/morpho/morphosmart/sdk/TemplateType;)V = TemplateType
  getData()[B = GetData()
  setData([B)V = SetData(byte[])
  setTemplateFVPType(I)V = SetTemplateFVPType(int)
  setTemplateType(I)V = SetTemplateType(int)
com/morpho/morphosmart/sdk/TemplateFVP = Com.Morpho.Morphosmart.Sdk.TemplateFVP
  <init>()V = .ctor()
  getAdvancedSecurityLevelsCompatibility()Z = AdvancedSecurityLevelsCompatibility
  setAdvancedSecurityLevelsCompatibility(Z)V = AdvancedSecurityLevelsCompatibility
  getDataIndex()I = DataIndex
  setDataIndex(I)V = DataIndex
  getTemplateFVPType()Lcom/morpho/morphosmart/sdk/TemplateFVPType; = TemplateFVPType
  setTemplateFVPType(Lcom/morpho/morphosmart/sdk/TemplateFVPType;)V = TemplateFVPType
  getTemplateQuality()I = TemplateQuality
  setTemplateQuality(I)V = TemplateQuality
  getData()[B = GetData()
  setData([B)V = SetData(byte[])
  setTemplateFVPType(I)V = SetTemplateFVPType(int)
com/morpho/morphosmart/sdk/TemplateFVPType = Com.Morpho.Morphosmart.Sdk.TemplateFVPType
  MORPHO_NO_PK_FVP = MorphoNoPkFvp
  MORPHO_PK_FVP = MorphoPkFvp
  MORPHO_PK_FVP_MATCH = MorphoPkFvpMatch
  getCode()I = Code
  getExtension()Ljava/lang/String; = Extension
  getLabel()Ljava/lang/String; = Label
  getValue(I)Lcom/morpho/morphosmart/sdk/TemplateFVPType; = GetValue(int)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/TemplateFVPType; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/TemplateFVPType; = Values()
com/morpho/morphosmart/sdk/TemplateList = Com.Morpho.Morphosmart.Sdk.TemplateList
  <init>()V = .ctor()
  isActivateFullImageRetrieving()Z = ActivateFullImageRetrieving
  setActivateFullImageRetrieving(Z)V = ActivateFullImageRetrieving
  getNbFVPTemplate()I = NbFVPTemplate
  getNbTemplate()I = NbTemplate
  getFVPTemplate(I)Lcom/morpho/morphosmart/sdk/TemplateFVP; = GetFVPTemplate(int)
  getImage(I)Lcom/morpho/morphosmart/sdk/MorphoImage; = GetImage(int)
  getTemplate(I)Lcom/morpho/morphosmart/sdk/Template; = GetTemplate(int)
  putFVPTemplate(Lcom/morpho/morphosmart/sdk/TemplateFVP;)V = PutFVPTemplate(Com.Morpho.Morphosmart.Sdk.TemplateFVP)
  putTemplate(Lcom/morpho/morphosmart/sdk/Template;)V = PutTemplate(Com.Morpho.Morphosmart.Sdk.Template)
  setImage(Lcom/morpho/morphosmart/sdk/MorphoImage;)V = SetImage(Com.Morpho.Morphosmart.Sdk.MorphoImage)
com/morpho/morphosmart/sdk/TemplateQuality = Com.Morpho.Morphosmart.Sdk.TemplateQuality
  <init>()V = .ctor()
  getTemplateQuality()[B = GetTemplateQuality()
  setTemplateQuality([B)V = SetTemplateQuality(byte[])
com/morpho/morphosmart/sdk/TemplateType = Com.Morpho.Morphosmart.Sdk.TemplateType
  MORPHO_NO_PK_FP = MorphoNoPkFp
  MORPHO_PK_ANSI_378 = MorphoPkAnsi378
  MORPHO_PK_ANSI_378_2009 = MorphoPkAnsi3782009
  MORPHO_PK_BIOSCRYPT = MorphoPkBioscrypt
  MORPHO_PK_CFV = MorphoPkCfv
  MORPHO_PK_COMP = MorphoPkComp
  MORPHO_PK_COMP_NORM = MorphoPkCompNorm
  MORPHO_PK_DIN_V66400_CS = MorphoPkDinV66400Cs
  MORPHO_PK_DIN_V66400_CS_AA = MorphoPkDinV66400CsAa
  MORPHO_PK_ILO_FMR = MorphoPkIloFmr
  MORPHO_PK_ISO_FMC_CS = MorphoPkIsoFmcCs
  MORPHO_PK_ISO_FMC_CS_AA = MorphoPkIsoFmcCsAa
  MORPHO_PK_ISO_FMC_NS = MorphoPkIsoFmcNs
  MORPHO_PK_ISO_FMR = MorphoPkIsoFmr
  MORPHO_PK_ISO_FMR_2011 = MorphoPkIsoFmr2011
  MORPHO_PK_MAT = MorphoPkMat
  MORPHO_PK_MAT_NORM = MorphoPkMatNorm
  MORPHO_PK_MINEX_A = MorphoPkMinexA
  MORPHO_PK_MOC = MorphoPkMoc
  MORPHO_PK_PKLITE = MorphoPkPklite
  getCode()I = Code
  getExtension()Ljava/lang/String; = Extension
  getLabel()Ljava/lang/String; = Label
  getValue(I)Lcom/morpho/morphosmart/sdk/TemplateType; = GetValue(int)
  valueOf(Ljava/lang/String;)Lcom/morpho/morphosmart/sdk/TemplateType; = ValueOf(string)
  values()[Lcom/morpho/morphosmart/sdk/TemplateType; = Values()
morpho/msosecu/sdk/api/MsoSecu = Morpho.Msosecu.Sdk.Api.MsoSecu
  <init>()V = .ctor()
  computeCRC32([BJJZZJ[J)I = ComputeCRC32(byte[], long, long, bool, bool, long, long[])
  decryptAes128Cbc([B[B[BZLjava/util/ArrayList;)I = DecryptAes128Cbc(byte[], byte[], byte[], bool, System.Collections.Generic.IList<Java.Lang.Byte>)
  desCrypt([B[BLjava/util/ArrayList;)I = DesCrypt(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  encrypt3DesCbcNopad([B[B[B[B)I = Encrypt3DesCbcNopad(byte[], byte[], byte[], byte[])
  encryptAes128Cbc([B[B[BZLjava/util/ArrayList;)I = EncryptAes128Cbc(byte[], byte[], byte[], bool, System.Collections.Generic.IList<Java.Lang.Byte>)
  genRandom([B)I = GenRandom(byte[])
  getHostCertif(Ljava/util/ArrayList;)I = GetHostCertif(System.Collections.Generic.IList<Java.Lang.Byte>)
  rsaEncrypt([B[BLjava/util/ArrayList;)I = RsaEncrypt(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  setOpenSSLPath(Ljava/lang/String;)I = SetOpenSSLPath(string)
  signRSA([B[BLjava/util/ArrayList;)I = SignRSA(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesCrypt([BLjava/util/ArrayList;)I = TripleDesCrypt(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesCryptByKey([B[BLjava/util/ArrayList;)I = TripleDesCryptByKey(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesDecrypt([BLjava/util/ArrayList;)I = TripleDesDecrypt(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesSign([BLjava/util/ArrayList;)I = TripleDesSign(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesVerifSign([B[B[Z)I = TripleDesVerifSign(byte[], byte[], bool[])
  tunnelingInit1([B[B[B[BLjava/util/ArrayList;)I = TunnelingInit1(byte[], byte[], byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tunnelingInit2([B)I = TunnelingInit2(byte[])
  verifCertif([B[I)I = VerifCertif(byte[], int[])
  verifOfferedSecuritySignature([B[B[B[I)I = VerifOfferedSecuritySignature(byte[], byte[], byte[], int[])
  verifSignDSA([B[B[B[I)I = VerifSignDSA(byte[], byte[], byte[], int[])
  verifSignRSA([B[B[B[I)I = VerifSignRSA(byte[], byte[], byte[], int[])
morpho/msosecu/sdk/api/MsoSecuConstants = Morpho.Msosecu.Sdk.Api.IMsoSecuConstants
  AES128_BLOCK_LENGTH = Aes128BlockLength
  DES_BLOCK_LENGTH = DesBlockLength
  MSOSECU_AES128_FINAL_ERR = MsosecuAes128FinalErr
  MSOSECU_AES128_INIT_ERR = MsosecuAes128InitErr
  MSOSECU_AES128_UPDATE_ERR = MsosecuAes128UpdateErr
  MSOSECU_ALLOC_ERR = MsosecuAllocErr
  MSOSECU_BAD_PARAMETER = MsosecuBadParameter
  MSOSECU_BIO_NEW_MEM_ERR = MsosecuBioNewMemErr
  MSOSECU_CRYPTO_PROTOCOLE_ERR = MsosecuCryptoProtocoleErr
  MSOSECU_DELETE_FILE_ERR = MsosecuDeleteFileErr
  MSOSECU_DSA_KEY_ERR = MsosecuDsaKeyErr
  MSOSECU_DSS1_FINAL_ERR = MsosecuDss1FinalErr
  MSOSECU_DSS1_INIT_ERR = MsosecuDss1InitErr
  MSOSECU_DSS1_UPDATE_ERR = MsosecuDss1UpdateErr
  MSOSECU_FILE_EMPTY = MsosecuFileEmpty
  MSOSECU_FILE_ERR = MsosecuFileErr
  MSOSECU_INVALID_CERTIF = MsosecuInvalidCertif
  MSOSECU_MODE_DSA_ERR = MsosecuModeDsaErr
  MSOSECU_OK = MsosecuOk
  MSOSECU_OPEN_FILE_ERR = MsosecuOpenFileErr
  MSOSECU_OPEN_SSL = MsosecuOpenSsl
  MSOSECU_PARSE_DATA_TO_X509STRUCT_ERR = MsosecuParseDataToX509structErr
  MSOSECU_PARSE_DER_TO_X509STRUCT_ERR = MsosecuParseDerToX509structErr
  MSOSECU_PEM_READ_BIO_ERR = MsosecuPemReadBioErr
  MSOSECU_PUBLIC_KEY_ERR = MsosecuPublicKeyErr
  MSOSECU_READ_FILE_ERR = MsosecuReadFileErr
  MSOSECU_RSA_KEY_ERR = MsosecuRsaKeyErr
  MSOSECU_SHA1_FINAL_ERR = MsosecuSha1FinalErr
  MSOSECU_SHA1_INIT_ERR = MsosecuSha1InitErr
  MSOSECU_SHA1_UPDATE_ERR = MsosecuSha1UpdateErr
  MSOSECU_STORE_LOAD_LOCATIONS_ERR = MsosecuStoreLoadLocationsErr
  MSOSECU_STORE_NEW_ERR = MsosecuStoreNewErr
  MSOSECU_WRITE_FILE_ERR = MsosecuWriteFileErr
  TRIPLE_DES_KEY_LENGTH = TripleDesKeyLength
morpho/msosecu/sdk/api/MsoSecuJNI = Morpho.Msosecu.Sdk.Api.MsoSecuJNI
  <init>()V = .ctor()
  AES128_BLOCK_LENGTH_get()I = AES128_BLOCK_LENGTH_get()
  computeCRC32([BJJZZJ[J)I = ComputeCRC32(byte[], long, long, bool, bool, long, long[])
  decryptAes128Cbc([B[B[BZLjava/util/ArrayList;)I = DecryptAes128Cbc(byte[], byte[], byte[], bool, System.Collections.Generic.IList<Java.Lang.Byte>)
  DES_BLOCK_LENGTH_get()I = DES_BLOCK_LENGTH_get()
  desCrypt([B[BLjava/util/ArrayList;)I = DesCrypt(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  encrypt3DesCbcNopad([B[B[B[B)I = Encrypt3DesCbcNopad(byte[], byte[], byte[], byte[])
  encryptAes128Cbc([B[B[BZLjava/util/ArrayList;)I = EncryptAes128Cbc(byte[], byte[], byte[], bool, System.Collections.Generic.IList<Java.Lang.Byte>)
  genRandom([B)I = GenRandom(byte[])
  getHostCertif(Ljava/util/ArrayList;)I = GetHostCertif(System.Collections.Generic.IList<Java.Lang.Byte>)
  MSOSECU_AES128_FINAL_ERR_get()I = MSOSECU_AES128_FINAL_ERR_get()
  MSOSECU_AES128_INIT_ERR_get()I = MSOSECU_AES128_INIT_ERR_get()
  MSOSECU_AES128_UPDATE_ERR_get()I = MSOSECU_AES128_UPDATE_ERR_get()
  MSOSECU_ALLOC_ERR_get()I = MSOSECU_ALLOC_ERR_get()
  MSOSECU_BAD_PARAMETER_get()I = MSOSECU_BAD_PARAMETER_get()
  MSOSECU_BIO_NEW_MEM_ERR_get()I = MSOSECU_BIO_NEW_MEM_ERR_get()
  MSOSECU_CRYPTO_PROTOCOLE_ERR_get()I = MSOSECU_CRYPTO_PROTOCOLE_ERR_get()
  MSOSECU_DELETE_FILE_ERR_get()I = MSOSECU_DELETE_FILE_ERR_get()
  MSOSECU_DSA_KEY_ERR_get()I = MSOSECU_DSA_KEY_ERR_get()
  MSOSECU_DSS1_FINAL_ERR_get()I = MSOSECU_DSS1_FINAL_ERR_get()
  MSOSECU_DSS1_INIT_ERR_get()I = MSOSECU_DSS1_INIT_ERR_get()
  MSOSECU_DSS1_UPDATE_ERR_get()I = MSOSECU_DSS1_UPDATE_ERR_get()
  MSOSECU_FILE_EMPTY_get()I = MSOSECU_FILE_EMPTY_get()
  MSOSECU_FILE_ERR_get()I = MSOSECU_FILE_ERR_get()
  MSOSECU_INVALID_CERTIF_get()I = MSOSECU_INVALID_CERTIF_get()
  MSOSECU_MODE_DSA_ERR_get()I = MSOSECU_MODE_DSA_ERR_get()
  MSOSECU_OK_get()I = MSOSECU_OK_get()
  MSOSECU_OPEN_FILE_ERR_get()I = MSOSECU_OPEN_FILE_ERR_get()
  MSOSECU_OPEN_SSL_get()I = MSOSECU_OPEN_SSL_get()
  MSOSECU_PARSE_DATA_TO_X509STRUCT_ERR_get()I = MSOSECU_PARSE_DATA_TO_X509STRUCT_ERR_get()
  MSOSECU_PARSE_DER_TO_X509STRUCT_ERR_get()I = MSOSECU_PARSE_DER_TO_X509STRUCT_ERR_get()
  MSOSECU_PEM_READ_BIO_ERR_get()I = MSOSECU_PEM_READ_BIO_ERR_get()
  MSOSECU_PUBLIC_KEY_ERR_get()I = MSOSECU_PUBLIC_KEY_ERR_get()
  MSOSECU_READ_FILE_ERR_get()I = MSOSECU_READ_FILE_ERR_get()
  MSOSECU_RSA_KEY_ERR_get()I = MSOSECU_RSA_KEY_ERR_get()
  MSOSECU_SHA1_FINAL_ERR_get()I = MSOSECU_SHA1_FINAL_ERR_get()
  MSOSECU_SHA1_INIT_ERR_get()I = MSOSECU_SHA1_INIT_ERR_get()
  MSOSECU_SHA1_UPDATE_ERR_get()I = MSOSECU_SHA1_UPDATE_ERR_get()
  MSOSECU_STORE_LOAD_LOCATIONS_ERR_get()I = MSOSECU_STORE_LOAD_LOCATIONS_ERR_get()
  MSOSECU_STORE_NEW_ERR_get()I = MSOSECU_STORE_NEW_ERR_get()
  MSOSECU_WRITE_FILE_ERR_get()I = MSOSECU_WRITE_FILE_ERR_get()
  rsaEncrypt([B[BLjava/util/ArrayList;)I = RsaEncrypt(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  setOpenSSLPath(Ljava/lang/String;)I = SetOpenSSLPath(string)
  signRSA([B[BLjava/util/ArrayList;)I = SignRSA(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  TRIPLE_DES_KEY_LENGTH_get()I = TRIPLE_DES_KEY_LENGTH_get()
  tripleDesCrypt([BLjava/util/ArrayList;)I = TripleDesCrypt(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesCryptByKey([B[BLjava/util/ArrayList;)I = TripleDesCryptByKey(byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesDecrypt([BLjava/util/ArrayList;)I = TripleDesDecrypt(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesSign([BLjava/util/ArrayList;)I = TripleDesSign(byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tripleDesVerifSign([B[B[Z)I = TripleDesVerifSign(byte[], byte[], bool[])
  tunnelingInit1([B[B[B[BLjava/util/ArrayList;)I = TunnelingInit1(byte[], byte[], byte[], byte[], System.Collections.Generic.IList<Java.Lang.Byte>)
  tunnelingInit2([B)I = TunnelingInit2(byte[])
  verifCertif([B[I)I = VerifCertif(byte[], int[])
  verifOfferedSecuritySignature([B[B[B[I)I = VerifOfferedSecuritySignature(byte[], byte[], byte[], int[])
  verifSignDSA([B[B[B[I)I = VerifSignDSA(byte[], byte[], byte[], int[])
  verifSignRSA([B[B[B[I)I = VerifSignRSA(byte[], byte[], byte[], int[])
org/aspectj/internal/lang/annotation/ajcDeclareAnnotation = Org.Aspectj.Internal.Lang.Annotation.IAjcDeclareAnnotation
  annotation()Ljava/lang/String; = Annotation()
  kind()Ljava/lang/String; = Kind()
  pattern()Ljava/lang/String; = Pattern()
org/aspectj/internal/lang/annotation/ajcDeclareEoW = Org.Aspectj.Internal.Lang.Annotation.IAjcDeclareEoW
  isError()Z = IsError
  message()Ljava/lang/String; = Message()
  pointcut()Ljava/lang/String; = Pointcut()
org/aspectj/internal/lang/annotation/ajcDeclareParents = Org.Aspectj.Internal.Lang.Annotation.IAjcDeclareParents
  isExtends()Z = IsExtends
  parentTypes()Ljava/lang/String; = ParentTypes()
  targetTypePattern()Ljava/lang/String; = TargetTypePattern()
org/aspectj/internal/lang/annotation/ajcDeclarePrecedence = Org.Aspectj.Internal.Lang.Annotation.IAjcDeclarePrecedence
  value()Ljava/lang/String; = Value()
org/aspectj/internal/lang/annotation/ajcDeclareSoft = Org.Aspectj.Internal.Lang.Annotation.IAjcDeclareSoft
  exceptionType()Ljava/lang/String; = ExceptionType()
  pointcut()Ljava/lang/String; = Pointcut()
org/aspectj/internal/lang/annotation/ajcITD = Org.Aspectj.Internal.Lang.Annotation.IAjcITD
  modifiers()I = Modifiers()
  name()Ljava/lang/String; = Name()
  targetType()Ljava/lang/String; = TargetType()
org/aspectj/internal/lang/annotation/ajcPrivileged = Org.Aspectj.Internal.Lang.Annotation.IAjcPrivileged
org/aspectj/internal/lang/reflect/AdviceImpl = Org.Aspectj.Internal.Lang.Reflect.AdviceImpl
  <init>(Ljava/lang/reflect/Method;Ljava/lang/String;Lorg/aspectj/lang/reflect/AdviceKind;)V = .ctor(Java.Lang.Reflect.Method, string, Org.Aspectj.Lang.Reflect.AdviceKind)
  <init>(Ljava/lang/reflect/Method;Ljava/lang/String;Lorg/aspectj/lang/reflect/AdviceKind;Ljava/lang/String;)V = .ctor(Java.Lang.Reflect.Method, string, Org.Aspectj.Lang.Reflect.AdviceKind, string)
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getKind()Lorg/aspectj/lang/reflect/AdviceKind; = Kind
  getName()Ljava/lang/String; = Name
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
  getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType; = GetExceptionTypes()
  getGenericParameterTypes()[Ljava/lang/reflect/Type; = GetGenericParameterTypes()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
org/aspectj/internal/lang/reflect/AjTypeImpl = Org.Aspectj.Internal.Lang.Reflect.AjTypeImpl
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getEnclosingConstructor()Ljava/lang/reflect/Constructor; = EnclosingConstructor
  getEnclosingMethod()Ljava/lang/reflect/Method; = EnclosingMethod
  getEnclosingType()Lorg/aspectj/lang/reflect/AjType; = EnclosingType
  getGenericSupertype()Ljava/lang/reflect/Type; = GenericSupertype
  isArray()Z = IsArray
  isAspect()Z = IsAspect
  isEnum()Z = IsEnum
  isInterface()Z = IsInterface
  isLocalClass()Z = IsLocalClass
  isMemberAspect()Z = IsMemberAspect
  isMemberClass()Z = IsMemberClass
  isPrimitive()Z = IsPrimitive
  isPrivileged()Z = IsPrivileged
  getJavaClass()Ljava/lang/Class; = JavaClass
  getModifiers()I = Modifiers
  getName()Ljava/lang/String; = Name
  getPackage()Ljava/lang/Package; = Package
  getPerClause()Lorg/aspectj/lang/reflect/PerClause; = PerClause
  getSupertype()Lorg/aspectj/lang/reflect/AjType; = Supertype
  getAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice; = GetAdvice(string)
  getAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice; = GetAdvice(params Org.Aspectj.Lang.Reflect.AdviceKind[])
  getAjTypes()[Lorg/aspectj/lang/reflect/AjType; = GetAjTypes()
  getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation; = GetAnnotation(Java.Lang.Class)
  getAnnotations()[Ljava/lang/annotation/Annotation; = GetAnnotations()
  getConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor; = GetConstructor(params Org.Aspectj.Lang.Reflect.IAjType[])
  getConstructors()[Ljava/lang/reflect/Constructor; = GetConstructors()
  getDeclareAnnotations()[Lorg/aspectj/lang/reflect/DeclareAnnotation; = GetDeclareAnnotations()
  getDeclaredAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice; = GetDeclaredAdvice(string)
  getDeclaredAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice; = GetDeclaredAdvice(params Org.Aspectj.Lang.Reflect.AdviceKind[])
  getDeclaredAjTypes()[Lorg/aspectj/lang/reflect/AjType; = GetDeclaredAjTypes()
  getDeclaredAnnotations()[Ljava/lang/annotation/Annotation; = GetDeclaredAnnotations()
  getDeclaredConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor; = GetDeclaredConstructor(params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredConstructors()[Ljava/lang/reflect/Constructor; = GetDeclaredConstructors()
  getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field; = GetDeclaredField(string)
  getDeclaredFields()[Ljava/lang/reflect/Field; = GetDeclaredFields()
  getDeclaredITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetDeclaredITDConstructor(Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetDeclaredITDConstructors()
  getDeclaredITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetDeclaredITDField(string, Org.Aspectj.Lang.Reflect.IAjType)
  getDeclaredITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetDeclaredITDFields()
  getDeclaredITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetDeclaredITDMethod(string, Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetDeclaredITDMethods()
  getDeclaredMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method; = GetDeclaredMethod(string, params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredMethods()[Ljava/lang/reflect/Method; = GetDeclaredMethods()
  getDeclaredPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut; = GetDeclaredPointcut(string)
  getDeclaredPointcuts()[Lorg/aspectj/lang/reflect/Pointcut; = GetDeclaredPointcuts()
  getDeclareErrorOrWarnings()[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning; = GetDeclareErrorOrWarnings()
  getDeclareParents()[Lorg/aspectj/lang/reflect/DeclareParents; = GetDeclareParents()
  getDeclarePrecedence()[Lorg/aspectj/lang/reflect/DeclarePrecedence; = GetDeclarePrecedence()
  getDeclareSofts()[Lorg/aspectj/lang/reflect/DeclareSoft; = GetDeclareSofts()
  getEnumConstants()[Ljava/lang/Object; = GetEnumConstants()
  getField(Ljava/lang/String;)Ljava/lang/reflect/Field; = GetField(string)
  getFields()[Ljava/lang/reflect/Field; = GetFields()
  getInterfaces()[Lorg/aspectj/lang/reflect/AjType; = GetInterfaces()
  getITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetITDConstructor(Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetITDConstructors()
  getITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetITDField(string, Org.Aspectj.Lang.Reflect.IAjType)
  getITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetITDFields()
  getITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetITDMethod(string, Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetITDMethods()
  getMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method; = GetMethod(string, params Org.Aspectj.Lang.Reflect.IAjType[])
  getMethods()[Ljava/lang/reflect/Method; = GetMethods()
  getPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut; = GetPointcut(string)
  getPointcuts()[Lorg/aspectj/lang/reflect/Pointcut; = GetPointcuts()
  getTypeParameters()[Ljava/lang/reflect/TypeVariable; = GetTypeParameters()
  isAnnotationPresent(Ljava/lang/Class;)Z = IsAnnotationPresent(Java.Lang.Class)
  isInstance(Ljava/lang/Object;)Z = IsInstance(Java.Lang.Object)
org/aspectj/internal/lang/reflect/DeclareAnnotationImpl = Org.Aspectj.Internal.Lang.Reflect.DeclareAnnotationImpl
  <init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;Ljava/lang/String;Ljava/lang/annotation/Annotation;Ljava/lang/String;)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, string, string, Java.Lang.Annotation.IAnnotation, string)
  getAnnotation()Ljava/lang/annotation/Annotation; = Annotation
  getAnnotationAsText()Ljava/lang/String; = AnnotationAsText
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getKind()Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind; = Kind
  getSignaturePattern()Lorg/aspectj/lang/reflect/SignaturePattern; = SignaturePattern
  getTypePattern()Lorg/aspectj/lang/reflect/TypePattern; = TypePattern
org/aspectj/internal/lang/reflect/DeclareErrorOrWarningImpl = Org.Aspectj.Internal.Lang.Reflect.DeclareErrorOrWarningImpl
  <init>(Ljava/lang/String;Ljava/lang/String;ZLorg/aspectj/lang/reflect/AjType;)V = .ctor(string, string, bool, Org.Aspectj.Lang.Reflect.IAjType)
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  isError()Z = IsError
  getMessage()Ljava/lang/String; = Message
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
org/aspectj/internal/lang/reflect/DeclareParentsImpl = Org.Aspectj.Internal.Lang.Reflect.DeclareParentsImpl
  <init>(Ljava/lang/String;Ljava/lang/String;ZLorg/aspectj/lang/reflect/AjType;)V = .ctor(string, string, bool, Org.Aspectj.Lang.Reflect.IAjType)
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  isExtends()Z = IsExtends
  isImplements()Z = IsImplements
  getTargetTypesPattern()Lorg/aspectj/lang/reflect/TypePattern; = TargetTypesPattern
  getParentTypes()[Ljava/lang/reflect/Type; = GetParentTypes()
org/aspectj/internal/lang/reflect/DeclarePrecedenceImpl = Org.Aspectj.Internal.Lang.Reflect.DeclarePrecedenceImpl
  <init>(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)V = .ctor(string, Org.Aspectj.Lang.Reflect.IAjType)
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getPrecedenceOrder()[Lorg/aspectj/lang/reflect/TypePattern; = GetPrecedenceOrder()
org/aspectj/internal/lang/reflect/DeclareSoftImpl = Org.Aspectj.Internal.Lang.Reflect.DeclareSoftImpl
  <init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, string, string)
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
  getSoftenedExceptionType()Lorg/aspectj/lang/reflect/AjType; = SoftenedExceptionType
org/aspectj/internal/lang/reflect/InterTypeConstructorDeclarationImpl = Org.Aspectj.Internal.Lang.Reflect.InterTypeConstructorDeclarationImpl
  <init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/reflect/Method;)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, string, int, Java.Lang.Reflect.Method)
  getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType; = GetExceptionTypes()
  getGenericParameterTypes()[Ljava/lang/reflect/Type; = GetGenericParameterTypes()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
org/aspectj/internal/lang/reflect/InterTypeDeclarationImpl = Org.Aspectj.Internal.Lang.Reflect.InterTypeDeclarationImpl
  <init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;I)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, string, int)
  <init>(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;I)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, Org.Aspectj.Lang.Reflect.IAjType, int)
  targetTypeName = TargetTypeName
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getModifiers()I = Modifiers
  getTargetType()Lorg/aspectj/lang/reflect/AjType; = TargetType
org/aspectj/internal/lang/reflect/InterTypeFieldDeclarationImpl = Org.Aspectj.Internal.Lang.Reflect.InterTypeFieldDeclarationImpl
  <init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/String;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Type;)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, string, int, string, Org.Aspectj.Lang.Reflect.IAjType, Java.Lang.Reflect.IType)
  <init>(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Field;)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, Org.Aspectj.Lang.Reflect.IAjType, Java.Lang.Reflect.Field)
  getGenericType()Ljava/lang/reflect/Type; = GenericType
  getName()Ljava/lang/String; = Name
  getType()Lorg/aspectj/lang/reflect/AjType; = Type
org/aspectj/internal/lang/reflect/InterTypeMethodDeclarationImpl = Org.Aspectj.Internal.Lang.Reflect.InterTypeMethodDeclarationImpl
  <init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/reflect/Method;)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, string, int, string, Java.Lang.Reflect.Method)
  <init>(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Method;I)V = .ctor(Org.Aspectj.Lang.Reflect.IAjType, Org.Aspectj.Lang.Reflect.IAjType, Java.Lang.Reflect.Method, int)
  getGenericReturnType()Ljava/lang/reflect/Type; = GenericReturnType
  getName()Ljava/lang/String; = Name
  getReturnType()Lorg/aspectj/lang/reflect/AjType; = ReturnType
  getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType; = GetExceptionTypes()
  getGenericParameterTypes()[Ljava/lang/reflect/Type; = GetGenericParameterTypes()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
  getTypeParameters()[Ljava/lang/reflect/TypeVariable; = GetTypeParameters()
org/aspectj/internal/lang/reflect/PerClauseImpl = Org.Aspectj.Internal.Lang.Reflect.PerClauseImpl
  <init>(Lorg/aspectj/lang/reflect/PerClauseKind;)V = .ctor(Org.Aspectj.Lang.Reflect.PerClauseKind)
  getKind()Lorg/aspectj/lang/reflect/PerClauseKind; = Kind
org/aspectj/internal/lang/reflect/PointcutBasedPerClauseImpl = Org.Aspectj.Internal.Lang.Reflect.PointcutBasedPerClauseImpl
  <init>(Lorg/aspectj/lang/reflect/PerClauseKind;Ljava/lang/String;)V = .ctor(Org.Aspectj.Lang.Reflect.PerClauseKind, string)
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
org/aspectj/internal/lang/reflect/PointcutExpressionImpl = Org.Aspectj.Internal.Lang.Reflect.PointcutExpressionImpl
  <init>(Ljava/lang/String;)V = .ctor(string)
  asString()Ljava/lang/String; = AsString()
org/aspectj/internal/lang/reflect/PointcutImpl = Org.Aspectj.Internal.Lang.Reflect.PointcutImpl
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/reflect/Method;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;)V = .ctor(string, string, Java.Lang.Reflect.Method, Org.Aspectj.Lang.Reflect.IAjType, string)
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getModifiers()I = Modifiers
  getName()Ljava/lang/String; = Name
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
  getParameterNames()[Ljava/lang/String; = GetParameterNames()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
org/aspectj/internal/lang/reflect/SignaturePatternImpl = Org.Aspectj.Internal.Lang.Reflect.SignaturePatternImpl
  <init>(Ljava/lang/String;)V = .ctor(string)
  asString()Ljava/lang/String; = AsString()
org/aspectj/internal/lang/reflect/StringToType = Org.Aspectj.Internal.Lang.Reflect.StringToType
  <init>()V = .ctor()
  commaSeparatedListToTypeArray(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/reflect/Type; = CommaSeparatedListToTypeArray(string, Java.Lang.Class)
  stringToType(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Type; = InvokeStringToType(string, Java.Lang.Class)
org/aspectj/internal/lang/reflect/TypePatternBasedPerClauseImpl = Org.Aspectj.Internal.Lang.Reflect.TypePatternBasedPerClauseImpl
  <init>(Lorg/aspectj/lang/reflect/PerClauseKind;Ljava/lang/String;)V = .ctor(Org.Aspectj.Lang.Reflect.PerClauseKind, string)
  getTypePattern()Lorg/aspectj/lang/reflect/TypePattern; = TypePattern
org/aspectj/internal/lang/reflect/TypePatternImpl = Org.Aspectj.Internal.Lang.Reflect.TypePatternImpl
  <init>(Ljava/lang/String;)V = .ctor(string)
  asString()Ljava/lang/String; = AsString()
org/aspectj/lang/annotation/AdviceName = Org.Aspectj.Lang.Annotation.IAdviceName
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/After = Org.Aspectj.Lang.Annotation.IAfter
  argNames()Ljava/lang/String; = ArgNames()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/AfterReturning = Org.Aspectj.Lang.Annotation.IAfterReturning
  argNames()Ljava/lang/String; = ArgNames()
  pointcut()Ljava/lang/String; = Pointcut()
  returning()Ljava/lang/String; = Returning()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/AfterThrowing = Org.Aspectj.Lang.Annotation.IAfterThrowing
  argNames()Ljava/lang/String; = ArgNames()
  pointcut()Ljava/lang/String; = Pointcut()
  throwing()Ljava/lang/String; = Throwing()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/Around = Org.Aspectj.Lang.Annotation.IAround
  argNames()Ljava/lang/String; = ArgNames()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/Aspect = Org.Aspectj.Lang.Annotation.IAspect
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/Before = Org.Aspectj.Lang.Annotation.IBefore
  argNames()Ljava/lang/String; = ArgNames()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/control/CodeGenerationHint = Org.Aspectj.Lang.Annotation.Control.ICodeGenerationHint
  ifNameSuffix()Ljava/lang/String; = IfNameSuffix()
org/aspectj/lang/annotation/DeclareAnnotation = Org.Aspectj.Lang.Annotation.IDeclareAnnotation
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/DeclareError = Org.Aspectj.Lang.Annotation.IDeclareError
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/DeclareMixin = Org.Aspectj.Lang.Annotation.IDeclareMixin
  interfaces()[Ljava/lang/Class; = Interfaces()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/DeclareParents = Org.Aspectj.Lang.Annotation.IDeclareParents
  defaultImpl()Ljava/lang/Class; = DefaultImpl()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/DeclarePrecedence = Org.Aspectj.Lang.Annotation.IDeclarePrecedence
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/DeclareWarning = Org.Aspectj.Lang.Annotation.IDeclareWarning
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/Pointcut = Org.Aspectj.Lang.Annotation.IPointcut
  argNames()Ljava/lang/String; = ArgNames()
  value()Ljava/lang/String; = Value()
org/aspectj/lang/annotation/RequiredTypes = Org.Aspectj.Lang.Annotation.IRequiredTypes
  value()[Ljava/lang/String; = Value()
org/aspectj/lang/annotation/SuppressAjWarnings = Org.Aspectj.Lang.Annotation.ISuppressAjWarnings
  value()[Ljava/lang/String; = Value()
org/aspectj/lang/Aspects = Org.Aspectj.Lang.Aspects
  <init>()V = .ctor()
  aspectOf(Ljava/lang/Class;)Ljava/lang/Object; = AspectOf(Java.Lang.Class)
  aspectOf(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object; = AspectOf(Java.Lang.Class, Java.Lang.Class)
  aspectOf(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object; = AspectOf(Java.Lang.Class, Java.Lang.Object)
  hasAspect(Ljava/lang/Class;)Z = HasAspect(Java.Lang.Class)
  hasAspect(Ljava/lang/Class;Ljava/lang/Class;)Z = HasAspect(Java.Lang.Class, Java.Lang.Class)
  hasAspect(Ljava/lang/Class;Ljava/lang/Object;)Z = HasAspect(Java.Lang.Class, Java.Lang.Object)
org/aspectj/lang/Aspects14 = Org.Aspectj.Lang.Aspects14
  <init>()V = .ctor()
  aspectOf(Ljava/lang/Class;)Ljava/lang/Object; = AspectOf(Java.Lang.Class)
  aspectOf(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object; = AspectOf(Java.Lang.Class, Java.Lang.Class)
  aspectOf(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object; = AspectOf(Java.Lang.Class, Java.Lang.Object)
  hasAspect(Ljava/lang/Class;)Z = HasAspect(Java.Lang.Class)
  hasAspect(Ljava/lang/Class;Ljava/lang/Class;)Z = HasAspect(Java.Lang.Class, Java.Lang.Class)
  hasAspect(Ljava/lang/Class;Ljava/lang/Object;)Z = HasAspect(Java.Lang.Class, Java.Lang.Object)
org/aspectj/lang/JoinPoint = Org.Aspectj.Lang.IJoinPoint
  ADVICE_EXECUTION = AdviceExecution
  CONSTRUCTOR_CALL = ConstructorCall
  CONSTRUCTOR_EXECUTION = ConstructorExecution
  EXCEPTION_HANDLER = ExceptionHandler
  FIELD_GET = FieldGet
  FIELD_SET = FieldSet
  INITIALIZATION = Initialization
  METHOD_CALL = MethodCall
  METHOD_EXECUTION = MethodExecution
  PREINITIALIZATION = Preinitialization
  STATICINITIALIZATION = Staticinitialization
  SYNCHRONIZATION_LOCK = SynchronizationLock
  SYNCHRONIZATION_UNLOCK = SynchronizationUnlock
  getKind()Ljava/lang/String; = Kind
  getSignature()Lorg/aspectj/lang/Signature; = Signature
  getSourceLocation()Lorg/aspectj/lang/reflect/SourceLocation; = SourceLocation
  getStaticPart()Lorg/aspectj/lang/JoinPoint$StaticPart; = StaticPart
  getTarget()Ljava/lang/Object; = Target
  getThis()Ljava/lang/Object; = This
  getArgs()[Ljava/lang/Object; = GetArgs()
  toLongString()Ljava/lang/String; = ToLongString()
  toShortString()Ljava/lang/String; = ToShortString()
  toString()Ljava/lang/String; = ToString()
org/aspectj/lang/NoAspectBoundException = Org.Aspectj.Lang.NoAspectBoundException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
org/aspectj/lang/ProceedingJoinPoint = Org.Aspectj.Lang.IProceedingJoinPoint
  proceed()Ljava/lang/Object; = Proceed()
  proceed([Ljava/lang/Object;)Ljava/lang/Object; = Proceed(Java.Lang.Object[])
org/aspectj/lang/reflect/Advice = Org.Aspectj.Lang.Reflect.IAdvice
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getKind()Lorg/aspectj/lang/reflect/AdviceKind; = Kind
  getName()Ljava/lang/String; = Name
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
  getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType; = GetExceptionTypes()
  getGenericParameterTypes()[Ljava/lang/reflect/Type; = GetGenericParameterTypes()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
org/aspectj/lang/reflect/AdviceKind = Org.Aspectj.Lang.Reflect.AdviceKind
  AFTER = After
  AFTER_RETURNING = AfterReturning
  AFTER_THROWING = AfterThrowing
  AROUND = Around
  BEFORE = Before
  valueOf(Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceKind; = ValueOf(string)
  values()[Lorg/aspectj/lang/reflect/AdviceKind; = Values()
org/aspectj/lang/reflect/AdviceSignature = Org.Aspectj.Lang.Reflect.IAdviceSignature
  getAdvice()Ljava/lang/reflect/Method; = Advice
  getReturnType()Ljava/lang/Class; = ReturnType
org/aspectj/lang/reflect/AjType = Org.Aspectj.Lang.Reflect.IAjType
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getEnclosingConstructor()Ljava/lang/reflect/Constructor; = EnclosingConstructor
  getEnclosingMethod()Ljava/lang/reflect/Method; = EnclosingMethod
  getEnclosingType()Lorg/aspectj/lang/reflect/AjType; = EnclosingType
  getGenericSupertype()Ljava/lang/reflect/Type; = GenericSupertype
  isArray()Z = IsArray
  isAspect()Z = IsAspect
  isEnum()Z = IsEnum
  isInterface()Z = IsInterface
  isLocalClass()Z = IsLocalClass
  isMemberAspect()Z = IsMemberAspect
  isMemberClass()Z = IsMemberClass
  isPrimitive()Z = IsPrimitive
  isPrivileged()Z = IsPrivileged
  getJavaClass()Ljava/lang/Class; = JavaClass
  getModifiers()I = Modifiers
  getName()Ljava/lang/String; = Name
  getPackage()Ljava/lang/Package; = Package
  getPerClause()Lorg/aspectj/lang/reflect/PerClause; = PerClause
  getSupertype()Lorg/aspectj/lang/reflect/AjType; = Supertype
  getAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice; = GetAdvice(string)
  getAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice; = GetAdvice(params Org.Aspectj.Lang.Reflect.AdviceKind[])
  getAjTypes()[Lorg/aspectj/lang/reflect/AjType; = GetAjTypes()
  getConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor; = GetConstructor(params Org.Aspectj.Lang.Reflect.IAjType[])
  getConstructors()[Ljava/lang/reflect/Constructor; = GetConstructors()
  getDeclareAnnotations()[Lorg/aspectj/lang/reflect/DeclareAnnotation; = GetDeclareAnnotations()
  getDeclaredAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice; = GetDeclaredAdvice(string)
  getDeclaredAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice; = GetDeclaredAdvice(params Org.Aspectj.Lang.Reflect.AdviceKind[])
  getDeclaredAjTypes()[Lorg/aspectj/lang/reflect/AjType; = GetDeclaredAjTypes()
  getDeclaredConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor; = GetDeclaredConstructor(params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredConstructors()[Ljava/lang/reflect/Constructor; = GetDeclaredConstructors()
  getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field; = GetDeclaredField(string)
  getDeclaredFields()[Ljava/lang/reflect/Field; = GetDeclaredFields()
  getDeclaredITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetDeclaredITDConstructor(Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetDeclaredITDConstructors()
  getDeclaredITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetDeclaredITDField(string, Org.Aspectj.Lang.Reflect.IAjType)
  getDeclaredITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetDeclaredITDFields()
  getDeclaredITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetDeclaredITDMethod(string, Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetDeclaredITDMethods()
  getDeclaredMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method; = GetDeclaredMethod(string, params Org.Aspectj.Lang.Reflect.IAjType[])
  getDeclaredMethods()[Ljava/lang/reflect/Method; = GetDeclaredMethods()
  getDeclaredPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut; = GetDeclaredPointcut(string)
  getDeclaredPointcuts()[Lorg/aspectj/lang/reflect/Pointcut; = GetDeclaredPointcuts()
  getDeclareErrorOrWarnings()[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning; = GetDeclareErrorOrWarnings()
  getDeclareParents()[Lorg/aspectj/lang/reflect/DeclareParents; = GetDeclareParents()
  getDeclarePrecedence()[Lorg/aspectj/lang/reflect/DeclarePrecedence; = GetDeclarePrecedence()
  getDeclareSofts()[Lorg/aspectj/lang/reflect/DeclareSoft; = GetDeclareSofts()
  getEnumConstants()[Ljava/lang/Object; = GetEnumConstants()
  getField(Ljava/lang/String;)Ljava/lang/reflect/Field; = GetField(string)
  getFields()[Ljava/lang/reflect/Field; = GetFields()
  getInterfaces()[Lorg/aspectj/lang/reflect/AjType; = GetInterfaces()
  getITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetITDConstructor(Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration; = GetITDConstructors()
  getITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetITDField(string, Org.Aspectj.Lang.Reflect.IAjType)
  getITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration; = GetITDFields()
  getITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetITDMethod(string, Org.Aspectj.Lang.Reflect.IAjType, params Org.Aspectj.Lang.Reflect.IAjType[])
  getITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration; = GetITDMethods()
  getMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method; = GetMethod(string, params Org.Aspectj.Lang.Reflect.IAjType[])
  getMethods()[Ljava/lang/reflect/Method; = GetMethods()
  getPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut; = GetPointcut(string)
  getPointcuts()[Lorg/aspectj/lang/reflect/Pointcut; = GetPointcuts()
  getTypeParameters()[Ljava/lang/reflect/TypeVariable; = GetTypeParameters()
  isInstance(Ljava/lang/Object;)Z = IsInstance(Java.Lang.Object)
org/aspectj/lang/reflect/AjTypeSystem = Org.Aspectj.Lang.Reflect.AjTypeSystem
  <init>()V = .ctor()
  getAjType(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/AjType; = GetAjType(Java.Lang.Class)
org/aspectj/lang/reflect/CatchClauseSignature = Org.Aspectj.Lang.Reflect.ICatchClauseSignature
  getParameterName()Ljava/lang/String; = ParameterName
  getParameterType()Ljava/lang/Class; = ParameterType
org/aspectj/lang/reflect/CodeSignature = Org.Aspectj.Lang.Reflect.ICodeSignature
  getExceptionTypes()[Ljava/lang/Class; = GetExceptionTypes()
  getParameterNames()[Ljava/lang/String; = GetParameterNames()
  getParameterTypes()[Ljava/lang/Class; = GetParameterTypes()
org/aspectj/lang/reflect/ConstructorSignature = Org.Aspectj.Lang.Reflect.IConstructorSignature
  getConstructor()Ljava/lang/reflect/Constructor; = Constructor
org/aspectj/lang/reflect/DeclareAnnotation = Org.Aspectj.Lang.Reflect.IDeclareAnnotation
  getAnnotation()Ljava/lang/annotation/Annotation; = Annotation
  getAnnotationAsText()Ljava/lang/String; = AnnotationAsText
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getKind()Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind; = Kind
  getSignaturePattern()Lorg/aspectj/lang/reflect/SignaturePattern; = SignaturePattern
  getTypePattern()Lorg/aspectj/lang/reflect/TypePattern; = TypePattern
org/aspectj/lang/reflect/DeclareErrorOrWarning = Org.Aspectj.Lang.Reflect.IDeclareErrorOrWarning
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  isError()Z = IsError
  getMessage()Ljava/lang/String; = Message
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
org/aspectj/lang/reflect/DeclareParents = Org.Aspectj.Lang.Reflect.IDeclareParents
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  isExtends()Z = IsExtends
  isImplements()Z = IsImplements
  getTargetTypesPattern()Lorg/aspectj/lang/reflect/TypePattern; = TargetTypesPattern
  getParentTypes()[Ljava/lang/reflect/Type; = GetParentTypes()
org/aspectj/lang/reflect/DeclarePrecedence = Org.Aspectj.Lang.Reflect.IDeclarePrecedence
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getPrecedenceOrder()[Lorg/aspectj/lang/reflect/TypePattern; = GetPrecedenceOrder()
org/aspectj/lang/reflect/DeclareSoft = Org.Aspectj.Lang.Reflect.IDeclareSoft
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
  getSoftenedExceptionType()Lorg/aspectj/lang/reflect/AjType; = SoftenedExceptionType
org/aspectj/lang/reflect/FieldSignature = Org.Aspectj.Lang.Reflect.IFieldSignature
  getField()Ljava/lang/reflect/Field; = Field
  getFieldType()Ljava/lang/Class; = FieldType
org/aspectj/lang/reflect/InitializerSignature = Org.Aspectj.Lang.Reflect.IInitializerSignature
  getInitializer()Ljava/lang/reflect/Constructor; = Initializer
org/aspectj/lang/reflect/InterTypeConstructorDeclaration = Org.Aspectj.Lang.Reflect.IInterTypeConstructorDeclaration
  getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType; = GetExceptionTypes()
  getGenericParameterTypes()[Ljava/lang/reflect/Type; = GetGenericParameterTypes()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
org/aspectj/lang/reflect/InterTypeDeclaration = Org.Aspectj.Lang.Reflect.IInterTypeDeclaration
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getModifiers()I = Modifiers
  getTargetType()Lorg/aspectj/lang/reflect/AjType; = TargetType
org/aspectj/lang/reflect/InterTypeFieldDeclaration = Org.Aspectj.Lang.Reflect.IInterTypeFieldDeclaration
  getGenericType()Ljava/lang/reflect/Type; = GenericType
  getName()Ljava/lang/String; = Name
  getType()Lorg/aspectj/lang/reflect/AjType; = Type
org/aspectj/lang/reflect/InterTypeMethodDeclaration = Org.Aspectj.Lang.Reflect.IInterTypeMethodDeclaration
  getGenericReturnType()Ljava/lang/reflect/Type; = GenericReturnType
  getName()Ljava/lang/String; = Name
  getReturnType()Lorg/aspectj/lang/reflect/AjType; = ReturnType
  getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType; = GetExceptionTypes()
  getGenericParameterTypes()[Ljava/lang/reflect/Type; = GetGenericParameterTypes()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
  getTypeParameters()[Ljava/lang/reflect/TypeVariable; = GetTypeParameters()
org/aspectj/lang/reflect/LockSignature = Org.Aspectj.Lang.Reflect.ILockSignature
org/aspectj/lang/reflect/MemberSignature = Org.Aspectj.Lang.Reflect.IMemberSignature
org/aspectj/lang/reflect/MethodSignature = Org.Aspectj.Lang.Reflect.IMethodSignature
  getMethod()Ljava/lang/reflect/Method; = Method
  getReturnType()Ljava/lang/Class; = ReturnType
org/aspectj/lang/reflect/NoSuchAdviceException = Org.Aspectj.Lang.Reflect.NoSuchAdviceException
  <init>(Ljava/lang/String;)V = .ctor(string)
  getName()Ljava/lang/String; = Name
org/aspectj/lang/reflect/NoSuchPointcutException = Org.Aspectj.Lang.Reflect.NoSuchPointcutException
  <init>(Ljava/lang/String;)V = .ctor(string)
  getName()Ljava/lang/String; = Name
org/aspectj/lang/reflect/PerClause = Org.Aspectj.Lang.Reflect.IPerClause
  getKind()Lorg/aspectj/lang/reflect/PerClauseKind; = Kind
org/aspectj/lang/reflect/PerClauseKind = Org.Aspectj.Lang.Reflect.PerClauseKind
  PERCFLOW = Percflow
  PERCFLOWBELOW = Percflowbelow
  PERTARGET = Pertarget
  PERTHIS = Perthis
  PERTYPEWITHIN = Pertypewithin
  SINGLETON = Singleton
  valueOf(Ljava/lang/String;)Lorg/aspectj/lang/reflect/PerClauseKind; = ValueOf(string)
  values()[Lorg/aspectj/lang/reflect/PerClauseKind; = Values()
org/aspectj/lang/reflect/Pointcut = Org.Aspectj.Lang.Reflect.IPointcut
  getDeclaringType()Lorg/aspectj/lang/reflect/AjType; = DeclaringType
  getModifiers()I = Modifiers
  getName()Ljava/lang/String; = Name
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
  getParameterNames()[Ljava/lang/String; = GetParameterNames()
  getParameterTypes()[Lorg/aspectj/lang/reflect/AjType; = GetParameterTypes()
org/aspectj/lang/reflect/PointcutBasedPerClause = Org.Aspectj.Lang.Reflect.IPointcutBasedPerClause
  getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression; = PointcutExpression
org/aspectj/lang/reflect/PointcutExpression = Org.Aspectj.Lang.Reflect.IPointcutExpression
  asString()Ljava/lang/String; = AsString()
org/aspectj/lang/reflect/SignaturePattern = Org.Aspectj.Lang.Reflect.ISignaturePattern
  asString()Ljava/lang/String; = AsString()
org/aspectj/lang/reflect/SourceLocation = Org.Aspectj.Lang.Reflect.ISourceLocation
  getColumn()I = Column
  getFileName()Ljava/lang/String; = FileName
  getLine()I = Line
  getWithinType()Ljava/lang/Class; = WithinType
org/aspectj/lang/reflect/TypePattern = Org.Aspectj.Lang.Reflect.ITypePattern
  asString()Ljava/lang/String; = AsString()
org/aspectj/lang/reflect/TypePatternBasedPerClause = Org.Aspectj.Lang.Reflect.ITypePatternBasedPerClause
  getTypePattern()Lorg/aspectj/lang/reflect/TypePattern; = TypePattern
org/aspectj/lang/reflect/UnlockSignature = Org.Aspectj.Lang.Reflect.IUnlockSignature
org/aspectj/lang/Signature = Org.Aspectj.Lang.ISignature
  getDeclaringType()Ljava/lang/Class; = DeclaringType
  getDeclaringTypeName()Ljava/lang/String; = DeclaringTypeName
  getModifiers()I = Modifiers
  getName()Ljava/lang/String; = Name
  toLongString()Ljava/lang/String; = ToLongString()
  toShortString()Ljava/lang/String; = ToShortString()
  toString()Ljava/lang/String; = ToString()
org/aspectj/lang/SoftException = Org.Aspectj.Lang.SoftException
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  getWrappedThrowable()Ljava/lang/Throwable; = WrappedThrowable
org/aspectj/runtime/CFlow = Org.Aspectj.Runtime.CFlow
  <init>()V = .ctor()
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  getAspect()Ljava/lang/Object; = Aspect
  setAspect(Ljava/lang/Object;)V = Aspect
  get(I)Ljava/lang/Object; = Get(int)
org/aspectj/runtime/internal/AroundClosure = Org.Aspectj.Runtime.Internal.AroundClosure
  <init>()V = .ctor()
  <init>([Ljava/lang/Object;)V = .ctor(Java.Lang.Object[])
  bitflags = Bitflags
  preInitializationState = PreInitializationState
  state = State
  getFlags()I = Flags
  getPreInitializationState()[Ljava/lang/Object; = GetPreInitializationState()
  getState()[Ljava/lang/Object; = GetState()
  linkClosureAndJoinPoint()Lorg/aspectj/lang/ProceedingJoinPoint; = LinkClosureAndJoinPoint()
  linkClosureAndJoinPoint(I)Lorg/aspectj/lang/ProceedingJoinPoint; = LinkClosureAndJoinPoint(int)
  run([Ljava/lang/Object;)Ljava/lang/Object; = Run(Java.Lang.Object[])
org/aspectj/runtime/internal/CFlowCounter = Org.Aspectj.Runtime.Internal.CFlowCounter
  <init>()V = .ctor()
  isValid()Z = IsValid
  getThreadStackFactoryClassName()Ljava/lang/String; = ThreadStackFactoryClassName
  dec()V = Dec()
  inc()V = Inc()
org/aspectj/runtime/internal/CFlowPlusState = Org.Aspectj.Runtime.Internal.CFlowPlusState
  <init>([Ljava/lang/Object;)V = .ctor(Java.Lang.Object[])
  <init>([Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object[], Java.Lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadCounter = Org.Aspectj.Runtime.Internal.Cflowstack.IThreadCounter
  isNotZero()Z = IsNotZero
  dec()V = Dec()
  inc()V = Inc()
  removeThreadCounter()V = RemoveThreadCounter()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11 = Org.Aspectj.Runtime.Internal.Cflowstack.ThreadCounterImpl11
  <init>()V = .ctor()
  isNotZero()Z = IsNotZero
  dec()V = Dec()
  inc()V = Inc()
  removeThreadCounter()V = RemoveThreadCounter()
org/aspectj/runtime/internal/cflowstack/ThreadStack = Org.Aspectj.Runtime.Internal.Cflowstack.IThreadStack
  getThreadStack()Ljava/util/Stack; = ThreadStack
  removeThreadStack()V = RemoveThreadStack()
org/aspectj/runtime/internal/cflowstack/ThreadStackFactory = Org.Aspectj.Runtime.Internal.Cflowstack.IThreadStackFactory
  getNewThreadCounter()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter; = NewThreadCounter
  getNewThreadStack()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack; = NewThreadStack
org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl = Org.Aspectj.Runtime.Internal.Cflowstack.ThreadStackFactoryImpl
  <init>()V = .ctor()
  getNewThreadCounter()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter; = NewThreadCounter
  getNewThreadStack()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack; = NewThreadStack
org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl11 = Org.Aspectj.Runtime.Internal.Cflowstack.ThreadStackFactoryImpl11
  <init>()V = .ctor()
  getNewThreadCounter()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter; = NewThreadCounter
  getNewThreadStack()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack; = NewThreadStack
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11 = Org.Aspectj.Runtime.Internal.Cflowstack.ThreadStackImpl11
  <init>()V = .ctor()
  getThreadStack()Ljava/util/Stack; = ThreadStack
  removeThreadStack()V = RemoveThreadStack()
org/aspectj/runtime/internal/CFlowStack = Org.Aspectj.Runtime.Internal.CFlowStack
  <init>()V = .ctor()
  isValid()Z = IsValid
  getThreadStackFactoryClassName()Ljava/lang/String; = ThreadStackFactoryClassName
  get(I)Ljava/lang/Object; = Get(int)
  peek()Ljava/lang/Object; = Peek()
  peekCFlow()Lorg/aspectj/runtime/CFlow; = PeekCFlow()
  peekInstance()Ljava/lang/Object; = PeekInstance()
  peekTopCFlow()Lorg/aspectj/runtime/CFlow; = PeekTopCFlow()
  pop()V = Pop()
  push(Ljava/lang/Object;)V = Push(Java.Lang.Object)
  push([Ljava/lang/Object;)V = Push(Java.Lang.Object[])
  pushInstance(Ljava/lang/Object;)V = PushInstance(Java.Lang.Object)
org/aspectj/runtime/internal/Conversions = Org.Aspectj.Runtime.Internal.Conversions
  booleanObject(Z)Ljava/lang/Object; = BooleanObject(bool)
  booleanValue(Ljava/lang/Object;)Z = BooleanValue(Java.Lang.Object)
  byteObject(B)Ljava/lang/Object; = ByteObject(sbyte)
  byteValue(Ljava/lang/Object;)B = ByteValue(Java.Lang.Object)
  charObject(C)Ljava/lang/Object; = CharObject(char)
  charValue(Ljava/lang/Object;)C = CharValue(Java.Lang.Object)
  doubleObject(D)Ljava/lang/Object; = DoubleObject(double)
  doubleValue(Ljava/lang/Object;)D = DoubleValue(Java.Lang.Object)
  floatObject(F)Ljava/lang/Object; = FloatObject(float)
  floatValue(Ljava/lang/Object;)F = FloatValue(Java.Lang.Object)
  intObject(I)Ljava/lang/Object; = IntObject(int)
  intValue(Ljava/lang/Object;)I = IntValue(Java.Lang.Object)
  longObject(J)Ljava/lang/Object; = LongObject(long)
  longValue(Ljava/lang/Object;)J = LongValue(Java.Lang.Object)
  shortObject(S)Ljava/lang/Object; = ShortObject(short)
  shortValue(Ljava/lang/Object;)S = ShortValue(Java.Lang.Object)
  voidObject()Ljava/lang/Object; = VoidObject()
  voidValue(Ljava/lang/Object;)Ljava/lang/Object; = VoidValue(Java.Lang.Object)
org/aspectj/runtime/internal/PerObjectMap = Org.Aspectj.Runtime.Internal.PerObjectMap
  <init>()V = .ctor()
org/aspectj/runtime/reflect/Factory = Org.Aspectj.Runtime.Reflect.Factory
  <init>(Ljava/lang/String;Ljava/lang/Class;)V = .ctor(string, Java.Lang.Class)
  makeAdviceSig(ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/AdviceSignature; = MakeAdviceSig(int, string, Java.Lang.Class, Java.Lang.Class[], string[], Java.Lang.Class[], Java.Lang.Class)
  makeAdviceSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceSignature; = MakeAdviceSig(string)
  makeAdviceSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceSignature; = MakeAdviceSig(string, string, string, string, string, string, string)
  makeCatchClauseSig(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature; = MakeCatchClauseSig(Java.Lang.Class, Java.Lang.Class, string)
  makeCatchClauseSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature; = MakeCatchClauseSig(string)
  makeCatchClauseSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature; = MakeCatchClauseSig(string, string, string)
  makeConstructorSig(ILjava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;)Lorg/aspectj/lang/reflect/ConstructorSignature; = MakeConstructorSig(int, Java.Lang.Class, Java.Lang.Class[], string[], Java.Lang.Class[])
  makeConstructorSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/ConstructorSignature; = MakeConstructorSig(string)
  makeConstructorSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/ConstructorSignature; = MakeConstructorSig(string, string, string, string, string)
  makeEncSJP(Ljava/lang/reflect/Member;)Lorg/aspectj/lang/JoinPoint$StaticPart; = MakeEncSJP(Java.Lang.Reflect.IMember)
  makeESJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart; = MakeESJP(string, Org.Aspectj.Lang.ISignature, int)
  makeESJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;II)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart; = MakeESJP(string, Org.Aspectj.Lang.ISignature, int, int)
  makeESJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart; = MakeESJP(string, Org.Aspectj.Lang.ISignature, Org.Aspectj.Lang.Reflect.ISourceLocation)
  makeFieldSig(ILjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/FieldSignature; = MakeFieldSig(int, string, Java.Lang.Class, Java.Lang.Class)
  makeFieldSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/FieldSignature; = MakeFieldSig(string)
  makeFieldSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/FieldSignature; = MakeFieldSig(string, string, string, string)
  makeInitializerSig(ILjava/lang/Class;)Lorg/aspectj/lang/reflect/InitializerSignature; = MakeInitializerSig(int, Java.Lang.Class)
  makeInitializerSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/InitializerSignature; = MakeInitializerSig(string)
  makeInitializerSig(Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/InitializerSignature; = MakeInitializerSig(string, string)
  makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint; = MakeJP(Org.Aspectj.Lang.IJoinPointStaticPart, Java.Lang.Object, Java.Lang.Object)
  makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint; = MakeJP(Org.Aspectj.Lang.IJoinPointStaticPart, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint; = MakeJP(Org.Aspectj.Lang.IJoinPointStaticPart, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
  makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint; = MakeJP(Org.Aspectj.Lang.IJoinPointStaticPart, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object[])
  makeLockSig()Lorg/aspectj/lang/reflect/LockSignature; = MakeLockSig()
  makeLockSig(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/LockSignature; = MakeLockSig(Java.Lang.Class)
  makeLockSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/LockSignature; = MakeLockSig(string)
  makeMethodSig(ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/MethodSignature; = MakeMethodSig(int, string, Java.Lang.Class, Java.Lang.Class[], string[], Java.Lang.Class[], Java.Lang.Class)
  makeMethodSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/MethodSignature; = MakeMethodSig(string)
  makeMethodSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/MethodSignature; = MakeMethodSig(string, string, string, string, string, string, string)
  makeSJP(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$StaticPart; = MakeSJP(string, string, string, string, string, string, string, int)
  makeSJP(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$StaticPart; = MakeSJP(string, string, string, string, string, string, string, string, int)
  makeSJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;I)Lorg/aspectj/lang/JoinPoint$StaticPart; = MakeSJP(string, Org.Aspectj.Lang.ISignature, int)
  makeSJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;II)Lorg/aspectj/lang/JoinPoint$StaticPart; = MakeSJP(string, Org.Aspectj.Lang.ISignature, int, int)
  makeSJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)Lorg/aspectj/lang/JoinPoint$StaticPart; = MakeSJP(string, Org.Aspectj.Lang.ISignature, Org.Aspectj.Lang.Reflect.ISourceLocation)
  makeSourceLoc(II)Lorg/aspectj/lang/reflect/SourceLocation; = MakeSourceLoc(int, int)
  makeUnlockSig()Lorg/aspectj/lang/reflect/UnlockSignature; = MakeUnlockSig()
  makeUnlockSig(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/UnlockSignature; = MakeUnlockSig(Java.Lang.Class)
  makeUnlockSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/UnlockSignature; = MakeUnlockSig(string)
org/aspectj/runtime/reflect/FieldSignatureImpl = Org.Aspectj.Runtime.Reflect.FieldSignatureImpl
  getDeclaringType()Ljava/lang/Class; = DeclaringType
  getDeclaringTypeName()Ljava/lang/String; = DeclaringTypeName
  getField()Ljava/lang/reflect/Field; = Field
  getFieldType()Ljava/lang/Class; = FieldType
  getModifiers()I = Modifiers
  getName()Ljava/lang/String; = Name
  setLookupClassLoader(Ljava/lang/ClassLoader;)V = SetLookupClassLoader(Java.Lang.ClassLoader)
  toLongString()Ljava/lang/String; = ToLongString()
  toShortString()Ljava/lang/String; = ToShortString()
  toString()Ljava/lang/String; = ToString()
